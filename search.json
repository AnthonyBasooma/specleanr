[{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://anthonybasooma.github.io/specleanr/articles/Plants.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Detecting environmental outliers in species distribution models for plants.","text":"Amatulli, Giuseppe, et al. “Hydrography90m: new high-resolution global hydrographic dataset.” Earth System Science Data 14.10 (2022): 4525-4550. Harvey-Brown, Y., Barstow, M., Mark, J. & Rivers, M.C. 2017. Populus nigra. IUCN Red List Threatened Species 2017: e.T63530A68106816. https://dx.doi.org/10.2305/IUCN.UK.2017-3.RLTS.T63530A68106816.en. Accessed 24 June 2024. de Rigo, D., Enescu, C.M., Houston Durrant, T. Caudullo, G. 2016. Populus nigra Europe: distribution, habitat, usage threats. European Atlas Forest Tree Species, Publications Office European Union, Luxembourg. Barstow, M. & Beech, E. 2018. Fagus sylvatica. IUCN Red List Threatened Species 2018: e.T62004722A62004725. https://dx.doi.org/10.2305/IUCN.UK.2018-1.RLTS.T62004722A62004725.en. Accessed 24 June 2024.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"h g. Author, maintainer.           0","code":""},{"path":"https://anthonybasooma.github.io/specleanr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"g h (2024). specleanr: Detecting Environmental Outliers Biogeographical Modeling Workflows. R package version 0.1.0, https://anthonybasooma.github.io/specleanr/, https://github.com/AnthonyBasooma/specleanr.","code":"@Manual{,   title = {specleanr: Detecting Environmental Outliers in Biogeographical Modeling Workflows},   author = {h g},   year = {2024},   note = {R package version 0.1.0, https://anthonybasooma.github.io/specleanr/},   url = {https://github.com/AnthonyBasooma/specleanr}, }"},{"path":[]},{"path":[]},{"path":"https://anthonybasooma.github.io/specleanr/index.html","id":"package-installation","dir":"","previous_headings":"specleanr","what":"Package installation","title":"Detecting Environmental Outliers in Biogeographical Modeling Workflows","text":"Development version GitHub: CRAN version package aims improve reliability acceptability biogeographical models, including species distribution models, ecological niche models, bioclimatic envelope models, detecting outliers environmental predictors. package, collate 20 outlier detection methods, user can collectively apply (ensemble outlier detection) determine whether species records suitable environmental space. package complements packages address geographical, taxonomic, temporal checks.","code":"# install.packages(\"remotes\") ### install.packages(\"specleanr\")"},{"path":"https://anthonybasooma.github.io/specleanr/index.html","id":"process-of-identifying-environmental-outliers","dir":"","previous_headings":"specleanr","what":"Process of identifying environmental outliers.","title":"Detecting Environmental Outliers in Biogeographical Modeling Workflows","text":"process identifying environmental outliers generally classified four steps detailed ; Arranging species records environmental data. includes collecting species data either online sources locally stored data. user can check species records geographical, taxonomic, temporal inconsistencies missing coordinates, interchanged coordinates, species name spelling mistakes, wrong event dates. Environmental data, mainly raster format, based chiefly user needs, numerous sources include WORLDCLIM (Fick & Hijmans, 2017) CHELSA (Karger et al., 2017) bioclimatic variables; Hydrography90m stream river-based hydromorphological parameters stream order, flow accumulation, stream power index, stream transportation index (Amatulli et al., 2022); Copernicus land use changes https://www.copernicus.eu/en. Extracting environmental predictors. environmental predictors extracted points species recorded present absent. extracted dataset forms species reference dataset environmental outlier checks. package included pred_extract() extract environmental predictors. Ensemble multiple methods outlier detection. Multiple outlier detection methods used; method flags outliers dataset. outliers compared among methods determine records, flagged several methods called absolute outliers true outliers. total number methods user can ensemble user-based; however, expect user set least three outlier detection methods. methods also least different categories, include 1) univariate methods, 2) multivariate methods, 3) ecological ranges. must set methods using multidetect() function individual method functions allow seamless comparison. Univariate methods methods detect outliers one environmental predictor. strongly advisable user selects environmental predictor directly affects species distribution, example, minimum temperature coldest month (IUCN 2012; Logez et al., 2012). Multivariate methods methods detect outliers multiple environmental predictors (multidimensional space). User exclude unnecessary columns coordinates included computation. Ecological ranges user collates species optimal ecological ranges identify species records outside known optimal ranges. package, single species, optimal ranges (minimum, maximum, mean values) provided manually, user required set environmental predictor used flagging outliers. dataset minimum maximum values (optimal ranges) allowed multiple species. Note taxa fish, included thermal_ranges() geo_ranges() functions, user can set flag records exceeding FishBase collated temperature latitudinal/longitudinal ranges. user word optimal must used multidetect() function seamless comparisons methods. Extract species environmental without outliers reference dataset Step 2 lists outliers flagged method Step 3 used retain clean dataset. hood, two approaches implemented 1) absolute method: absolute outliers removed particular threshold 2) suitable best outlier detection method method highest proportion absolute outliers highest similarity methods (terms outliers flagged) can used. threshold parameter measure proportion methods flagged record outlier total number methods used. clean_data_extract() extract clean data using reference data outliers single species. Post-environmental outlier removal environmental outlier removal, user can examine improvement model performance environmental outlier removal. following function can used. sdmfit() fit Generalized Linear Model (GLM) Random Forest (RF). modelcomparison() compare model performance outlier removal using threshold-dependent independent metrics Area Curve, true skill statistics, specificity, sensitivity, kappa, accuracy. get_performance() obtain dataset performance values scenarios. ggperform() ploting threshold results modelcomparison() output. Package website access details package, please check website https://anthonybasooma.github.io/specleanr/","code":""},{"path":"https://anthonybasooma.github.io/specleanr/index.html","id":"package-citation","dir":"","previous_headings":"specleanr","what":"Package citation","title":"Detecting Environmental Outliers in Biogeographical Modeling Workflows","text":"review","code":""},{"path":"https://anthonybasooma.github.io/specleanr/index.html","id":"references","dir":"","previous_headings":"specleanr","what":"References","title":"Detecting Environmental Outliers in Biogeographical Modeling Workflows","text":"Amatulli, G., Garcia Marquez, J., Sethi, T., Kiesel, J., Grigoropoulou, ., Üblacker, M. M., Shen, L. Q., & Domisch, S. (2022). Hydrography90m: new high-resolution global hydrographic dataset. Earth System Science Data, 14(10), 4525–4550. https://doi.org/10.5194/essd-14-4525-2022 Fick, S. E., & Hijmans, R. J. (2017). WorldClim 2: new 1-km spatial resolution climate surfaces global land areas. International Journal Climatology, 37(12), 4302–4315. https://doi.org/10.1002/joc.5086 Karger, D. N., Conrad, O., Böhner, J., Kawohl, T., Kreft, H., Soria-Auza, R. W., Zimmermann, N. E., Linder, H. P., & Kessler, M. (2017). Climatologies high resolution earth’s land surface areas. Scientific Data, 4. https://doi.org/10.1038/sdata.2017.122 Logez, M., Belliard, J., Melcher, ., Kremser, H., Pletterbauer, F., Schmutz, S., Gorges, G., Delaigue, O., & Pont, D. (2012). Deliverable D5.1-3: BQEs sensitivity global/climate change European rivers: implications reference conditions pressure-impact-recovery chains. IUCN Standards Petitions Committee. (2022). IUCN RED LIST THREATENED SPECIESTM Guidelines Using IUCN Red List Categories Criteria Prepared Standards Petitions Committee IUCN Species Survival Commission. https://www.iucnredlist.org/documents/RedListGuidelines.pdf.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/adjustboxplots.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust the boxplots bounding fences using medcouple to flag suspicious outliers (Hubert & Vandervieren 2008). — adjustboxplots","title":"Adjust the boxplots bounding fences using medcouple to flag suspicious outliers (Hubert & Vandervieren 2008). — adjustboxplots","text":"Adjust boxplots bounding fences using medcouple flag suspicious outliers (Hubert & Vandervieren 2008).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/adjustboxplots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust the boxplots bounding fences using medcouple to flag suspicious outliers (Hubert & Vandervieren 2008). — adjustboxplots","text":"","code":"adjustboxplots(data, var, output, a = -4, b = 3, coef = 1.5)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/adjustboxplots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust the boxplots bounding fences using medcouple to flag suspicious outliers (Hubert & Vandervieren 2008). — adjustboxplots","text":"data Dataframe check outliers var Environmental parameter considered flagging suspicious outliers output Either clean: dataframe suspicious outliers outlier: return dataframe outliers Constant adjusted boxplots b Constant adjusted boxplots coef Constant adjusted boxplots","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/adjustboxplots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust the boxplots bounding fences using medcouple to flag suspicious outliers (Hubert & Vandervieren 2008). — adjustboxplots","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/adjustboxplots.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Adjust the boxplots bounding fences using medcouple to flag suspicious outliers (Hubert & Vandervieren 2008). — adjustboxplots","text":"Hubert M, Vandervieren E. 2008. adjusted boxplot skewed distributions. Computational Statistics Data Analysis 52:5186-5201.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/adjustboxplots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust the boxplots bounding fences using medcouple to flag suspicious outliers (Hubert & Vandervieren 2008). — adjustboxplots","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd , lat = 'decimalLatitude', lon= 'decimalLongitude',                           colsp = 'speciescheck',                           bbox = db,                           multiple = TRUE,                           minpts = 10)   adout <- adjustboxplots(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier')  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/basinranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Records within a particular basin range based on Tesedesco at al., 2017 — basinranges","title":"Records within a particular basin range based on Tesedesco at al., 2017 — basinranges","text":"Records within particular basin range based Tesedesco al., 2017","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/basinranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Records within a particular basin range based on Tesedesco at al., 2017 — basinranges","text":"","code":"basinranges(   occurrences,   species,   lat,   lon,   verbose = TRUE,   discard = TRUE,   output = \"records\" )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/basinranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Records within a particular basin range based on Tesedesco at al., 2017 — basinranges","text":"occurrences Species occurrences particular check basin lie species species name considered recorded occurrences lat, lon latitude longitude column names species occurrences records. verbose Whether implementation messages shown. Default TRUE. discard Whether discard records basins . Default FALSE. output Whether produce records basin files. Default records.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/basinranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Records within a particular basin range based on Tesedesco at al., 2017 — basinranges","text":"species occurrence records basins found.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/basinranges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Records within a particular basin range based on Tesedesco at al., 2017 — basinranges","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  sal <- subset(efidata, scientificName=='Anguilla anguilla')  br <- basinranges(occurrences = sal, species = \"Anguilla anguilla\",                   lat = 'decimalLatitude', lon = 'decimalLongitude') } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/batch_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract oultiers for multiple species — batch_extract","title":"Extract oultiers for multiple species — batch_extract","text":"Extract oultiers multiple species","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/batch_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract oultiers for multiple species — batch_extract","text":"","code":"batch_extract(x)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/batch_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract oultiers for multiple species — batch_extract","text":"x Species list","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/batch_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract oultiers for multiple species — batch_extract","text":"data frame outliers multiple species","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/batch_extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract oultiers for multiple species — batch_extract","text":"","code":"if (FALSE) { # \\dontrun{  #mult data extract  data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                       lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection  outliers <- multidetect(data = extdf, output='outlier',                        exclude = c('x','y'), multiple = TRUE,                        methods = c('mixediqr', \"iqr\", \"kmeans\", \"mahal\"),                        kmpar =list(k=6, method='silhouette', mode='soft'))  extractbatch <- batch_extract(x=outliers) } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/bestmethod.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies the best method for outlier detection for a single species. — bestmethod","title":"Identifies the best method for outlier detection for a single species. — bestmethod","text":"Identifies best method outlier detection single species.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/bestmethod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies the best method for outlier detection for a single species. — bestmethod","text":"","code":"bestmethod(   x,   sp = NULL,   threshold = NULL,   autothreshold = FALSE,   warn = FALSE,   verbose = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/bestmethod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies the best method for outlier detection for a single species. — bestmethod","text":"x List dataframes methods used identify outliers multdetect function. sp species name index multiple species considered outlier detection. threshold Maximum value denote absolute outlier. threshold ranges 0 indicates point flagged outlier detection method outlier 1, means record absolute true outlier sicen identified methods. extremes, low threshold values, many records classified, may due individual method weakness strength data distribution. Also, higher threshold values, true outliers retained Fo example, 10 methods considered 9 methods flags record outlier, cut 1 used, particular record retained. Therefore default cutoff 0.6 autothreshold can used select appropriate threshold. autothreshold Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL. warn TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. verbose TRUE messages warnings produced. Default FALSE.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/bestmethod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies the best method for outlier detection for a single species. — bestmethod","text":"best method identifying outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/bestmethod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies the best method for outlier detection for a single species. — bestmethod","text":"","code":"if (FALSE) { # \\dontrun{  data(\"jdsdata\")  matchdata <- match_datasets(datasets = list(jds = jdsdata, efi=efidata),                             lats = 'lat',                             lons = 'lon',                             species = c('speciesname','scientificName'),                             date = c('Date', 'sampling_date'),                             country = c('JDS4_site_ID'))   datacheck <- check_names(matchdata, colsp= 'species', pct = 90, merge =TRUE)   db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet=TRUE)   worldclim <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  rdata <- pred_extract(data = datacheck,                      raster= worldclim ,                      lat = 'decimalLatitude',                     lon= 'decimalLongitude',                     colsp = 'speciescheck',                     bbox = db,                      multiple = TRUE,                     minpts = 10,                     list=TRUE,                     merge=F)   out_df <- multidetect(data = rdata, multiple = TRUE,                      var = 'bio6',                      output = 'outlier',                      exclude = c('x','y'),                      methods = c('zscore', 'adjbox','iqr', 'semiqr','hampel', 'kmeans',                                 'logboxplot', 'lof','iforest', 'mahal', 'seqfences'))  bmout <- bestmethod(x = out_df, sp= 1, threshold = 0.2)#   } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/boots.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating sub-samples for modeling evaluation. — boots","title":"Creating sub-samples for modeling evaluation. — boots","text":"Creating sub-samples modeling evaluation.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/boots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating sub-samples for modeling evaluation. — boots","text":"","code":"boots(data, nboots, setseed = 1234, testprob = 0.2)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/boots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating sub-samples for modeling evaluation. — boots","text":"data dataframe sub sampled partitioned. nboots integer indicating number iterations sub sampling conducted. setseed integer allow reproducibility sub-samples across platforms users. testprob decimal ranging least 0.1 1. probability used partitioning data.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/boots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating sub-samples for modeling evaluation. — boots","text":"list training test data sets use sdmfit.","code":""},{"path":[]},{"path":"https://anthonybasooma.github.io/specleanr/reference/boots.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creating sub-samples for modeling evaluation. — boots","text":"##","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/boots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating sub-samples for modeling evaluation. — boots","text":"","code":"if (FALSE) { # \\dontrun{  data(jdsdata)  #select species with enough records  worldclim <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  dataprep <- envextract(occurences = jdsdata, raster = worldclim,                       lat = \"lat\", lon = \"lon\", binary = FALSE, prop = 0.8)  nboots <- boots(data = dataprep, nboots = 10, testprob = 0.3)  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/check.exclude.html","id":null,"dir":"Reference","previous_headings":"","what":"indicate excluded columns. — check.exclude","title":"indicate excluded columns. — check.exclude","text":"indicate excluded columns.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check.exclude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"indicate excluded columns. — check.exclude","text":"","code":"check.exclude(x, exclude, quiet = TRUE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/check.exclude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"indicate excluded columns. — check.exclude","text":"x dataframe columns exclude. exclude columns exclude. quiet TRUE implementation messages shown. Default FALSE.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check.exclude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"indicate excluded columns. — check.exclude","text":"columns excluded dataset.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonise dates form different data sets — check_dates","title":"Harmonise dates form different data sets — check_dates","text":"Harmonise dates form different data sets","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonise dates form different data sets — check_dates","text":"","code":"check_dates(x, month = NULL)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonise dates form different data sets — check_dates","text":"x vector list dates month position month, date 03/04/2020. Indicate month 04, therefore month = 'middle' month= 'lastfirst' month 03","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonise dates form different data sets — check_dates","text":"Standardised dates","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Harmonise dates form different data sets — check_dates","text":"","code":"if (FALSE) { # \\dontrun{  data(efidata)  efidates <- check_dates(x= efiplus$Date, month ='middle')  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Check species names for inconsistencies — check_names","title":"Check species names for inconsistencies — check_names","text":"Check species names inconsistencies","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check species names for inconsistencies — check_names","text":"","code":"check_names(   data,   colsp = NULL,   verbose = FALSE,   pct = 90,   merge = F,   sn = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check species names for inconsistencies — check_names","text":"data Data frame species names checked FishBase. colsp variable data species column names. verbose indicate merges checking names. default FALSE show whether species Fish base found. pct percentage similarity used assign relatively similar name FishBase exact match absent. Default 90 higher values, higher percentage similarity considered replace species name cheeked Fishbase. merge Default FALSE, merge cleaned species column data frame rather two columns returned. sn whether consider synonyms. Default FALSE accepted names considered FishBase database.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check species names for inconsistencies — check_names","text":"Data frame names corrected cleaned species names.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check species names for inconsistencies — check_names","text":"function produces data set species names corresponding Fishase. synoynm provided data set, function defualt return accepted name. However, synoymn desired, set sn parameter TRUE. function also check spellings species names returns name closer one FishBase particular degree similarity set pct parameter. pct 1 indicates name must 100 user can iterate different pct decide return name right wrong. function necessary species names clean also taxa.","code":""},{"path":[]},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check species names for inconsistencies — check_names","text":"","code":"if (FALSE) { # \\dontrun{  data(jdsdata)  data(efidata)  #step 1. match and bind datasets if more than one datasets  matchdata <- match_datasets(datasets = list(jds = jdsdata, efi = efidata),                           lats = 'lat',                           lons = 'lon',                           species = c('speciesname','scientificName'),                           country=c('JDS4_site_ID'),                           date=c('Date', 'sampling_date'))  #clean species names to produce one dataset.  datafull <- check_names(data= matchdata, colsp='species', pct = 90, merge = TRUE)  data2col <- check_names(data = matchdata, colsp='species', pct = 90) #two columns generated  cleansp_name <- check_names(data= 'slamo trutta', pct=90) #wrong names vs FB suggestion  clean_sp_epithet <- check_names(data = 'Salmo trutta fario') #Salmo trutta will be returned  speciesepithet2 <- check_names(data = 'Salmo trutta lacustris', pct=90)  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_natura.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether species is on NATURA2000 list — check_natura","title":"Check whether species is on NATURA2000 list — check_natura","text":"Check whether species NATURA2000 list","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_natura.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether species is on NATURA2000 list — check_natura","text":"","code":"check_natura(x, quiet = TRUE, details = FALSE, citeshow = TRUE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_natura.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether species is on NATURA2000 list — check_natura","text":"x Dataframe vector names. quiet TRUE hide implementation messages FALSE show messages. Default FALSE. details TRUE give species details country found FALSE whether species NATURA2000. Default FALSE. citeshow Show data citation . Default TRUE","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_natura.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether species is on NATURA2000 list — check_natura","text":"species list","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_natura.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether species is on NATURA2000 list — check_natura","text":"","code":"if (FALSE) { # \\dontrun{  salmo <- check_natura(x=\"Salmo trutta\")  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_taxa_names.html","id":null,"dir":"Reference","previous_headings":"","what":"standardize species names. — check_taxa_names","title":"standardize species names. — check_taxa_names","text":"standardize species names.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_taxa_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"standardize species names. — check_taxa_names","text":"","code":"check_taxa_names(spp, verbose, accept = TRUE, ...)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_taxa_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"standardize species names. — check_taxa_names","text":"spp species name provided user. verbose Default TRUE show implementation messages. accept user can reject accept suggested name changing default TRUE FALSE ... arguments allowed. See gnr_resolve details.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_taxa_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"standardize species names. — check_taxa_names","text":"species name standardized taxize package","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/clean_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract final clean data using either absolute or best method generated outliers. — clean_data","title":"Extract final clean data using either absolute or best method generated outliers. — clean_data","text":"Extract final clean data using either absolute best method generated outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/clean_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract final clean data using either absolute or best method generated outliers. — clean_data","text":"","code":"clean_data(   data,   outliers,   sp = NULL,   mode = \"best\",   colsp = NULL,   threshold = NULL,   verbose = FALSE,   warn = FALSE,   pabs = 0.1,   autothreshold = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/clean_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract final clean data using either absolute or best method generated outliers. — clean_data","text":"data reference data species used outlier detection. outliers Output outlier detection process. sp species name. NULL single species considered outlier detection. mode Either absolute use absolute outliers filter data bestmethod outliers best method colsp parameter used data data frame user must indicate column wih species names. threshold value consider whether outlier absolute outlier . verbose Produces messages . Default FALSE. ###param multiple TRUE multiple species FALSE single species considered outlier detection. warn FALSE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. pabs Percentage outliers allowed extracted data. best used extract outliers pabs exceeded, absolute outliers removed instead. records  best methods repeated likely remove true values outliers. autothreshold Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/clean_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract final clean data using either absolute or best method generated outliers. — clean_data","text":"cleaned data frame species records.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/clean_data_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract cleaned record for multiple species. — clean_data_extract","title":"Extract cleaned record for multiple species. — clean_data_extract","text":"Extract cleaned record multiple species.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/clean_data_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract cleaned record for multiple species. — clean_data_extract","text":"","code":"clean_data_extract(   refdata,   outliers,   mode = \"best\",   colsp = NULL,   threshold = NULL,   warn = FALSE,   verbose = FALSE,   autothreshold = FALSE,   pabs = 0.1 )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/clean_data_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract cleaned record for multiple species. — clean_data_extract","text":"refdata Species data frame precleaned analysis outliers Output outlier detection mode Either consider similarity measure consider suitable method custom. indicate similarity measures interest. simple matching coefficient, jaccard, sorensen, overlap coefficient can used. Otherwise data frame produced. Default FALSE. colsp Column species names. threshold value consider whether outlier absolute outlier . warn TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. verbose Produces messages . Default FALSE. autothreshold Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL. pabs Percentage outliers allowed extracted data. best used extract outliers pabs exceeded, absolute outliers removed instead. records  best methods repeated likely remove true values outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/clean_data_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract cleaned record for multiple species. — clean_data_extract","text":"Either list data frame cleaned records multiple species.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/clean_data_extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract cleaned record for multiple species. — clean_data_extract","text":"","code":"if (FALSE) { # \\dontrun{  data(jdsdata) data(efidata) matchdata <- match_datasets(datasets = list(jds = jdsdata, efi = efidata),                             lats = 'lat',                             lons = 'lon',                             species = c('speciesname','scientificName'),                             country= c('JDS4_site_ID'),                             date=c('sampling_date', 'Date'))  datacheck <- check_names(matchdata, colsp= 'species', pct = 90, merge =TRUE)   db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet=TRUE)   worldclim <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  rdata <- pred_extract(data = datacheck,                       raster= worldclim ,                       lat = 'decimalLatitude',                       lon= 'decimalLongitude',                       colsp = 'speciescheck',                       bbox = db,                       multiple = TRUE,                       minpts = 10,                       list=TRUE,                       merge=F)   out_df <- multidetect(data = rdata, multiple = TRUE,                       var = 'bio6',                       output = 'outlier',                       exclude = c('x','y'),                       methods = c('zscore', 'adjbox','iqr', 'semiqr','hampel'))  #extracting use the absolute method for one species  extractabs <- clean_data_extract(refdata = rdata, outliers = out_df,                                  mode = 'abs', threshold = 0.6,                                  autothreshold = FALSE)  bestmout_bm <- clean_data_extract(refdata = rdata, outliers = out_df,                                   mode = 'best', threshold = 0.6,                                  autothreshold = FALSE) } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/clean_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to clean dates before checking for consitencies — clean_date","title":"Internal function to clean dates before checking for consitencies — clean_date","text":"Internal function clean dates checking consitencies","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/clean_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to clean dates before checking for consitencies — clean_date","text":"","code":"clean_date(x)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/clean_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to clean dates before checking for consitencies — clean_date","text":"x Date cleaned","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/clean_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to clean dates before checking for consitencies — clean_date","text":"cleaned date","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/clean_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal function to clean dates before checking for consitencies — clean_date","text":"","code":"if (FALSE) { # \\dontrun{  date <- clean_date(x = '12 january 2010')  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/clean_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to clean names before checking them with fishbase — clean_names","title":"Internal function to clean names before checking them with fishbase — clean_names","text":"Internal function clean names checking fishbase","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/clean_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to clean names before checking them with fishbase — clean_names","text":"","code":"clean_names(sp)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/clean_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to clean names before checking them with fishbase — clean_names","text":"sp species names","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/clean_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to clean names before checking them with fishbase — clean_names","text":"corrected species","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/clean_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal function to clean names before checking them with fishbase — clean_names","text":"","code":"if (FALSE) { # \\dontrun{  speciesname <- clean_names(sp='salmo trutta??')  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/cosine.html","id":null,"dir":"Reference","previous_headings":"","what":"Cosine similarity index based on (Gautam & Kulkarni 2014; Joy & Renumol 2020) — cosine","title":"Cosine similarity index based on (Gautam & Kulkarni 2014; Joy & Renumol 2020) — cosine","text":"Cosine similarity index based (Gautam & Kulkarni 2014; Joy & Renumol 2020)","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/cosine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cosine similarity index based on (Gautam & Kulkarni 2014; Joy & Renumol 2020) — cosine","text":"","code":"cosine(x, sp = NULL, threshold = NULL, warn = TRUE, autothreshold = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/cosine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cosine similarity index based on (Gautam & Kulkarni 2014; Joy & Renumol 2020) — cosine","text":"x List data frames methods used identify outliers mult_detect function. sp species name index multiple species considered outlier detection. threshold Maximum value denote absolute outlier. threshold ranges 0 indicates point flagged outlier detection method outlier 1, means record absolute true outlier sicen identified methods. extremes, low threshold values, many records classified, may due individual method weakness strength data distribution. Also, higher threshold values, true outliers retained Fo example, 10 methods considered 9 methods flags record outlier, cut 1 used, particular record retained. Therefore default cutoff 0.6 autothreshold can used select appropriate threshold. warn TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. autothreshold Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/cosine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cosine similarity index based on (Gautam & Kulkarni 2014; Joy & Renumol 2020) — cosine","text":"best method identifying outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/cosine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cosine similarity index based on (Gautam & Kulkarni 2014; Joy & Renumol 2020) — cosine","text":"","code":"if (FALSE) { # \\dontrun{  data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                     lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection  outliers <- multidetect(data = extdf, var = 'bio6', output='outlier',                        exclude = c('x','y'), multiple = TRUE,                        methods = c('mixediqr', \"iqr\", \"kmeans\", \"mahal\"),                        kmpar =list(k=6, method='silhouette', mode='soft'))  consineout <- cosine(x = outliers, sp= 1, threshold = 0.2, var = 'bio6')#   } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/datacleaner-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Outlier detection class for multiple methods — datacleaner-class","title":"Outlier detection class for multiple methods — datacleaner-class","text":"Outlier detection class multiple methods","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/datacleaner-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Outlier detection class for multiple methods — datacleaner-class","text":"result List data sets outliers detected. mode Either ´TRUE´ multiple species FALSE one species. varused variable used outlier detection, useful univariate outlier detection methods. Either outliers clean dataset outputted. methodsused methods used outlier detection. dfname dataframe name aid tracking clean data extraction. excluded whether columns excluded outlier detection. useful multivariate methods coordinates removed data.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dataonline-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Data online class — dataonline-class","title":"Data online class — dataonline-class","text":"Data online class","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dataonline-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Data online class — dataonline-class","text":"output List datasets database.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dateformats.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard date formats — dateformats","title":"Standard date formats — dateformats","text":"tibble Dates standard dataframe. Extensible package author","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dateformats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard date formats — dateformats","text":"","code":"data(dateformats)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/dateformats.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Standard date formats — dateformats","text":"tibble 2 columns 52 rows date formats.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dateformats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standard date formats — dateformats","text":"Standard date formats cleaning provided dates users","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dateformats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard date formats — dateformats","text":"","code":"if (FALSE) { # \\dontrun{  data(\"dateformats\") dateformats } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/dep.html","id":null,"dir":"Reference","previous_headings":"","what":"Threshold dependent parameters for species distribution model evaluations. — dep","title":"Threshold dependent parameters for species distribution model evaluations. — dep","text":"Threshold dependent parameters species distribution model evaluations.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Threshold dependent parameters for species distribution model evaluations. — dep","text":"","code":"dep(observed, predicted, P, A)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/dep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Threshold dependent parameters for species distribution model evaluations. — dep","text":"observed observed occurrences species. predicted fitted model obtained sdmfit P Character presence label. Important indicate presence/absence character correctly compute evaluation metric evaluate function. Character absence label. Important indicate presence/absence character correctly compute evaluation metric evaluate function.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Threshold dependent parameters for species distribution model evaluations. — dep","text":"list threshold dependent metrics models evaluation.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Threshold dependent parameters for species distribution model evaluations. — dep","text":"threshold-dependent metrics vary cutoff changed. default 0.5 indicates probabilities greater 0.5 recorded species present less 0.5 indicates absence species. However, cutoff increased, probabilities converted positive reduce also model evaluation metrics sensitivity, specificity accuracy changes significantly. Different literature used compute metrics including (Allouche et al. 2006) (Erickson & Kitamura 2021).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dep.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Threshold dependent parameters for species distribution model evaluations. — dep","text":"Allouche O, Tsoar , Kadmon R. 2006. Assessing accuracy species distribution models: Prevalence,  kappa true skill statistic (TSS). Journal Applied Ecology 43:1221-1232. Erickson BJ, Kitamura F. 2021. Magician's corner: 9. performance metrics machine learning models.  Radiology: Artificial Intelligence 3:1-7.","code":""},{"path":[]},{"path":"https://anthonybasooma.github.io/specleanr/reference/detect.html","id":null,"dir":"Reference","previous_headings":"","what":"Flags outliers or no outliers for multiple outlier methods. — detect","title":"Flags outliers or no outliers for multiple outlier methods. — detect","text":"Flags outliers outliers multiple outlier methods.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/detect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flags outliers or no outliers for multiple outlier methods. — detect","text":"","code":"detect(   x,   var,   output,   exclude,   optpar,   kmpar,   kmedoidpar,   ifpar,   lofpar,   jkpar,   gloshpar,   mahalpar,   knnpar,   zpar,   methods,   verbose,   spname,   warn,   missingness,   showErrors )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/detect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flags outliers or no outliers for multiple outlier methods. — detect","text":"x Dataframe species occurrences var Environmental parameter considered flagging suspicious outliers. output Either clean; produce data set outliers, outlier: output dataframe outliers. Default outlier. exclude Exclude variables considered fitting one class model, example x y columns latitude/longitude column user want consider. optpar Parameters species optimal ranges like temperatures ranges multidetect. kmpar Parameters kmeans clustering like method number clusters tuning multidetect. kmedoidpar Parameters adjusting distance metrics used kmedoid method multidetect. ifpar Isolation forest parameter settings. Parameters isolation  model required, include cutoff used denoting outliers. ranges 0 1  Default 0.5. Also, size data partitioning training determined. details check (Liu et al. 2008) lofpar Parameters local outlier factor distance matrix mode method implementation robust soft modes multidetect. jkpar Parameters reverse jack knifing mainly mode used multidetect. gloshpar Parameters global local outlier score hierarchies distance metric used multidetect. mahalpar Parameters Malahanobis distance includes varying mode output multidetect. knnpar Parameters varying distance matrix euclidean Manhattan multidetect. zpar Parameters z-score mode x parameter multidetect. methods Outlier detection methods considered. Use extractMethod get outliers implemented package. verbose whether return messages . Default FALSE. spname species name handled. warn whether return warning . Default TRUE. missingness Allowed missing values column allow user decide whether remove individual columns rows data sets. Default 0.1. Therefore, column 10% missing values, removed dataset rather rows. showErrors show execution errors therefore multiple species code break one methods fails execute.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/detect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flags outliers or no outliers for multiple outlier methods. — detect","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/detect.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Flags outliers or no outliers for multiple outlier methods. — detect","text":"Liu FeiT, Ting KaiM, Zhou Z-H. 2008. Isolation Forest. Pages 413-422 2008 Eighth IEEE International Conference Data Mining. Available https://ieeexplore.ieee.org/abstract/document/4781136 (accessed November 18, 2023).","code":""},{"path":[]},{"path":"https://anthonybasooma.github.io/specleanr/reference/distboxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribution boxplot — distboxplot","title":"Distribution boxplot — distboxplot","text":"Distribution boxplot","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/distboxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribution boxplot — distboxplot","text":"","code":"distboxplot(data, var, output, p1 = 0.025, p2 = 0.975)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/distboxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribution boxplot — distboxplot","text":"data Dataframe vector check outliers. var Variable used outlier detection data vector file. output Either clean: clean data output without outliers; outliers: outlier data frame vectors. p1, p2 Different pvalues outlier detection Schwertman et al. 2004).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/distboxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribution boxplot — distboxplot","text":"Either clean outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/distboxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distribution boxplot — distboxplot","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd , lat = 'decimalLatitude', lon= 'decimalLongitude',                           colsp = 'speciescheck',                           bbox = db,                           multiple = TRUE,                           minpts = 10)   bxout <- distboxplot(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier') } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/distr_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine species distribution ranges based on IUCN RedList. — distr_ranges","title":"Determine species distribution ranges based on IUCN RedList. — distr_ranges","text":"Determine species distribution ranges based IUCN RedList.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/distr_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine species distribution ranges based on IUCN RedList. — distr_ranges","text":"","code":"distr_ranges(data, species, lat, lon, key = NULL, verbose = T)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/distr_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine species distribution ranges based on IUCN RedList. — distr_ranges","text":"data species data frame check International Union Conservation Nature. species species name lat variable latitude species data frame. lon variable longitude species data frame. key API key access IUCN RedList data. Use rl_use_iucn() apply . verbose TRUE processing messages warning produced.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/distr_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine species distribution ranges based on IUCN RedList. — distr_ranges","text":"species records within known distribution ranges species according IUCN RedList database.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/distr_ranges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine species distribution ranges based on IUCN RedList. — distr_ranges","text":"","code":"if (FALSE) { # \\dontrun{ df <- 1  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/dot-abspath.html","id":null,"dir":"Reference","previous_headings":"","what":"obtain absolute path for the user — .abspath","title":"obtain absolute path for the user — .abspath","text":"obtain absolute path user","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dot-abspath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"obtain absolute path for the user — .abspath","text":"","code":".abspath(dir, verbose = TRUE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/dot-abspath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"obtain absolute path for the user — .abspath","text":"dir user user directory save data future use. verbose show messages implementation . Default FALSE.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dot-abspath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"obtain absolute path for the user — .abspath","text":"absolute path","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dot-absx.html","id":null,"dir":"Reference","previous_headings":"","what":"create sub folders in the absolute path folder — .absx","title":"create sub folders in the absolute path folder — .absx","text":"create sub folders absolute path folder","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dot-absx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create sub folders in the absolute path folder — .absx","text":"","code":".absx(x, var)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/dot-absx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create sub folders in the absolute path folder — .absx","text":"x absolute path set .abspath var name folder specific variables.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dot-absx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create sub folders in the absolute path folder — .absx","text":"subfolder absolute path","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dot-cache.html","id":null,"dir":"Reference","previous_headings":"","what":"caching data — .cache","title":"caching data — .cache","text":"caching data","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dot-cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"caching data — .cache","text":"","code":".cache(x)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/dot-cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"caching data — .cache","text":"x indicate absolute path.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dot-gbdownload.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads the global basin data based on Tesedesco at al., 2017 — .gbdownload","title":"Downloads the global basin data based on Tesedesco at al., 2017 — .gbdownload","text":"Downloads global basin data based Tesedesco al., 2017","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dot-gbdownload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads the global basin data based on Tesedesco at al., 2017 — .gbdownload","text":"","code":".gbdownload(x = \"globalbasins\")"},{"path":"https://anthonybasooma.github.io/specleanr/reference/dot-gbdownload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads the global basin data based on Tesedesco at al., 2017 — .gbdownload","text":"x absolute path cache global basin files","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dot-gbdownload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloads the global basin data based on Tesedesco at al., 2017 — .gbdownload","text":"download files global basin","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dot-nearthdownload.html","id":null,"dir":"Reference","previous_headings":"","what":"NatureEarth data — .nearthdownload","title":"NatureEarth data — .nearthdownload","text":"NatureEarth data","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dot-nearthdownload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NatureEarth data — .nearthdownload","text":"","code":".nearthdownload(x)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/dot-nearthdownload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NatureEarth data — .nearthdownload","text":"x Absolute path","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/dot-nearthdownload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NatureEarth data — .nearthdownload","text":"shapefile form Natural Earth Administrative boundaries","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/downloadnatura.html","id":null,"dir":"Reference","previous_headings":"","what":"Download NATURA2000 data — downloadnatura","title":"Download NATURA2000 data — downloadnatura","text":"Download NATURA2000 data","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/downloadnatura.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download NATURA2000 data — downloadnatura","text":"","code":"downloadnatura(x, timeout = 180)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/downloadnatura.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download NATURA2000 data — downloadnatura","text":"x path save European data files. timeout Delay time downloading","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ecological_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for environmental outliers using species optimal ranges. — ecological_ranges","title":"Check for environmental outliers using species optimal ranges. — ecological_ranges","text":"Check environmental outliers using species optimal ranges.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ecological_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for environmental outliers using species optimal ranges. — ecological_ranges","text":"","code":"ecological_ranges(   data,   var = NULL,   output = \"outlier\",   species = NULL,   optimumSettings = list(optdf = NULL, optspcol = NULL, mincol = NULL, maxcol = NULL,     ecoparam = NULL, direction = NULL),   minval = NULL,   maxval = NULL,   lat = NULL,   lon = NULL,   ecoparam = NULL,   direction = NULL,   pct = 80,   checkfishbase = FALSE,   mode = NULL,   warn = TRUE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/ecological_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for environmental outliers using species optimal ranges. — ecological_ranges","text":"data Dataframe environmental predictors species multiple species. var Environmental parameter considered flagging suspicious outliers. output output Either clean: dataframe suspicious outliers outlier: retrun dataframe outliers. species species indicated minimum minval maximum values maxval provided. optimumSettings list optimal parameters provided mostly multiple species examined. optdf: dataframe species optimal values (min, max, ecoparam). dataset  can generated literature different species. optspcol: column species names optdf dataset. mincol: column name optdf minimum values. maxcol: column name optdf maximum values. ecoparam: optdf minimum maximum values found,  column ecoparam provided. direction: ecoparam provided optdf, column direction provided. minval, maxval Minimum  maximum values (ranges) particular used flag values outside ranges. lat, lon checkfishbase mode set, columns latitude longitude provided. ecoparam parameter used lower bound (minimum) upper bound maximum ranges absent. example, minimum value present particular species, ecoparam set direction provided whether lower, greater, equal, less/equal greater/equal ecoparam value provided. direction indicates provided ecological threshold ecoparam ranges greater greater, less less, equal equal, less equal le greater equal ge. Íf minimum maximum values known, ecoparam direction used. pct percentage similarity species name provided user one  FishBase. fish species names checked Fishbase taxa can checked using taxize package. checkfishbase Either TRUE check temperatures temp latitudinal geographical ranges geo. checkfishbase set TRUE mode parameter must set either geo temp. function applies fish species. mode Either geo temp latitudinal ranges temperature ranges respectively. See thermal_ranges geo_ranges obtain data. warn Either TRUE return warning messages FALSE warning messages. defualt FALSE:","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ecological_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for environmental outliers using species optimal ranges. — ecological_ranges","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ecological_ranges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for environmental outliers using species optimal ranges. — ecological_ranges","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\") data(\"jdsdata\")  datafinal <- match_datasets(datasets = list(jds = jdsdata, efi=efidata),                             lats = 'lat',                             lons = 'lon',                             species = c('speciesname','scientificName'),                             date = c('Date', 'sampling_date'),                             country = c('JDS4_site_ID'))  gbd <- check_names(data = datafinal, colsp='species', pct=90, merge=TRUE)  db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd , lat = 'decimalLatitude', lon= 'decimalLongitude',                         colsp = 'speciescheck',                        bbox = db,                         multiple = TRUE,                         minpts = 10)  saldata <- refdata[['Salmo trutta']] #1. checking the annual maean temperature (bio1) are within the ranges in FishBase salmotherange <- thermal_ranges(x = \"Salmo trutta\")  sdatatemp <- ecological_ranges(data = saldata, var = 'bio1', species = \"Salmo trutta\",                               checkfishbase = TRUE, mode = 'temp', output = 'outlier') #zero record no outliers #==== #2. geographical ranges: latitude longitude #geo ranges in fishbase salgeorange <- geo_ranges(data = \"Salmo trutta\") sdatageo <- ecological_ranges(data = saldata, lat = 'y', lon = 'x', output = 'outlier',                               species = \"Salmo trutta\",                               checkfishbase = TRUE, mode = 'geo') #3. GENERAL LITERATURE RANGES #====== #1. when the min and and max are provided #multiple FALSE SHOULD BE SET #3.1: If only the minimum value is present: assuming minimum temperature is 6, varible: bio1 #direction less than 6.0 is outlier and greater is not sdata <- ecological_ranges(data = saldata, ecoparam = 6.0, var = 'bio1',                            direction = 'greater' ) #3.2 sdata2 <- ecological_ranges(data = saldata, var = 'bio1', minval = 2,                             maxval = 24, species = \"Salmo trutta\" )  #4. Multiple TRUE #the optimal parameters should be provided in a dataframe format with min max, or ecoparam #4.1 optimal dataset  optdata <- data.frame(species= c(\"Salmo trutta\", \"Abramis brama\"),                       mintemp = c(6, 1.6),maxtemp = c(20, 21),                       meantemp = c(8.5, 10.4), #ecoparam                       direction = c('greater', 'greater'))  #parameter used is annual mean temperature (WORLDCLIM) #provide the column with species names in the environment dataset #set optimal list parameter # # #optimal parameters sdata3 <- ecological_ranges(data = saldata, species = 'Salmo trutta',                             var = 'bio1', output = \"outlier\",                             optimumSettings = list(optdf = optdata,maxcol = \"maxtemp\",                                                    mincol =\"mintemp\",optspcol = \"species\")) # # #only one ecological parameter (ecoparam is provided) and direction sdata4 <- ecological_ranges(data = saldata, species = 'Salmo trutta', var = 'bio1',                             output = \"outlier\",                             optimumSettings = list(optdf = optdata,                                                    ecoparam = \"meantemp\",                                                    optspcol = \"species\",                                                    direction= \"direction\")) } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/efidata.html","id":null,"dir":"Reference","previous_headings":"","what":"Efiplus data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — efidata","title":"Efiplus data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — efidata","text":"tibble","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/efidata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Efiplus data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — efidata","text":"","code":"data(efidata)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/efidata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Efiplus data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — efidata","text":"tibble 99 rows 23 columns.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/efidata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Efiplus data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — efidata","text":"BQEs sensitivity global/climate change European rivers: implications reference conditions pressure-impact-recovery chains (Logez et al. 2012). extract made usage package information write ihg@boku.ac.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/efidata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Efiplus data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — efidata","text":"Logez M, Belliard J, Melcher , Kremser H, Pletterbauer F, Schmutz S, Gorges G, Delaigue O, Pont D. 2012. Deliverable D5.1-3: BQEs sensitivity global/climate change European rivers: implications reference conditions pressure-impact-recovery chains.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/efidata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Efiplus data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — efidata","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\") efidata } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/endemicity.html","id":null,"dir":"Reference","previous_headings":"","what":"Determines the species ranges, whether native or alien based on Freshwater Information Platform. — endemicity","title":"Determines the species ranges, whether native or alien based on Freshwater Information Platform. — endemicity","text":"Determines species ranges, whether native alien based Freshwater Information Platform.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/endemicity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determines the species ranges, whether native or alien based on Freshwater Information Platform. — endemicity","text":"","code":"endemicity(basin, range)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/endemicity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determines the species ranges, whether native or alien based on Freshwater Information Platform. — endemicity","text":"basin Basin consideration. range Whether introduced () native (n)","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/endemicity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determines the species ranges, whether native or alien based on Freshwater Information Platform. — endemicity","text":"dataframe showing species ranges","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/endemicity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determines the species ranges, whether native or alien based on Freshwater Information Platform. — endemicity","text":"","code":"if (FALSE) { # \\dontrun{  df <- endemicity(basin ='Danu', range =c('a','n')) } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/envextract.html","id":null,"dir":"Reference","previous_headings":"","what":"Generating pseudo absences from raster layers for distribution modeling. — envextract","title":"Generating pseudo absences from raster layers for distribution modeling. — envextract","text":"Generating pseudo absences raster layers distribution modeling.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/envextract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generating pseudo absences from raster layers for distribution modeling. — envextract","text":"","code":"envextract(   occurences,   raster,   lat = NULL,   lon = NULL,   geom = FALSE,   binary = FALSE,   labels = NULL,   prop = 0.8,   set.seed = 1124,   positive = NULL,   missingness = 0.1,   exclude = NULL,   vifcutoff = 0.9,   verbose = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/envextract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generating pseudo absences from raster layers for distribution modeling. — envextract","text":"occurences Species occurrences data coordinates geometry enable generate pseudo absences extract environmental data points. raster raster layer species environmental data used modelling. Different sources, include WORLDCLIM lat, lon species occurrences geometry column spatial vector file, latitude longitude must provided data extraction form raster layers. geom used data extraction species occurrences geometry column instead latitude longitude. binary Either FALSE species dataset label column presence absence. Therefore, FALSE used parameter label NULL. species presences absences indicated, user select TRUE option. labels dataset presence absence column, indicated used extracting labels. Character labels example allowed, example P presences absences recommended. prop proportion pseudo absences presences. Default 1 used. Therefore equal number pseudo absences generated commensurate species. set.seed ensure reproduciblity seed set. psudoabsences produced run. positive TRUE used, user indicate positive label. example, P presence label. important fitting models computing evaluation metrics. missingness Allowed missing values column allow user decide whether remove individual columns rows data sets. Default 0.1. Therefore, column 10% missing values, removed dataset rather rows. exclude Remove non numeric variables data. vifcutoff Used assessing multicolinearity environmental predictors using correlation vifcor function usdm package Naimi et al., 2014. verbose Either TRUE return messages FALSE implementation messages. Default FALSE","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/envextract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generating pseudo absences from raster layers for distribution modeling. — envextract","text":"Labeled presence absence data.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/envextract.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generating pseudo absences from raster layers for distribution modeling. — envextract","text":"package, fucntion developed aid preparing data developing species distribution models sdmfit. species occurrences absences available, function generates pseudo absences required species distribution modeling. data binary presences absences,  user set label denotes presence species using positive parameter. user indicate column labels found.   account multicolinearity among environmental predictors, used vifcor function usdm drop highly correlated environmental   predictors. Therefore, user can adjust vifcutoff range 0 1.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/envextract.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generating pseudo absences from raster layers for distribution modeling. — envextract","text":"Naimi, B., Hamm, N. ., Groen, T. ., Skidmore, . K., & Toxopeus, . G. (2014).   positional uncertainty problem species distribution modelling?. Ecography, 37(2), 191-203.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/envextract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generating pseudo absences from raster layers for distribution modeling. — envextract","text":"","code":"if (FALSE) { # \\dontrun{  data(efidata)  worldclim <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  #select species with enough records #1. Presence data: the final dataset has both presence and pseudo absences  dfprep <- envextract(occurences = efidata, raster = worldclim,                         lat = \"decimalLatitude\", lon = \"decimalLongitude\",                         binary = FALSE, prop = 0.8)  #2. Presence absence  efidata$pa <- rep(c(\"A\", \"P\"), c(nrow(efidata)/2, nrow(efidata)/2))  dfprep <- envextract(occurences = efidata, raster = worldclim, lat = \"decimalLatitude\",                     lon = \"decimalLongitude\", binary = TRUE,                     positive = \"P\", labels = \"pa\", vifcutoff = 0.9)   #3. With sf geometry column   efisfdata <- sf::st_as_sf(efidata, coords = c(\"decimalLongitude\",  \"decimalLatitude\"), crs= sf::st_crs(4326))   dfprep_geom <- envextract(occurences = efisfdata, raster = worldclim,                           geom = 'geometry', binary = TRUE,                           positive = \"P\", labels = \"pa\", vifcutoff = 0.9) } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/evaluate.html","id":null,"dir":"Reference","previous_headings":"","what":"Model evaluation metrics — evaluate","title":"Model evaluation metrics — evaluate","text":"Model evaluation metrics","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/evaluate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model evaluation metrics — evaluate","text":"","code":"evaluate(data, predictions, response, model = NULL, cutoff, metrics)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/evaluate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model evaluation metrics — evaluate","text":"data Species environmental data generated bootstrapping subsampling. predictions Model predictions predict function stats package. response presence absence presence presence-models. model Parameter set model choices. GLM RF allowed. cutoff Defines threshold classify model predictions/probabilities presence absent. Default 0.5. maximum 1 lowest 0. metrics Either consider threshold-dependent, threshold-independent evaluation metrics determine model performance.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/evaluate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model evaluation metrics — evaluate","text":"evaluation metrics values","code":""},{"path":[]},{"path":"https://anthonybasooma.github.io/specleanr/reference/exdata.html","id":null,"dir":"Reference","previous_headings":"","what":"An internal function to check for missing value in environmental data before extraction. — exdata","title":"An internal function to check for missing value in environmental data before extraction. — exdata","text":"internal function check missing value environmental data extraction.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/exdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An internal function to check for missing value in environmental data before extraction. — exdata","text":"","code":"exdata(raster, coords, labels, missingness, exclude, vifcutoff, verbose)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/exdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An internal function to check for missing value in environmental data before extraction. — exdata","text":"raster raster layer species environmental data used modelling. coords coordinates geometry. Either x y geometry column species occurrences geometry format. labels dataset presence absence column, indicated used extracting labels. Character labels example allowed, example P presences absences recommended. missingness limit column discarded data rather removing numerous rows. example, column 50% dataset missing values removing rows problematic rather column since affect one parameter whole dataset. exclude Indicate columns checking non missing values NAs done. vifcutoff Used assessing multicolinearity environmental predictors using correlation vifcor function usdm package Naimi et al., 2014. verbose return execution messages . Default FALSE.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/exdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An internal function to check for missing value in environmental data before extraction. — exdata","text":"extracted environmental data labels.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/exdata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"An internal function to check for missing value in environmental data before extraction. — exdata","text":"Naimi, B., Hamm, N. ., Groen, T. ., Skidmore, . K., & Toxopeus, . G. (2014).   positional uncertainty problem species distribution modelling?. Ecography, 37(2), 191-203.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/extractMethods.html","id":null,"dir":"Reference","previous_headings":"","what":"List of outlier detection methods implemented in this package. — extractMethods","title":"List of outlier detection methods implemented in this package. — extractMethods","text":"List outlier detection methods implemented package.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/extractMethods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of outlier detection methods implemented in this package. — extractMethods","text":"","code":"extractMethods()"},{"path":"https://anthonybasooma.github.io/specleanr/reference/extractMethods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of outlier detection methods implemented in this package. — extractMethods","text":"List methods","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/extractMethods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of outlier detection methods implemented in this package. — extractMethods","text":"","code":"if (FALSE) { # \\dontrun{ extractMethods() } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/extract_online.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts data from lists of files obtained from online databases. — extract_online","title":"Extracts data from lists of files obtained from online databases. — extract_online","text":"Extracts data lists files obtained online databases.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/extract_online.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts data from lists of files obtained from online databases. — extract_online","text":"","code":"extract_online(online, verbose = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/extract_online.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts data from lists of files obtained from online databases. — extract_online","text":"online List online data sets, dataonline class accepted. verbose show extraction messages. Default FALSE","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/extract_online.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts data from lists of files obtained from online databases. — extract_online","text":"Extracts arranges data online databases.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/extract_online.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts data from lists of files obtained from online databases. — extract_online","text":"","code":"if (FALSE) { # \\dontrun{  gbdata <- getdata(data= 'Gymnocephalus baloni', gbiflim = 100, inatlim = 100,vertlim = 100)  extractdata <- extract_online(online = gbdata)  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/extract_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract outliers for a one species — extract_outliers","title":"Extract outliers for a one species — extract_outliers","text":"Extract outliers one species","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/extract_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract outliers for a one species — extract_outliers","text":"","code":"extract_outliers(x, sp = NULL)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/extract_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract outliers for a one species — extract_outliers","text":"x list outlier outputs. sp species name index list datacleaner output. NULL single species","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/extract_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract outliers for a one species — extract_outliers","text":"data frame outliers method","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/extract_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract outliers for a one species — extract_outliers","text":"","code":"if (FALSE) { # \\dontrun{  data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                       lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection  outliers <- multidetect(data = extdf, output='outlier',                        exclude = c('x','y'), multiple = TRUE,                        methods = c('mixediqr', \"iqr\", \"kmeans\", \"mahal\"),                        kmpar =list(k=6, method='silhouette', mode='soft'))  extractoutlier <- extract_outliers(x=outliers, sp = 5)  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/fip_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract basin ranges from Freshwater Information Platform. — fip_ranges","title":"Extract basin ranges from Freshwater Information Platform. — fip_ranges","text":"Extract basin ranges Freshwater Information Platform.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/fip_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract basin ranges from Freshwater Information Platform. — fip_ranges","text":"","code":"fip_ranges(data, colsp = NULL, basin, range, pct = 90, verbose = F, sn = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/fip_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract basin ranges from Freshwater Information Platform. — fip_ranges","text":"data Data frame extract basin species records either native, endemic . colsp variable data species names basin Basin names indicated Freshwater Information Platform (Schmidt-Kloiber et al., 2019) range basin, either indicate n return native, : alien (Schmidt-Kloiber et al., 2019) pct percentage similarity considered assign relatively similar name FishBase exact match absent. higher pct values, higher different similar considered replace species name cheeked FisBase. verbose TRUE return processing messages FALSE messages. Default FALSE sn Either FALSE return accepted names FishBase rather synonyms.Default FALSE.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/fip_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract basin ranges from Freshwater Information Platform. — fip_ranges","text":"Species data frame temperature ranges FishBase","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/fip_ranges.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract basin ranges from Freshwater Information Platform. — fip_ranges","text":"Schmidt-Kloiber, ., Bremerich, V., De Wever, . et al. Freshwater Information Platform: global online network providing data, tools resources science policy support. Hydrobiologia 838, 1-11 (2019).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/fip_ranges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract basin ranges from Freshwater Information Platform. — fip_ranges","text":"","code":"if (FALSE) { # \\dontrun{  data(jdsdata)   nativedanube <- fip_ranges(data = jdsdata, colsp = 'speciesname',                            range = 'n', verbose = T, basin = 'Danu')  #Species introduced in Danube  aliendf <- fip_ranges(data = jdsdata, colsp = 'speciesname', basin = 'Danu', range = 'a')  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/fishbase.html","id":null,"dir":"Reference","previous_headings":"","what":"Collates synoynm data tables from FishBase. — fishbase","title":"Collates synoynm data tables from FishBase. — fishbase","text":"Collates synoynm data tables FishBase.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/fishbase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collates synoynm data tables from FishBase. — fishbase","text":"","code":"fishbase(tables)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/fishbase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collates synoynm data tables from FishBase. — fishbase","text":"tables Tables FishBase","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/fishbase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collates synoynm data tables from FishBase. — fishbase","text":"Two datasets","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/fishbase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collates synoynm data tables from FishBase. — fishbase","text":"","code":"if (FALSE) { # \\dontrun{  stdf <- fishbase(tables = 'synonym')  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/geo_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks for geographic ranges from FishBase — geo_ranges","title":"Checks for geographic ranges from FishBase — geo_ranges","text":"Checks geographic ranges FishBase","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/geo_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks for geographic ranges from FishBase — geo_ranges","text":"","code":"geo_ranges(   data,   colsp = NULL,   verbose = F,   pct = 90,   sn = FALSE,   warn = FALSE,   synonym = fishbase(tables = \"synonym\"),   ranges = fishbase(tables = \"ranges\") )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/geo_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks for geographic ranges from FishBase — geo_ranges","text":"data Dataframe vector retrieve  ranges FishBase. colsp Column species names data set. verbose TRUE messages show. Default FALSE: pct percentage similarity species names standardization FishBase. sn TRUE synonyms generated accepted ones. Default FALSE, species accepted names produced. warn FALSE, generate warnings TRUE warnings. Default FALSE: synonym standard database species synonym names FishBase. See FishBase information. ranges standard database ecological ranges FishBase. See FishBase information.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/geo_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks for geographic ranges from FishBase — geo_ranges","text":"Dataframe geographical corrected ranges species FishBase.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/geo_ranges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks for geographic ranges from FishBase — geo_ranges","text":"","code":"if (FALSE) { # \\dontrun{  gr <- geo_ranges(data= \"Lates niloticus\")  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/get_iucn.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract species IUCN status from IUCN RedList database. — get_iucn","title":"Extract species IUCN status from IUCN RedList database. — get_iucn","text":"Extract species IUCN status IUCN RedList database.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/get_iucn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract species IUCN status from IUCN RedList database. — get_iucn","text":"","code":"get_iucn(x, key)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/get_iucn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract species IUCN status from IUCN RedList database. — get_iucn","text":"x species name key API key access IUCN Red List data. Use rl_use_iucn() apply .","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/get_iucn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract species IUCN status from IUCN RedList database. — get_iucn","text":"species IUCN category","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/get_performance.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the model performance — get_performance","title":"Extract the model performance — get_performance","text":"Extract model performance","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/get_performance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the model performance — get_performance","text":"","code":"get_performance(modeloutput, type = \"test\")"},{"path":"https://anthonybasooma.github.io/specleanr/reference/get_performance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the model performance — get_performance","text":"modeloutput model output object data extracted. type Either test train performance metrics.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/get_performance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the model performance — get_performance","text":"data frame performance metrics reference outlier cleaned dataset. function takes output modelcomparison function.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Download species records from online database. — getdata","title":"Download species records from online database. — getdata","text":"Download species records online database.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download species records from online database. — getdata","text":"","code":"getdata(   data,   colsp = NULL,   bbox = NULL,   isFish = TRUE,   gbiflim = 1e+06,   vertlim = 1000,   inatlim = 3000,   verbose = FALSE,   warn = FALSE,   ... )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download species records from online database. — getdata","text":"data Data frame, list vector species names retrieve records online databases (GBIF, VertNET, iNaturalist). colsp variable species names. Provided data data frame, required lists vector. bbox Bounding box limit download records within particular area. Otherwise records GBIF downloaded. can provided two forms, either shapefile (sf) class accepted provide list xmin, ymin, xmax, ymax. isFish logical, indicate occurrence records extracted fish taxa . allows clean species names accordingly. taxa different name checks conducted. Default TRUE. gbiflim Limits records Global Biodiversity Information Platform vertlim Limits records VertNET. inatlim Limits records iNaturalist database. verbose TRUE detailed messages indicated FALSE download messages needed. Default TRUE. warn logical, indicate warning messages shown. Default FALSE. ... function species data download can used. See rgbif::occ_data information, rinat::get_inat_obs, rvertnet::searchbyterm.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download species records from online database. — getdata","text":"Lists species records online databases","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download species records from online database. — getdata","text":"Note always check validity species name standard database FishBase World Register Marine Species.        records 50000 GBIF, extent can provide limit download.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download species records from online database. — getdata","text":"","code":"if (FALSE) { # \\dontrun{  gbaloni <- check_names(data = 'gymnocephalus baloni', pct=90)  gbdata <- getdata(data=gbaloni, gbiflim = 100, inatlim = 100, vertlim = 100)  #Get for two species sp_records <- getdata(data=c('Gymnocephalus baloni', 'Hucho hucho'),gbiflim = 100,                             inatlim = 100,                             vertlim = 100)  #3. Generate species list from a dataframe  data(efidata)  danube <- system.file('extdata/danube/basinfinal.shp', package='specleanr')  danubebasin <- sf::st_read(danube, quiet=TRUE)  datachecked <- check_names(data= efidata,colsp = 'species', pct=90, merge = TRUE)#clean names  Onlinedf <- getdata(data = datachecked, colsp='speciescheck', bbox=danubebasin)  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdiff.html","id":null,"dir":"Reference","previous_headings":"","what":"get dataframe from the large dataframe. — getdiff","title":"get dataframe from the large dataframe. — getdiff","text":"get dataframe large dataframe.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get dataframe from the large dataframe. — getdiff","text":"","code":"getdiff(x, y, full = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get dataframe from the large dataframe. — getdiff","text":"x Small dataset y Large dataset intersection full Whether whole column names checked . Default FALSE first column considered. FALSE; returned columns may considered column less similar rows across two data sets.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get dataframe from the large dataframe. — getdiff","text":"Data extracted large dataset.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdiff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get dataframe from the large dataframe. — getdiff","text":"","code":"if (FALSE) { # \\dontrun{  x = data.frame(id=c(1,2,3,4,5),  name=c('a','b','c', 'd','e'))  y=data.frame(id=c(1,2,3,4,7,6,5), tens=c(10,29,37,46,58, 34, 44),                  name=c('a','b','c','d','e', 'f','g'))  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/ggoutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize the outliers identified by each method — ggoutliers","title":"Visualize the outliers identified by each method — ggoutliers","text":"Visualize outliers identified method","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ggoutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize the outliers identified by each method — ggoutliers","text":"","code":"ggoutliers(x, y, raw = TRUE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/ggoutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize the outliers identified by each method — ggoutliers","text":"x . datacleaner object y . species index name multiple species raw Whether total number outlier flagged method provided (TRUE) FALSE return percentage outlier contribution method.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ggoutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize the outliers identified by each method — ggoutliers","text":"ggplot object indicating outlier detection methods number outlier flagged.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ggperform.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot to the performance metrics across the thresholds used in model comparison — ggperform","title":"Plot to the performance metrics across the thresholds used in model comparison — ggperform","text":"Plot performance metrics across thresholds used model comparison","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ggperform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot to the performance metrics across the thresholds used in model comparison — ggperform","text":"","code":"ggperform(   modelout,   eval = c(\"auc\", \"Accuracy\"),   type = \"test\",   cutoff = 0.5,   scales = \"free\",   FUN = \"mean\" )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/ggperform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot to the performance metrics across the thresholds used in model comparison — ggperform","text":"modelout model comparison output obtained. eval model evaluation metrics. Check indep dep details. type Either test data output test training data output train. Default test. cutoff value limit thresholds display. Default 0.5 scales Indicates facets scales based ggplot2 object. Allowed free_y, free_x, free FUN function summarize performance metrics. Default mean.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ggperform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot to the performance metrics across the thresholds used in model comparison — ggperform","text":"ggplot2 output performance metrics accuracy, sensitivity, specificity..","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/hamming.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify best outlier detection method using Hamming distance. — hamming","title":"Identify best outlier detection method using Hamming distance. — hamming","text":"Identify best outlier detection method using Hamming distance.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/hamming.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify best outlier detection method using Hamming distance. — hamming","text":"","code":"hamming(x, sp = NULL, threshold = NULL, warn = FALSE, autothreshold = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/hamming.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify best outlier detection method using Hamming distance. — hamming","text":"x List data frames methods used identify outliers mult_detect function. sp species name index multiple species considered outlier detection. threshold Maximum value denote absolute outlier. threshold ranges 0 indicates point flagged outlier detection method outlier 1, means record absolute true outlier sicen identified methods. extremes, low threshold values, many records classified, may due individual method weakness strength data distribution. Also, higher threshold values, true outliers retained Fo example, 10 methods considered 9 methods flags record outlier, cut 1 used, particular record retained. Therefore default cutoff 0.6 autothreshold can used select appropriate threshold. warn TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. autothreshold Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/hamming.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify best outlier detection method using Hamming distance. — hamming","text":"best method based hamming distance","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/hamming.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify best outlier detection method using Hamming distance. — hamming","text":"","code":"if (FALSE) { # \\dontrun{  data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                     lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection  outliers <- multidetect(data = extdf, output='outlier',                        exclude = c('x','y'), multiple = TRUE,                        methods = c('mixediqr', \"iqr\", \"kmeans\", \"mahal\"),                        kmpar =list(k=6, method='silhouette', mode='soft'))  hamout <- hamming(x = outliers, sp= 1, threshold = 0.2, var = 'bio6')#  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/hampel.html","id":null,"dir":"Reference","previous_headings":"","what":"Flag suspicious outliers based on the Hampel filter method.. — hampel","title":"Flag suspicious outliers based on the Hampel filter method.. — hampel","text":"Flag suspicious outliers based Hampel filter method..","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/hampel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flag suspicious outliers based on the Hampel filter method.. — hampel","text":"","code":"hampel(data, var = NULL, output, x = 3)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/hampel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flag suspicious outliers based on the Hampel filter method.. — hampel","text":"data Data frame check outliers var Environmental parameter considered flagging suspicious outliers output Either clean: dataframe suspicious outliers outlier: retrun dataframe outliers x constant create fence boundary detect outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/hampel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flag suspicious outliers based on the Hampel filter method.. — hampel","text":"Data frame outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/hampel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flag suspicious outliers based on the Hampel filter method.. — hampel","text":"Hampel filter method robust decision-based filter considers median MAD. Outliers lies beyond $$[x-* λ*MAD; x+ λ*MAD]$$ λ 3 considered (Pearson et al. 2016).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/hampel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Flag suspicious outliers based on the Hampel filter method.. — hampel","text":"Pearson Ronald, Neuvo Y, Astola J, Gabbouj M. 2016. Class Generalized Hampel Filters. 2546-2550 2015 23rd European Signal Processing Conference (EUSIPCO).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/hampel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flag suspicious outliers based on the Hampel filter method.. — hampel","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd , lat = 'decimalLatitude', lon= 'decimalLongitude',                           colsp = 'speciescheck',                           bbox = db,                           multiple = TRUE,                           minpts = 10)   hampout <- hampel(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier')  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/indep.html","id":null,"dir":"Reference","previous_headings":"","what":"threshold independent evaluation — indep","title":"threshold independent evaluation — indep","text":"threshold independent evaluation","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/indep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"threshold independent evaluation — indep","text":"","code":"indep(probs, observed, P, A)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/indep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"threshold independent evaluation — indep","text":"probs Model probabilities predictions. observed observed probabilities. P Character presence label. Important indicate presence/absence character correctly compute evaluation metric evaluate function. Character absence label. Important indicate presence/absence character correctly compute evaluation metric evaluate function.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/indep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"threshold independent evaluation — indep","text":"Area Curve values","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/indep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"threshold independent evaluation — indep","text":"threshold-independent evalation parameter dependent cutoff classify probability species present . package incorporated Area Receiver Operating Curve based Hanley & McNeil Barbra (1982).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/indep.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"threshold independent evaluation — indep","text":"Hanley J. , McNeil Barbra J. 1982. meaning use Area   Receiver Operating Characteristic (ROC) Curve. Radiology 143:29-36.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/interquartile.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes interquartile range to flag environmental outliers — interquartile","title":"Computes interquartile range to flag environmental outliers — interquartile","text":"Computes interquartile range flag environmental outliers","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/interquartile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes interquartile range to flag environmental outliers — interquartile","text":"","code":"interquartile(data, var, output, x = 1.5)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/interquartile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes interquartile range to flag environmental outliers — interquartile","text":"data Dataframe check outliers var Variable considered flagging suspicious outliers output Either clean: dataframe suspicious outliers outlier: retrun dataframe outliers. x constant create fence boundary detect outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/interquartile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes interquartile range to flag environmental outliers — interquartile","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/interquartile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computes interquartile range to flag environmental outliers — interquartile","text":"Interquartile range (IQR) uses quantiles resistant outliers compared      mean standard deviation (Seo 2006). Records considered mild outliers      fell outside lower upper bounding fences      [Q1 (lower quantile) -1.5*IQR (Interquartile range); Q3 (upper quantile) +1.5*IQR]      respectively (Rousseeuw & Hubert 2011).      Extreme outliers also considered      fell outside \\[Q1-3*IQR, Q3+3*IQR\\] (García-Roselló et al. 2014).      However, using interquartile range assumes uniform lower      upper bounding fences, robust highly skewed data      (Hubert & Vandervieren 2008).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/interquartile.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computes interquartile range to flag environmental outliers — interquartile","text":"Rousseeuw PJ, Hubert M. 2011. Robust statistics outlier detection. Wiley Interdisciplinary Reviews  Data Mining Knowledge Discovery 1:73-79.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/interquartile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes interquartile range to flag environmental outliers — interquartile","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd , lat = 'decimalLatitude',                           lon= 'decimalLongitude',                           colsp = 'speciescheck',                           bbox = db,                           multiple = TRUE,                           minpts = 10)   iqrout <- interquartile(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier') } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/isoforest.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify outliers using isolation forest model. — isoforest","title":"Identify outliers using isolation forest model. — isoforest","text":"Identify outliers using isolation forest model.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/isoforest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify outliers using isolation forest model. — isoforest","text":"","code":"isoforest(data, size, cutoff = 0.5, output, exclude = NULL)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/isoforest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify outliers using isolation forest model. — isoforest","text":"data Dataframe environmental variables extracted species recorded present absent. size Proportion data used training isolation forest n´model. ranges form 0.1 (fewer data  selected ) 1 data used training isolation model. cutoff Cut select record outlier . output Either clean: data set outliers outlier: output dataframe outliers. Default 0.5. exclude Exclude variables considered fitting one class model, example x y columns latitude/longitude column user want consider.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/isoforest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify outliers using isolation forest model. — isoforest","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/isoforest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Identify outliers using isolation forest model. — isoforest","text":"Liu FeiT, Ting KaiM, Zhou Z-H. 2008. Isolation Forest. Pages 413–422 2008 Eighth IEEE International Conference Data Mining. Available https://ieeexplore.ieee.org/abstract/document/4781136 (accessed November 18, 2023).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/isoforest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify outliers using isolation forest model. — isoforest","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd ,                        lat = 'decimalLatitude',                        lon= 'decimalLongitude',                        colsp = 'speciescheck',                       bbox = db,                        multiple = TRUE,                        minpts = 10)  iosd <- isoforest(data = refdata[['Salmo trutta']], size = 0.7,  output='outlier',                   exclude = c(\"x\", \"y\")) } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/jaccard.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies the best outlier detection method using Jaccard coefficient. — jaccard","title":"Identifies the best outlier detection method using Jaccard coefficient. — jaccard","text":"Identifies best outlier detection method using Jaccard coefficient.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jaccard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies the best outlier detection method using Jaccard coefficient. — jaccard","text":"","code":"jaccard(x, sp = NULL, threshold = NULL, warn = FALSE, autothreshold = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/jaccard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies the best outlier detection method using Jaccard coefficient. — jaccard","text":"x List data frames methods used identify outliers mult_detect function. sp species name index multiple species considered outlier detection. threshold Maximum value denote absolute outlier. threshold ranges 0 indicates point flagged outlier detection method outlier 1, means record absolute true outlier sicen identified methods. extremes, low threshold values, many records classified, may due individual method weakness strength data distribution. Also, higher threshold values, true outliers retained Fo example, 10 methods considered 9 methods flags record outlier, cut 1 used, particular record retained. Therefore default cutoff 0.6 autothreshold can used select appropriate threshold. warn TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. autothreshold Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jaccard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies the best outlier detection method using Jaccard coefficient. — jaccard","text":"best method identifying outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jaccard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies the best outlier detection method using Jaccard coefficient. — jaccard","text":"","code":"if (FALSE) { # \\dontrun{  data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                     lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection  outliers <- multidetect(data = extdf, output='outlier',                        exclude = c('x','y'), multiple = TRUE,                        methods = c('mixediqr', \"iqr\", \"kmeans\", \"mahal\"),                        kmpar =list(k=6, method='silhouette', mode='soft'))  jaccardout <- jaccard(x = outliers, sp= 1, threshold = 0.2)#   } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/jdsdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Joint Danube Survey Data — jdsdata","title":"Joint Danube Survey Data — jdsdata","text":"tibble Data five year periodic data collection within Danube River Basin. information, please visit https://www.danubesurvey.org/jds4/","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jdsdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joint Danube Survey Data — jdsdata","text":"","code":"data(jdsdata)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/jdsdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Joint Danube Survey Data — jdsdata","text":"tibble 98 rows 24 columns.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jdsdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Joint Danube Survey Data — jdsdata","text":"Species ecological parameters ecological ranges native alien","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jdsdata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Joint Danube Survey Data — jdsdata","text":"https://www.danubesurvey.org/jds4/","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jdsdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Joint Danube Survey Data — jdsdata","text":"","code":"if (FALSE) { # \\dontrun{  data(\"jdsdata\") jdsdata } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/jknife.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies outliers using Reverse Jackknifing method based on Chapman et al., (2005). — jknife","title":"Identifies outliers using Reverse Jackknifing method based on Chapman et al., (2005). — jknife","text":"Identifies outliers using Reverse Jackknifing method based Chapman et al., (2005).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jknife.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies outliers using Reverse Jackknifing method based on Chapman et al., (2005). — jknife","text":"","code":"jknife(data, var, output, mode = \"soft\")"},{"path":"https://anthonybasooma.github.io/specleanr/reference/jknife.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies outliers using Reverse Jackknifing method based on Chapman et al., (2005). — jknife","text":"data Dataframe check outliers var Variable considered flagging suspicious outliers. output Either clean: data frame suspicious outliers outlier: return data frame outliers mode Either robust, robust mode used uses median instead mean median absolute deviation median mad instead standard deviation.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jknife.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies outliers using Reverse Jackknifing method based on Chapman et al., (2005). — jknife","text":"Data frame outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jknife.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identifies outliers using Reverse Jackknifing method based on Chapman et al., (2005). — jknife","text":"Reverse jackknifing specifically developed detect error climate profiles (Chapman 1991, 1999). method applied detecting outliers environmental data (García-Roselló et al. 2014; Robertson et al. 2016)  incorporated DIVAS-GIS software (Hijmans et al. 2001).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jknife.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Identifies outliers using Reverse Jackknifing method based on Chapman et al., (2005). — jknife","text":"Chapman AD. 1991. Quality control validation environmental resource data   Data Quality Standards. Pages 1-23. Canberra. Available   https://www.researchgate.net/publication/332537824. Chapman AD. 1999. Quality Control Validation Point-Sourced Environmental Resource Data. eds. .   Chelsea,. Pages 409-418 Lowell K, Jaton , editors. Spatial accuracy assessment:   Land information uncertainty natural resources, 1st edition. MI: Ann Arbor Press., Chelsea.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jknife.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies outliers using Reverse Jackknifing method based on Chapman et al., (2005). — jknife","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd ,                         lat = 'decimalLatitude',                         lon= 'decimalLongitude',                         colsp = 'speciescheck',                         bbox = db,                        multiple = TRUE,                         minpts = 10)  jkout <- jknife(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier')  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/kdat.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequental fences constants — kdat","title":"Sequental fences constants — kdat","text":"tibble data k constants sequential fences method.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/kdat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequental fences constants — kdat","text":"","code":"data(kdat)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/kdat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sequental fences constants — kdat","text":"tibble 101 rows 2 columns.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/kdat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sequental fences constants — kdat","text":"k constants fro flagging outliers several chnages fences.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/kdat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sequental fences constants — kdat","text":"Schwertman NC, de Silva R. 2007. Identifying outliers sequential fences. Computational Statistics Data Analysis 51:3800–3810.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/kdat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequental fences constants — kdat","text":"","code":"if (FALSE) { # \\dontrun{  data(\"kdat\") kdat } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/logboxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Log boxplot based for outlier detection. — logboxplot","title":"Log boxplot based for outlier detection. — logboxplot","text":"Log boxplot based outlier detection.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/logboxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log boxplot based for outlier detection. — logboxplot","text":"","code":"logboxplot(data, var, output, x = 1.5)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/logboxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log boxplot based for outlier detection. — logboxplot","text":"data Dataframe vector check outliers. var Variable used outlier detection data vector format. output Either clean: clean data output without outliers; outliers: outlier data frame vectors. x constant creating lower upper fences. Extreme 3, default 1.5.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/logboxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log boxplot based for outlier detection. — logboxplot","text":"Dataframe without outliers depending output. clean Data without outliers. outlier Data outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/logboxplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log boxplot based for outlier detection. — logboxplot","text":"loxplot outlier detection Barbato et al. (2011) modifies interquartile range method detect outlier considering sample sizes indicating fences (lower upper fences). $$ lowerfence = [Q1 -1.5*IQR[1+0.1 * log(n/10)]$$ $$upperfence = [Q3 +1.5*IQR[1+0.1 *log(n/10)]$$ ; Q1 lower quantile Q3 upper quantile. method consider sample      size setting fences, address weakness interquartile range method (Tukey, 1977).      However. similar IQR method flagging outlier, log boxplot modification affected      data skewness can address using distboxplot, seqfences,mixediqr      semiIQR.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/logboxplot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Log boxplot based for outlier detection. — logboxplot","text":"Barbato G, Barini EM, Genta G, Levi R. 2011. Features performance outlier detection methods. Journal Applied Statistics 38:2133-2149","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/logboxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log boxplot based for outlier detection. — logboxplot","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd , lat = 'decimalLatitude', lon= 'decimalLongitude',                           colsp = 'speciescheck',                           bbox = db,                           multiple = TRUE,                           minpts = 10)   logout <- logboxplot(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier')  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/mahal.html","id":null,"dir":"Reference","previous_headings":"","what":"Flags outliers based on Mahalanobis distance matrix for all records. — mahal","title":"Flags outliers based on Mahalanobis distance matrix for all records. — mahal","text":"Flags outliers based Mahalanobis distance matrix records.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mahal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flags outliers based on Mahalanobis distance matrix for all records. — mahal","text":"","code":"mahal(data, exclude = NULL, output = \"outlier\", mode = \"soft\", pdf = 0.95)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/mahal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flags outliers based on Mahalanobis distance matrix for all records. — mahal","text":"data Dataframe check outliers exclude Exclude variables considered fitting one class model, example x y columns latitude/longitude column user want consider. output Either clean: data set outliers outlier: output data frame outliers. mode Either robust, robust mode used uses mcd() instead mean. Default mode soft. pdf Chisqure probability distribution used flagging outliers Leys et al. 2018.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mahal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flags outliers based on Mahalanobis distance matrix for all records. — mahal","text":"Either clean outliers dataset","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mahal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Flags outliers based on Mahalanobis distance matrix for all records. — mahal","text":"Leys C, Klein O, Dominicy Y, Ley C. 2018. Detecting multivariate outliers: Use robust variant Mahalanobis distance. Journal Experimental Social Psychology 74:150-156.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mahal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flags outliers based on Mahalanobis distance matrix for all records. — mahal","text":"","code":"if (FALSE) { # \\dontrun{  library(terra)  #species data from online databases  gbdata <- getdata(data='Gymnocephalus baloni', gbiflim = 100, inatlim = 100, vertlim = 100)  gbfinal <- extract_online(online = gbdata)  gbchecked <- check_names(data = gbfinal, colsp='species', pct=90, merge=TRUE)  #preclean and extract  danube <- system.file('extdata/danube/basinfinal.shp', package='specleanr')  danubebasin <- sf::st_read(danube)  #Get environmental data  worldclim <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'), quiet=TRUE)  precleaned <- precleaner(data = gbchecked,                           raster= worldclim ,                           lat = 'decimalLatitude',                           lon= 'decimalLongitude',                           colsp = 'speciescheck',                           basin = danubebasin,                           multiple = FALSE,                           minpts = 10)  #outliers mahal_outliers <- mahal(data = precleaned,                          exclude = c('x','y'),                          output='outlier')   } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/match.argc.html","id":null,"dir":"Reference","previous_headings":"","what":"Customised match function — match.argc","title":"Customised match function — match.argc","text":"Customised match function","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/match.argc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customised match function — match.argc","text":"","code":"match.argc(x, choices, quiet = TRUE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/match.argc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customised match function — match.argc","text":"x category words match choices different options choices particular category allowed. quiet Default FALSE return messages.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/match.argc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Customised match function — match.argc","text":"choices","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/match_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Data harmonizing for offline data based on Darwin Core terms . — match_datasets","title":"Data harmonizing for offline data based on Darwin Core terms . — match_datasets","text":"Data harmonizing offline data based Darwin Core terms .","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/match_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data harmonizing for offline data based on Darwin Core terms . — match_datasets","text":"","code":"match_datasets(   datasets,   country = NULL,   lats = NULL,   lons = NULL,   species = NULL,   date = NULL,   verbose = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/match_datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data harmonizing for offline data based on Darwin Core terms . — match_datasets","text":"datasets List offline online data merge. offline data set given specific name identification match data set. country Indicate country column names appear data sets merged. lats Match column names latitude data set matched. default latitude name decimalLatitude. , indicate latitude name referenced data sets matched. lons Match column names latitude data set match. default longitude name decimalLongitude. , indicate longitude name referenced data sets match. species Indicate species columns appear data sets matched. default species, data set species column name scientific species names names, indicate column name . date Indicate date column names appear data sets matched. verbose Messages data matching. Default FALSE","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/match_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data harmonizing for offline data based on Darwin Core terms . — match_datasets","text":"Harmonized data set standardized column names foe species names, latitude, longitude, country dates.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/match_datasets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data harmonizing for offline data based on Darwin Core terms . — match_datasets","text":"data set matched standard columns, namely decimalLatitude, decimalLatutide, species, indicated matching. Otherwise column names varying names 5 parameters indicated.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/match_datasets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data harmonizing for offline data based on Darwin Core terms . — match_datasets","text":"Wieczorek J, Bloom D, Guralnick R, Blum S, Döring M, Giovanni R, et al. (2012) Darwin Core: Evolving Community-Developed Biodiversity Data Standard. PLoS ONE 7(1): e29715. https://doi.org/10.1371/journal.pone.0029715.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/match_datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data harmonizing for offline data based on Darwin Core terms . — match_datasets","text":"","code":"if (FALSE) { # \\dontrun{  data(jdsdata)  data(efidata)  matchdfs <- match_datasets(datasets = list(jds = jdsdata, efi = efidata),                            lats = 'lat',                            lons = 'lon',                            species = c('speciesname','scientificName'),                            country=c('JDS4_site_ID'),                            date=c('Date', 'sampling_date'))  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/mbasinranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Basin ranges for multiple species. — mbasinranges","title":"Basin ranges for multiple species. — mbasinranges","text":"Basin ranges multiple species.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mbasinranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basin ranges for multiple species. — mbasinranges","text":"","code":"mbasinranges(   occurrences,   colsp = NULL,   lat,   lon,   verbose = TRUE,   discard = TRUE,   batch = TRUE,   output = \"records\" )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/mbasinranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basin ranges for multiple species. — mbasinranges","text":"occurrences Species occurrences particular check basin lie colsp species column considered recorded occurrences. lat, lon latitude longitude column names species occurrences records. verbose Whether implementation messages shown. Default TRUE. discard Whether discard records basins . Default FALSE. batch TRUE species records considered . Otherwise species-wise checks can can done. Default TRUE output Whether produce records basin files. Default records.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mbasinranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basin ranges for multiple species. — mbasinranges","text":"species occurrence records basins found.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mbasinranges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basin ranges for multiple species. — mbasinranges","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  salmo1 <- efidata[efidata[,'scientificName'] == c(\"Anguilla anguilla\", \"Cottus gobio\"), ]  br <- mbasinranges(occurrences = salmo1, lat = 'decimalLatitude', lon = 'decimalLongitude')  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/mdistr_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine species distribution ranges based on IUCN RedList. — mdistr_ranges","title":"Determine species distribution ranges based on IUCN RedList. — mdistr_ranges","text":"Determine species distribution ranges based IUCN RedList.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mdistr_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine species distribution ranges based on IUCN RedList. — mdistr_ranges","text":"","code":"mdistr_ranges(data, colsp, lat, lon, key, mode, verbose = T)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/mdistr_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine species distribution ranges based on IUCN RedList. — mdistr_ranges","text":"data species dataframe check International Union Conservation Nature. colsp column species names. lat variable latitude species data frame. lon variable longitude species data frame. key API key access IUCN RedList data. Use rl_use_iucn() apply . mode Either distribution , IUCN categories species verbose TRUE reutn messages warning processing data. Default FALSE","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mdistr_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine species distribution ranges based on IUCN RedList. — mdistr_ranges","text":"species records within known distribution ranges species according  IUCN RedList database multiple species.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mdistr_ranges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine species distribution ranges based on IUCN RedList. — mdistr_ranges","text":"","code":"if (FALSE) { # \\dontrun{  mdst <- 12  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/medianrule.html","id":null,"dir":"Reference","previous_headings":"","what":"Median rule method — medianrule","title":"Median rule method — medianrule","text":"Median rule method","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/medianrule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Median rule method — medianrule","text":"","code":"medianrule(data, var, output, x = 2.3)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/medianrule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Median rule method — medianrule","text":"data Dataframe vector check outliers. var Variable used outlier detection data vector file. output Either clean: clean data output without outliers; outliers: outlier data frame vectors. x constant flagging outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/medianrule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Median rule method — medianrule","text":"Either clean outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/medianrule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Median rule method — medianrule","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd ,                           lat = 'decimalLatitude',                           lon= 'decimalLongitude',                           colsp = 'speciescheck',                           bbox = db,                           multiple = TRUE,                           minpts = 10)   medout <- medianrule(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier') } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/mixediqr.html","id":null,"dir":"Reference","previous_headings":"","what":"Mixed Interquartile range and semiInterquartile range Walker et al., 2018 — mixediqr","title":"Mixed Interquartile range and semiInterquartile range Walker et al., 2018 — mixediqr","text":"Mixed Interquartile range semiInterquartile range Walker et al., 2018","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mixediqr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mixed Interquartile range and semiInterquartile range Walker et al., 2018 — mixediqr","text":"","code":"mixediqr(data, var, output, x = 3)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/mixediqr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mixed Interquartile range and semiInterquartile range Walker et al., 2018 — mixediqr","text":"data Dataframe vector check outliers. var Variable used outlier detection data vector file. output Either clean: clean data output without outliers; outliers: outlier data frame vectors. x constant flagging outliers Walker et al., 2018).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mixediqr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mixed Interquartile range and semiInterquartile range Walker et al., 2018 — mixediqr","text":"Either clean outliers","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mixediqr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mixed Interquartile range and semiInterquartile range Walker et al., 2018 — mixediqr","text":"Walker ML, Dovoedo YH, Chakraborti S, Hilton CW. 2018. Improved Boxplot Univariate Data.  American Statistician 72:348-353. American Statistical Association.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mixediqr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mixed Interquartile range and semiInterquartile range Walker et al., 2018 — mixediqr","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd , lat = 'decimalLatitude', lon= 'decimalLongitude',                           colsp = 'speciescheck',                           bbox = db,                           multiple = TRUE,                           minpts = 10)   logout <- mixediqr(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier') } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/modelcomparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparing the model performance before and after outlier removal. — modelcomparison","title":"Comparing the model performance before and after outlier removal. — modelcomparison","text":"Comparing model performance outlier removal.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/modelcomparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparing the model performance before and after outlier removal. — modelcomparison","text":"","code":"modelcomparison(   refdata,   outliers,   raster,   models = \"GLM\",   metrics = \"all\",   thresholds = c(0.6, 0.7),   autothreshold = FALSE,   mode = \"best\",   colsp = NULL,   nboots = 10,   testprop = 0.2,   geom = NULL,   lat = NULL,   lon = NULL,   prbackground = 1,   binary = FALSE,   verbose = F,   warn = F,   full = FALSE,   pabs = 0.1,   minpts = 10,   ... )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/modelcomparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparing the model performance before and after outlier removal. — modelcomparison","text":"refdata list dataframe species data generated pre-cleaning process. data set used reference data accessing outlier detection performance using threshold dependent independent metrics. data set must detecting outliers avoid mismatch. outliers datacleaner class data set outliers obtained using multdetect function. Please check ocindex. raster environmental pseudo absences extracted using envextract. models models used examine relationship species occurrences environmental parameters. Random forest generalized linear models accepted. GLM used set Generalized Linear Models RF Random Forest. RF1 variant slower suggested RF fails. metrics Either consider threshold-dependent, threshold-independent evaluation metrics determine model performance. thresholds different scenarios implemented. Currently reference data set threshold, outlier cleaned data allowed. autothreshold logical identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL. mode character either abs use absolute outliers filter data best use best method filter data bestmethod. colsp column species names species occurrence data frame list, nboots Creating sub samples modeling evaluation. testprop probability used partitioning data. geom character used data extraction species occurrences sf class geometry column instead latitude longitude. lat, lon character species occurrences geometry column spatial vector file, latitude longitude must provided data extraction raster layers. prbackground numeric value indicating proportion pseudo absences compare species presences. Used spatSample function. Ranges least 0.1 1 binary logical FALSE species dataset label column presence absence. Therefore, FALSE used parameter label NULL. species presences absences indicated, user select TRUE option. verbose Return messages . Default FALSE. warn Return warning . Default FALSE. full logical either full model output TRUE FALSE performance metrics output. pabs Percentage outliers allowed extracted data. best used extract outliers pabs exceeded, absolute outliers removed instead. records  best methods repeated likely remove true values outliers. minpts numeric value indicating minimum number records required run species distribution model. Default 10. ... parameters can used envextract function.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/modelcomparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparing the model performance before and after outlier removal. — modelcomparison","text":"list model instance model performance metrics.","code":""},{"path":[]},{"path":"https://anthonybasooma.github.io/specleanr/reference/modelcomparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comparing the model performance before and after outlier removal. — modelcomparison","text":"","code":"if (FALSE) { # \\dontrun{  #worldclim data for to extract environmental predictors worldclim <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  #get 500 records online using getdata function to compliment salmo trutta records and basin polygon #basin to get the bounding box to delineate the area of concern  db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet=TRUE)  salmonline <- getdata(data = \"Salmo trutta\", gbiflim = 500, inatlim = 3, vertlim = 3, bbox = db)  salextract <- extract_online(salmonline)  #merge both online and offline data and filter Salmo trutta  #select species with enough records  datafinal <- salextract[salextract[,'species'] == \"Salmo trutta\", ]  #initial data extraction and preliminary analysis  rdata <- pred_extract(data = datafinal,                       raster= worldclim ,                       lat = 'decimalLatitude',                       lon= 'decimalLongitude',                       colsp = 'species',                       bbox  = db,                       multiple = FALSE,                       minpts = 10,                       list=TRUE,                       merge=F, verbose = F)   #apply ensemble outlier detection. Note: (x and y in exclude parameter are #internally generally in pred_extract during environmental data extraction )  outliersdf <- multidetect(data = rdata, multiple = FALSE,                           var = 'bio6',                           output = 'outlier',                           exclude = c('x','y'),                           methods = c('zscore', 'adjbox','iqr', 'semiqr','hampel'))  modeout <- modelcomparison(refdata = rdata, outliers = outliersdf, raster = worldclim,                            lat = 'y', lon = 'x', models = c(\"GLM\"),                            mode = 'best', testprop = 0.2, metrics = 'all',                            thresholds = 0.2, full = FALSE, minpts = 10)  getper <- get_performance(modeloutput = modeout)  ggperform(modelout = modeout, cutoff = 0.1)  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/mth.html","id":null,"dir":"Reference","previous_headings":"","what":"mth datasets with constant at each confidence interval levels. — mth","title":"mth datasets with constant at each confidence interval levels. — mth","text":"tibble data consist ","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mth datasets with constant at each confidence interval levels. — mth","text":"","code":"data(mth)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/mth.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"mth datasets with constant at each confidence interval levels. — mth","text":"tibble 7 rows 9 columns.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mth datasets with constant at each confidence interval levels. — mth","text":"data extracted (Schwertman & de Silva 2007).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mth.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"mth datasets with constant at each confidence interval levels. — mth","text":"Schwertman NC, de Silva R. 2007. Identifying outliers sequential fences. Computational Statistics Data Analysis 51:3800–3810.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mth datasets with constant at each confidence interval levels. — mth","text":"","code":"if (FALSE) { # \\dontrun{  data(\"mth\") mth } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/mult_abs.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies absolute outliers for multiple species. — mult_abs","title":"Identifies absolute outliers for multiple species. — mult_abs","text":"Identifies absolute outliers multiple species.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mult_abs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies absolute outliers for multiple species. — mult_abs","text":"","code":"mult_abs(   x,   threshold = NULL,   props = FALSE,   warn = TRUE,   autothreshold = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/mult_abs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies absolute outliers for multiple species. — mult_abs","text":"x List data frames methods used identify outliers mult_detect function. threshold Maximum value denote absolute outlier. threshold ranges \"0\" indicates point flagged outlier detection method outlier \"1\", means record absolute true outlier since identified methods. extremes, low threshold values, many records classified, may due individual method weakness strength data distribution. Also, higher threshold values, true outliers retained Fo example, 10 methods considered 9 methods flags record outlier, cut 1 used, particular record retained. Therefore default cutoff 0.6 autothreshold can used select appropriate threshold. props output proportional absoluteness outlier warn TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. autothreshold Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mult_abs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies absolute outliers for multiple species. — mult_abs","text":"vector absolute outliers, best outlier detection method data frame absolute outliers proportions","code":""},{"path":[]},{"path":"https://anthonybasooma.github.io/specleanr/reference/mult_abs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies absolute outliers for multiple species. — mult_abs","text":"","code":"if (FALSE) { # \\dontrun{  data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                       lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection  outliers <- multidetect(data = extdf,output='outlier',                        exclude = c('x','y'), multiple = TRUE,                        methods = c('mixediqr', \"iqr\", \"kmeans\", \"mahal\"),                        kmpar =list(k=6, method='silhouette', mode='soft'))  totabs_counts <- mult_abs(x = outliers, sp= 1, threshold = 0.2) } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/multibestmethod.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify best method for outlier removal for multiple species using majority votes. — multibestmethod","title":"Identify best method for outlier removal for multiple species using majority votes. — multibestmethod","text":"Identify best method outlier removal multiple species using majority votes.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/multibestmethod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify best method for outlier removal for multiple species using majority votes. — multibestmethod","text":"","code":"multibestmethod(   x,   threshold = NULL,   warn = FALSE,   verbose = FALSE,   autothreshold = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/multibestmethod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify best method for outlier removal for multiple species using majority votes. — multibestmethod","text":"x Output outlier detection. threshold value consider whether outlier absolute outlier . warn TRUE, warning whether absolute outliers obtained low threshold indicated. Default FALSE. verbose Produce messages process . Default FALSE. autothreshold Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/multibestmethod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify best method for outlier removal for multiple species using majority votes. — multibestmethod","text":"best method outlier detection species","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/multibestmethod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify best method for outlier removal for multiple species using majority votes. — multibestmethod","text":"","code":"if (FALSE) { # \\dontrun{ data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                       lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection  outliers <- multidetect(data = extdf, var = 'bio6', output='outlier',                        exclude = c('x','y'), multiple = TRUE,                        methods = c('mixediqr', \"iqr\", \"kmeans\", \"mahal\"),                        kmpar =list(k=6, method='silhouette', mode='soft'))  multbm <- mult_bm(x = outliers, threshold = 0.2, var = 'bio6')#  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/multidetect.html","id":null,"dir":"Reference","previous_headings":"","what":"Allows ensemble multiple outlier detection methods. — multidetect","title":"Allows ensemble multiple outlier detection methods. — multidetect","text":"Allows ensemble multiple outlier detection methods.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/multidetect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allows ensemble multiple outlier detection methods. — multidetect","text":"","code":"multidetect(   data,   var,   output = \"outlier\",   exclude = NULL,   multiple,   colsp = NULL,   optpar = list(optdf = NULL, ecoparam = NULL, optspcol = NULL, direction = NULL, maxcol     = NULL, mincol = NULL, maxval = NULL, minval = NULL, checkfishbase = FALSE, mode =     \"geo\", lat = NULL, lon = NULL, pct = 80, warn = FALSE),   kmpar = list(k = 6, method = \"silhouette\", mode = \"soft\"),   kmedoidpar = list(k = 2, metric = \"manhattan\", full = FALSE),   ifpar = list(cutoff = 0.5, size = 0.7),   mahalpar = list(mode = \"soft\"),   jkpar = list(mode = \"soft\"),   zpar = list(type = \"mild\", mode = \"soft\"),   gloshpar = list(k = 3, metric = \"manhattan\", mode = \"soft\"),   knnpar = list(metric = \"manhattan\", mode = \"soft\"),   lofpar = list(metric = \"manhattan\", mode = \"soft\", minPts = 10),   methods,   verbose = FALSE,   spname = NULL,   warn = TRUE,   missingness = 0.1,   showErrors = TRUE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/multidetect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allows ensemble multiple outlier detection methods. — multidetect","text":"data Dataframe list data sets multiple single species extraction environment predictors. var variable check outliers especially one directly affects species distribution maximum temperature coldest month bioclimatic variables (IUCN Standards Petitions Committee, 2022)) stream power index hydromorphological parameters (Logez et al., 2012). output Either clean: data set outliers, outlier: output dataframe outliers. Default outlier. exclude Exclude variables considered fitting one class model, example x y columns latitude/longitude column user want consider. multiple multiple species considered, multiple set TRUE: FALSE multiple set FALSE. colsp column species columns data set species dataframe list. see pred_extract extracting environmental data. optpar Parameters species optimal ranges like temperatures ranges. kmpar Parameters k-means clustering like method number clusters tuning. kmedoidpar Parameters adjusting distance metrics used kmedoid method. ifpar Isolation forest parameter settings. Parameters isolation model required include cutoff used denoting outliers. ranges 0 1 Default 0.5. Also, size data partitioning training determined. details check (Liu et al. 2008) mahalpar Parameters Malahanobis distance includes varying mode output. jkpar Parameters reverse jack knifing mainly mode used. zpar Parameters z-score mode x parameter. gloshpar Parameters global local outlier score hierarchies distance metric used.. knnpar Parameters varying distance matrix Euclidean Manhattan distance. lofpar Parameters local outlier factor distance matrix mode method implementation robust soft modes.. methods Outlier detection methods considered. Use extractMethod get outliers implemented package. verbose whether return messages . Default FALSE. spname species name handled. warn whether return warning . Default TRUE. missingness Allowed missing values column allow user decide whether remove individual columns rows data sets. Default 0.1. Therefore, column 10% missing values, removed dataset rather rows. showErrors show execution errors therefore multiple species code break one methods fails execute.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/multidetect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allows ensemble multiple outlier detection methods. — multidetect","text":"Outliers clean dataset.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/multidetect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Allows ensemble multiple outlier detection methods. — multidetect","text":"function computes different outlier detection methods including univariate, multivariate species      ecological ranges enables seammless comaprision similarities outliers detected      method. can done multiple species single species dataframe lists dataframes      thereafter outliers can extracted using clean_data_extract function.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/multidetect.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Allows ensemble multiple outlier detection methods. — multidetect","text":"IUCN Standards Petitions Committee. (2022). IUCN RED LIST THREATENED SPECIESTM Guidelines Using IUCN Red List Categories Criteria Prepared Standards Petitions Committee IUCN Species Survival Commission. https://www.iucnredlist.org/documents/RedListGuidelines.pdf. Liu FeiT, Ting KaiM, Zhou Z-H. 2008. Isolation Forest. Pages 413-422 2008 Eighth IEEE International Conference Data Mining. Available https://ieeexplore.ieee.org/abstract/document/4781136 (accessed November 18, 2023).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/multidetect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Allows ensemble multiple outlier detection methods. — multidetect","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\") data(\"jdsdata\")  matchdata <- match_datasets(datasets = list(jds = jdsdata, efi=efidata),                             lats = 'lat',                             lons = 'lon',                             species = c('speciesname','scientificName'),                             date = c('Date', 'sampling_date'),                             country = c('JDS4_site_ID'))   datacheck <- check_names(matchdata, colsp= 'species', pct = 90, merge =TRUE)   db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet=TRUE)   worldclim <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  rdata <- pred_extract(data = datacheck,                      raster= worldclim ,                      lat = 'decimalLatitude',                     lon= 'decimalLongitude',                     colsp = 'speciescheck',                     bbox = db,                      multiple = TRUE,                     minpts = 10,                     list=TRUE,                     merge=F)   out_df <- multidetect(data = rdata, multiple = TRUE,                      var = 'bio6',                      output = 'outlier',                      exclude = c('x','y'),                      methods = c('zscore', 'adjbox','iqr', 'semiqr','hampel', 'kmeans',                                 'logboxplot', 'lof','iforest', 'mahal', 'seqfences'))   #optimal ranges in the multidetect: made up  optdata <- data.frame(species= c(\"Salmo trutta\", \"Abramis brama\"),                       mintemp = c(6, 1.6),maxtemp = c(20, 21),                        meantemp = c(8.5, 10.4), #ecoparam                       direction = c('greater', 'greater')) #species record  salmoabramis <- rdata[\"Salmo trutta\"]  #even if one species, please indicate multiple to TRUE, since its picked from pred_extract function  out_df <- multidetect(data = salmoabramis, multiple = TRUE,                       var = 'bio1',                       output = 'outlier',                       exclude = c('x','y'),                       methods = c('zscore', 'adjbox','iqr', 'semiqr','hampel', 'kmeans',                                   'logboxplot', 'lof','iforest', 'mahal', 'seqfences', 'optimal'),                       optpar = list(optdf=optdata, optspcol = 'species',                                     mincol = \"mintemp\", maxcol = \"maxtemp\")) #plot the number of outliers  ggoutliers(out_df, 1)  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/naturalist.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset with species NATURA2000 categories. — naturalist","title":"Dataset with species NATURA2000 categories. — naturalist","text":"tibble data consist 388303 rows 19 columns represents        different species list. list downloaded EEA website manually        archived package use. information citation","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/naturalist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset with species NATURA2000 categories. — naturalist","text":"","code":"data(naturalist)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/naturalist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataset with species NATURA2000 categories. — naturalist","text":"tibble 388303 rows i9 columns.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/naturalist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dataset with species NATURA2000 categories. — naturalist","text":"data extracted (https://www.eea.europa.eu/themes/biodiversity/natura-2000).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/naturalist.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dataset with species NATURA2000 categories. — naturalist","text":"https://www.eea.europa.eu/themes/biodiversity/natura-2000.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/naturalist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset with species NATURA2000 categories. — naturalist","text":"","code":"if (FALSE) { # \\dontrun{  data(\"naturalist\") naturalist } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/naturaranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the records are obtained within the NATURA2000 geographical ranges. — naturaranges","title":"Check if the records are obtained within the NATURA2000 geographical ranges. — naturaranges","text":"Check records obtained within NATURA2000 geographical ranges.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/naturaranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the records are obtained within the NATURA2000 geographical ranges. — naturaranges","text":"","code":"naturaranges(   data,   species,   lat,   lon,   verbose = FALSE,   discard = TRUE,   batch = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/naturaranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the records are obtained within the NATURA2000 geographical ranges. — naturaranges","text":"data Dataframe input species records. dataframe accepted. species Column name containing species names. lat Column data latitude coordinates. decimal degrees accepted. lon Column data longitude coordinates. decimal degrees accepted. verbose TRUE, show processing messages. Default FALSE discard TRUE discard records outside NATURA2000 sites FALSE retained final dataset. Defualt TRUE batch TRUE, records one species one species.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/naturaranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the records are obtained within the NATURA2000 geographical ranges. — naturaranges","text":"Data set records found NATURA2000 polygon sites.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/naturaranges.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if the records are obtained within the NATURA2000 geographical ranges. — naturaranges","text":"function aimed identifying records located NATURA2000 protected sites mostly invasive species.     records invasive species recorded protected, management measures required avoid loss     ecosystem diversity species threatened extinction. Also, foe species distribution modelling,     records protected areas vital predicts areas occupied/invaded derive priority based     conservation. better understand species NATURA2000 list, check_natura function may used.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/naturaranges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the records are obtained within the NATURA2000 geographical ranges. — naturaranges","text":"","code":"if (FALSE) { # \\dontrun{  data(efidata)  spnat <- naturaranges(data= efidata, species = 'scientificName',                       lon = 'decimalLongitude', lat='decimalLatitude',                       verbose = T, batch = TRUE)  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/ndata.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard species ecological ranges — ndata","title":"Standard species ecological ranges — ndata","text":"tibble Extensible Freshwater Information Platform  (Schmidt-Kloiber et al., 2019)","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ndata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard species ecological ranges — ndata","text":"","code":"data(ndata)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/ndata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Standard species ecological ranges — ndata","text":"tibble 637 rows 129 columns.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ndata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standard species ecological ranges — ndata","text":"Species ecological parameters ecological ranges native alien","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ndata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Standard species ecological ranges — ndata","text":"Schmidt-Kloiber, ., Bremerich, V., De Wever, . et al. Freshwater Information Platform: global online network providing data, tools resources science policy support. Hydrobiologia 838, 1–11 (2019).  https://doi.org/10.1007/s10750-019-03985-5","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ndata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard species ecological ranges — ndata","text":"","code":"if (FALSE) { # \\dontrun{  data(\"ndata\") ndata } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/ocindex.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies absolute outliers and their proportions for a single species. — ocindex","title":"Identifies absolute outliers and their proportions for a single species. — ocindex","text":"Identifies absolute outliers proportions single species.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ocindex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies absolute outliers and their proportions for a single species. — ocindex","text":"","code":"ocindex(   x,   sp = NULL,   threshold = NULL,   absolute = FALSE,   props = FALSE,   warn = TRUE,   autothreshold = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/ocindex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies absolute outliers and their proportions for a single species. — ocindex","text":"x List dataframes methods used identify outliers mult_detect function. sp species name index multiple species considered outlier detection. threshold Maximum value denote absolute outlier. threshold ranges 0 indicates point flagged outlier detection method outlier 1, means record absolute true outlier sicen identified methods. extremes, low threshold values, many records classified, may due individual method weakness strength data distribution. Also, higher threshold values, true outliers retained Fo example, 10 methods considered 9 methods flags record outlier, cut 1 used, particular record retained. Therefore default cutoff 0.6 autothreshold can used select appropriate threshold. absolute output absolute outliers species. props output proportional absoluteness outlier. warn TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. autothreshold Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ocindex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies absolute outliers and their proportions for a single species. — ocindex","text":"vector absolute outliers, best outlier detection method data frame absolute outliers proportions","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ocindex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies absolute outliers and their proportions for a single species. — ocindex","text":"","code":"if (FALSE) { # \\dontrun{ data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                       lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection  outliers <- multidetect(data = extdf, output='outlier',                        exclude = c('x','y'), multiple = TRUE,                        methods = c('mixediqr', \"iqr\", \"kmeans\", \"mahal\"),                        kmpar =list(k=6, method='silhouette', mode='soft'))  ociss <- ocindex(x = outliers, sp= 1, threshold = 0.2, absolute = TRUE)# #No outliers detected in more than two methods  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/onesvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify outliers using One Class Support Vector Machines — onesvm","title":"Identify outliers using One Class Support Vector Machines — onesvm","text":"Identify outliers using One Class Support Vector Machines","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/onesvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify outliers using One Class Support Vector Machines — onesvm","text":"","code":"onesvm(   data,   kernel = \"radial\",   tune = NULL,   exclude = NULL,   output,   tpar = list(gamma = 1^(-1:1), epislon = seq(0, 1, 0.1), cost = 2^2:4, nu = seq(0.05, 1,     0.1)) )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/onesvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify outliers using One Class Support Vector Machines — onesvm","text":"data Dataframe environmental variables extracted species recorded present absent. kernel Either radial, linear tune performed tuned version one-class svm. High computation requirements needed. exclude Exclude variables considered fitting one class model, example x y columns latitude/longitude column user doesnot want consider. output Either clean: dataset outliers outlier: output dataframe outliers. tpar list parameters varied tunning normal model.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/onesvm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify outliers using One Class Support Vector Machines — onesvm","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/onesvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify outliers using One Class Support Vector Machines — onesvm","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd ,                        lat = 'decimalLatitude',                        lon= 'decimalLongitude',                        colsp = 'speciescheck',                       bbox = db,                        multiple = TRUE,                        minpts = 10)  nedata <- onesvm(data = refdata[['Salmo trutta']], exclude = c(\"x\", \"y\"),  output='outlier') } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies best outlier detection method using Overlap coefficient. — overlap","title":"Identifies best outlier detection method using Overlap coefficient. — overlap","text":"Identifies best outlier detection method using Overlap coefficient.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies best outlier detection method using Overlap coefficient. — overlap","text":"","code":"overlap(x, sp = NULL, threshold = NULL, warn = FALSE, autothreshold = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies best outlier detection method using Overlap coefficient. — overlap","text":"x List data frames methods used identify outliers mult_detect function. sp species name index multiple species considered outlier detection. threshold Maximum value denote absolute outlier. threshold ranges 0 indicates point flagged outlier detection method outlier 1, means record absolute true outlier sicen identified methods. extremes, low threshold values, many records classified, may due individual method weakness strength data distribution. Also, higher threshold values, true outliers retained Fo example, 10 methods considered 9 methods flags record outlier, cut 1 used, particular record retained. Therefore default cutoff 0.6 autothreshold can used select appropriate threshold. warn TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. autothreshold Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies best outlier detection method using Overlap coefficient. — overlap","text":"best method identifying outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/overlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies best outlier detection method using Overlap coefficient. — overlap","text":"","code":"if (FALSE) { # \\dontrun{  data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                     lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection  outliers <- multidetect(data = extdf, var = 'bio6', output='outlier',                        exclude = c('x','y'), multiple = TRUE,                        methods = c('mixediqr', \"iqr\", \"kmeans\", \"mahal\"),                        kmpar =list(k=6, method='silhouette', mode='soft'))  overlapout <- overlap(x = outliers, sp= 1, threshold = 0.2, var = 'bio6')#   } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/plot-datacleaner-ANY-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize the outliers identified by each method — plot,datacleaner,ANY-method","title":"Visualize the outliers identified by each method — plot,datacleaner,ANY-method","text":"Visualize outliers identified method","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/plot-datacleaner-ANY-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize the outliers identified by each method — plot,datacleaner,ANY-method","text":"","code":"# S4 method for class 'datacleaner,ANY' plot(x, y, raw = TRUE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/plot-datacleaner-ANY-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize the outliers identified by each method — plot,datacleaner,ANY-method","text":"x . datacleaner object y . species index name multiple species raw Whether total number outlier flagged method provided (TRUE) FALSE return percentage outlier contribution method.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/plot-datacleaner-ANY-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize the outliers identified by each method — plot,datacleaner,ANY-method","text":"ggplot object indicating outlier detection methods number outlier flagged.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/pred_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Preliminary data cleaning including removing duplicates, records outside a particular basin, and NAs. — pred_extract","title":"Preliminary data cleaning including removing duplicates, records outside a particular basin, and NAs. — pred_extract","text":"Preliminary data cleaning including removing duplicates, records outside particular basin, NAs.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/pred_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preliminary data cleaning including removing duplicates, records outside a particular basin, and NAs. — pred_extract","text":"","code":"pred_extract(   data,   raster,   lat,   lon,   bbox = NULL,   colsp,   minpts = 10,   multiple = TRUE,   list = TRUE,   merge = FALSE,   verbose = FALSE,   warn = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/pred_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preliminary data cleaning including removing duplicates, records outside a particular basin, and NAs. — pred_extract","text":"data Data frame multiple species one species checking records coordinates, duplicates, check records fall land, sea, country city centroids, geographical outliers(Zzika et al., 2022). raster Environmental layers different providers WORLDCLIM (), Hydrogaphy90m (), CHELSA, Copernicus (). lat variable latitude column name. lon variable longitude column name. bbox Object class 'shapefile' particular basin considered. Bounding box vector points can also provided form \"c(xmin, ymin, xmax, ymax)\". xmin minimum longitude, ymin minimum latitude, xmax maximum longitude xmax minimum latitude. colsp variable already data. minpts minimum number records species removing duplicates within particular basin. multiple TRUE species one FALSE one species data. list TRUE list multiple species data frames generated FALSE dataframe species data sets. Default TRUE merge add columns species data data extraction. Default TRUE verbose TRUE message warnings produced. Default TRUE warn logical, indicating whether show implementation warning . Default FALSE.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/pred_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preliminary data cleaning including removing duplicates, records outside a particular basin, and NAs. — pred_extract","text":"precleaned cleaned data sets single multiple species","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/pred_extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preliminary data cleaning including removing duplicates, records outside a particular basin, and NAs. — pred_extract","text":"","code":"if (FALSE) { # \\dontrun{   data(jdsdata)  danube <- system.file('extdata/danube/basinfinal.shp', package='specleanr')  danubebasin <- sf::st_read(danube, quiet=TRUE)  #Get environmental data  worldclim <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  referencedata <- pred_extract(data = jdsdata,                           raster= worldclim ,                           lat ='decimalLatitude',                           lon = 'decimalLongitude',                           colsp = 'speciesname',                           bbox = danubebasin,                           multiple = TRUE,                           list= TRUE, #list will be generated for all species                           minpts = 10, merge=T) } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/runMerger.html","id":null,"dir":"Reference","previous_headings":"","what":"App runner file — runMerger","title":"App runner file — runMerger","text":"App runner file","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/runMerger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"App runner file — runMerger","text":"","code":"runMerger()"},{"path":"https://anthonybasooma.github.io/specleanr/reference/runMerger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"App runner file — runMerger","text":"merged standardized dataset","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/sdmfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Species distribution modelling — sdmfit","title":"Species distribution modelling — sdmfit","text":"Species distribution modelling","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/sdmfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species distribution modelling — sdmfit","text":"","code":"sdmfit(data, models = \"GLM\", cutoff = 0.5, metrics = \"all\", full = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/sdmfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Species distribution modelling — sdmfit","text":"data list species data testing training, probably boots function. models character acceptable models used examine relationship species occurrences environmental parameters. Random forest generalized linear models accepted. GLM used set Generalized Linear Models RF Random Forest. RF1 variant slower suggested RF fails. cutoff numeric value defines threshold classify model predictions/probabilities presence absent. Default 0.5. maximum 1 lowest 0. metrics character allow consider either consider threshold-dependent (dep), threshold-independent (indep) evaluation metrics determine model performance. full character either full model output TRUE FALSE performance metrics output.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/sdmfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Species distribution modelling — sdmfit","text":"Lists model runs, performance evaluation metrics training testing; also threshold-dependeent independent metrics..","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/sdmfit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Species distribution modelling — sdmfit","text":"","code":"if (FALSE) { # \\dontrun{  data(efidata)  worldclim <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))   datacheckf <- subset(efidata,  subset = scientificName %in%c(\"Squalius cephalus\"))   #select species with enough records  dataprep <- envextract(occurences = datacheckf, raster = worldclim,                       lat = \"decimalLatitude\", lon = \"decimalLongitude\", binary = FALSE, prop = 0.8)  nb <- boots(data = dataprep, nboots = 10, testprob = 0.3)  sdmd <- sdmfit(data = nb, models = 'RF') } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/semiIQR.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes semi-interquantile range to flag suspicious outliers — semiIQR","title":"Computes semi-interquantile range to flag suspicious outliers — semiIQR","text":"Computes semi-interquantile range flag suspicious outliers","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/semiIQR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes semi-interquantile range to flag suspicious outliers — semiIQR","text":"","code":"semiIQR(data, var, output, x = 3)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/semiIQR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes semi-interquantile range to flag suspicious outliers — semiIQR","text":"data Dataframe check outliers var Environmental parameter considered flagging suspicious outliers output Either clean: dataframe suspicious outliers outlier: retrun dataframe outliers x constant create fence boundary detect outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/semiIQR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes semi-interquantile range to flag suspicious outliers — semiIQR","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/semiIQR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computes semi-interquantile range to flag suspicious outliers — semiIQR","text":"SemiInterquantile Ranges introduced adjusts whiskers either side flag suspicious outliers [Q1 – 3(Q2 (median) − Q1); Q3 + 3(Q3 − Q2)] ((Kimber 1990)). However, SIQR introduced constant values bounding fences lower upper quartiles (Rousseeuw & Hubert 2011), leads outlier swamping masking.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/semiIQR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computes semi-interquantile range to flag suspicious outliers — semiIQR","text":"Kimber AC. 1990. Exploratory Data Analysis Possibly Censored Data Skewed Distributions. Page Source: Journal Royal Statistical Society. Series C (Applied Statistics).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/semiIQR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes semi-interquantile range to flag suspicious outliers — semiIQR","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd , lat = 'decimalLatitude', lon= 'decimalLongitude',                           colsp = 'speciescheck',                           bbox = db,                           multiple = TRUE,                           minpts = 10)   semiout <- semiIQR(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier')  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/seqfences.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequwntial fences method — seqfences","title":"Sequwntial fences method — seqfences","text":"Sequwntial fences method","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/seqfences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequwntial fences method — seqfences","text":"","code":"seqfences(data, var, output, gamma = 0.95, mode = \"eo\")"},{"path":"https://anthonybasooma.github.io/specleanr/reference/seqfences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequwntial fences method — seqfences","text":"data Dataframe vector check outliers. var Variable used outlier detection data vector file. output Either clean: clean data output without outliers; outliers: outlier data frame vectors. gamma lll mode lll","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/seqfences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequwntial fences method — seqfences","text":"Dataframe vector without outliers","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/seqfences.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sequwntial fences method — seqfences","text":"Sequential fences modification TUKEY boxplot, data divided groups fences Schwertman & de Silva 2007. groups can range 1, flags mild outliers 6 extreme outliers ()","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/seqfences.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sequwntial fences method — seqfences","text":"Schwertman NC, de Silva R. 2007. Identifying outliers sequential fences. Computational Statistics Data Analysis 51:3800-3810. Schwertman NC, Owens MA, Adnan R. 2004. simple general boxplot method identifying outliers. Computational Statistics Data Analysis 47:165-174. Dastjerdy B, Saeidi , Heidarzadeh S. 2023. Review Applicable Outlier Detection Methods Treat Geomechanical Data. Geotechnics 3:375-396. MDPI AG.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/seqfences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequwntial fences method — seqfences","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'), quiet = TRUE)  refdata <- pred_extract(data = gbd, raster= wcd , lat = 'decimalLatitude', lon= 'decimalLongitude',                           colsp = 'speciescheck',                           bbox = db,                           multiple = TRUE,                           minpts = 10)   sqout <- seqfences(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier') } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/show-datacleaner-method.html","id":null,"dir":"Reference","previous_headings":"","what":"set method for displaying output details after outlier detection. — show,datacleaner-method","title":"set method for displaying output details after outlier detection. — show,datacleaner-method","text":"set method displaying output details outlier detection.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/show-datacleaner-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set method for displaying output details after outlier detection. — show,datacleaner-method","text":"","code":"# S4 method for class 'datacleaner' show(object)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/show-datacleaner-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set method for displaying output details after outlier detection. — show,datacleaner-method","text":"object data model outlier detection.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/show-dataonline-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for viewing details of the downloaded data. — show,dataonline-method","title":"Method for viewing details of the downloaded data. — show,dataonline-method","text":"Method viewing details downloaded data.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/show-dataonline-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for viewing details of the downloaded data. — show,dataonline-method","text":"","code":"# S4 method for class 'dataonline' show(object)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/show-dataonline-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for viewing details of the downloaded data. — show,dataonline-method","text":"object data online model displaying data.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/smc.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify best outlier detection method using simple matching coefficient. — smc","title":"Identify best outlier detection method using simple matching coefficient. — smc","text":"Identify best outlier detection method using simple matching coefficient.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/smc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify best outlier detection method using simple matching coefficient. — smc","text":"","code":"smc(x, sp = NULL, threshold = NULL, warn = TRUE, autothreshold = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/smc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify best outlier detection method using simple matching coefficient. — smc","text":"x List data frames methods used identify outliers mult_detect function. sp species name index multiple species considered outlier detection. threshold Maximum value denote absolute outlier. threshold ranges 0 indicates point flagged outlier detection method outlier 1, means record absolute true outlier sicen identified methods. extremes, low threshold values, many records classified, may due individual method weakness strength data distribution. Also, higher threshold values, true outliers retained Fo example, 10 methods considered 9 methods flags record outlier, cut 1 used, particular record retained. Therefore default cutoff 0.6 autothreshold can used select appropriate threshold. warn TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. autothreshold Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/smc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify best outlier detection method using simple matching coefficient. — smc","text":"best method identifying outliers based simple matching coefficient.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/smc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify best outlier detection method using simple matching coefficient. — smc","text":"","code":"if (FALSE) { # \\dontrun{ data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                       lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection  outliers <- multidetect(data = extdf,  output='outlier',                        exclude = c('x','y'), multiple = TRUE,                        methods = c('mixediqr', \"iqr\", \"kmeans\", \"mahal\"),                        kmpar =list(k=6, method='silhouette', mode='soft'))  smcout <- smc(x = outliers, sp= 1, threshold = 0.2, var = 'bio6')#   } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/sorensen.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies best outlier detection method suing Sorensen Similarity Index. — sorensen","title":"Identifies best outlier detection method suing Sorensen Similarity Index. — sorensen","text":"Identifies best outlier detection method suing Sorensen Similarity Index.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/sorensen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies best outlier detection method suing Sorensen Similarity Index. — sorensen","text":"","code":"sorensen(x, sp = NULL, threshold = NULL, warn = FALSE, autothreshold = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/sorensen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies best outlier detection method suing Sorensen Similarity Index. — sorensen","text":"x List data frames methods used identify outliers mult_detect function. sp species name index multiple species considered outlier detection. threshold Maximum value denote absolute outlier. threshold ranges 0 indicates point flagged outlier detection method outlier 1, means record absolute true outlier sicen identified methods. extremes, low threshold values, many records classified, may due individual method weakness strength data distribution. Also, higher threshold values, true outliers retained Fo example, 10 methods considered 9 methods flags record outlier, cut 1 used, particular record retained. Therefore default cutoff 0.6 autothreshold can used select appropriate threshold. warn TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. autothreshold Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/sorensen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies best outlier detection method suing Sorensen Similarity Index. — sorensen","text":"best method identifying outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/sorensen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies best outlier detection method suing Sorensen Similarity Index. — sorensen","text":"","code":"if (FALSE) { # \\dontrun{  data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                       lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection  outliers <- multidetect(data = extdf, var = 'bio6', output='outlier',                        exclude = c('x','y'), multiple = TRUE,                        methods = c('mixediqr', \"iqr\", \"kmeans\", \"mahal\"),                        kmpar =list(k=6, method='silhouette', mode='soft'))  sordata <- sorensen(x = outliers, sp= 1, threshold = 0.2, var = 'bio6')#   } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/sprange.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect outliers using predefined optimal ranges such as annual mean temperature from WORLDCLIM — sprange","title":"Detect outliers using predefined optimal ranges such as annual mean temperature from WORLDCLIM — sprange","text":"Detect outliers using predefined optimal ranges annual mean temperature WORLDCLIM","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/sprange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect outliers using predefined optimal ranges such as annual mean temperature from WORLDCLIM — sprange","text":"","code":"sprange(   data,   var = NULL,   minval = NULL,   maxval = NULL,   ecoparam = NULL,   lat = NULL,   lon = NULL,   direction = NULL,   geo = NULL )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/sprange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect outliers using predefined optimal ranges such as annual mean temperature from WORLDCLIM — sprange","text":"data Dataframe species records environmental data var Environmental parameter considered flagging suspicious outliers. parameter directly influences species distribution annual mean temperature, minimum temperature coldest month, maximum temperature warmest month, spring precipitation (IUCN Standards Petitions Committee 2022). minval Minimum temperature column standard optimal dataframe. can obtained literature standard databases FishBase (www.fishbase.org), Freshwater Information platform (http://www.freshwaterplatform.eu/), IUCN red list (https://www.iucnredlist.org/). maxval Maximum temperature column standard optimal dataframe. ecoparam used single value used tgether direction can used flag set otpimal conditions. example, mean 10 used, ecoparam = 10 direction can equal, less, greater lesseqaul stipulated value. lat, lon string columns latitudes longitudes. direction Indicates direction takes ecoparam. example, less ecoparam. geo logical, aid switching temperature parameter temp latitudinal/longitudinal ranges.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/sprange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect outliers using predefined optimal ranges such as annual mean temperature from WORLDCLIM — sprange","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/sprange.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Detect outliers using predefined optimal ranges such as annual mean temperature from WORLDCLIM — sprange","text":"García-Roselló E, Guisande C, Heine J, Pelayo-Villamil P, Manjarrés-Hernández , González Vilas L, González-Dacosta J, Vaamonde , Granado-Lorencio C. 2014. Using modestr download, import clean species distribution records. Methods Ecology Evolution 5:708-713. IUCN Standards Petitions Committee. 2022. IUCN RED LIST THREATENED SPECIESTM Guidelines Using IUCN Red List Categories Criteria Prepared Standards Petitions Committee IUCN Species Survival Commission. Available https://www.iucnredlist.org/documents/RedListGuidelines.pdf.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/sprange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect outliers using predefined optimal ranges such as annual mean temperature from WORLDCLIM — sprange","text":"","code":"if (FALSE) { # \\dontrun{  library(terra)  #species data from online databases  gbdata <- getdata(data='Gymnocephalus baloni', gbiflim = 100, inatlim = 100, vertlim = 100)  gbfinal <- extract_online(online = gbdata)  gbchecked <- check_names(data = gbfinal, colsp='species', pct=90, merge=TRUE)  #preclean and extract  danube <- system.file('extdata/danube/basinfinal.shp', package='specleanr')  danubebasin <- sf::st_read(danube)  #Get environmental data  worldclim <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'), quiet=TRUE)  precleaned <- precleaner(data = gbchecked,                           raster= worldclim ,                           lat = 'decimalLatitude',                           lon= 'decimalLongitude',                           colsp = 'speciescheck',                           basin = danubebasin,                           multiple = FALSE,                           minpts = 10)  #outliers spoptimal_df <- optimal(data = precleaned, var = 'bio1', output='outlier', min = 4, max =20)  #clean spoptimal_df <- optimal(data = precleaned, var = 'bio1', output='clean', min = 4, max =20)  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/suggested.packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for suggested packages. — suggested.packages","title":"Check for suggested packages. — suggested.packages","text":"Check suggested packages.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/suggested.packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for suggested packages. — suggested.packages","text":"","code":"suggested.packages(   listpkgs = c(\"shiny\", \"shinydashboard\", \"DT\", \"dplyr\"),   reason = \"open the R Shiny Application\",   quiet = TRUE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/suggested.packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for suggested packages. — suggested.packages","text":"listpkgs Packages included. reason Reason packages needs installed. quiet Default TRUE, messages.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/suggested.packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for suggested packages. — suggested.packages","text":"Packages","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/tcatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Catch errors during methods implementation. — tcatch","title":"Catch errors during methods implementation. — tcatch","text":"Catch errors methods implementation.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/tcatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Catch errors during methods implementation. — tcatch","text":"","code":"tcatch(   func,   fname = NULL,   spname = NULL,   verbose = FALSE,   warn = FALSE,   showErrors = TRUE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/tcatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Catch errors during methods implementation. — tcatch","text":"func Outlier detection function fname function name messaging warning identification. spname species name handled verbose whether return messages . Default FALSE. warn whether return warning . Default TRUE. showErrors show execution errors therefore multiple species code break one methods fails execute.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/tcatch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Catch errors during methods implementation. — tcatch","text":"Handle errors","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/thermal_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Collates minimum, maximum, and preferable temperatures from FishBase. — thermal_ranges","title":"Collates minimum, maximum, and preferable temperatures from FishBase. — thermal_ranges","text":"Collates minimum, maximum, preferable temperatures FishBase.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/thermal_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collates minimum, maximum, and preferable temperatures from FishBase. — thermal_ranges","text":"","code":"thermal_ranges(   x,   colsp = NULL,   verbose = F,   pct = 90,   sn = FALSE,   synonym = fishbase(tables = \"synonym\"),   ranges = fishbase(tables = \"ranges\") )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/thermal_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collates minimum, maximum, and preferable temperatures from FishBase. — thermal_ranges","text":"x species names dataframe species aid retrieving temperature ranges FishBase. colsp x data frame, column species required. Otherwise list species vector, colsp NULL. verbose logical, return implementation messages. Default FALSE. pct numeric, provide perecentage similarity species name provided one FishBase. lower pct value, higher chances getting wrong species standard databases (FishBase). plausible pct value greater 0.9. sn logical, either output synonym accepted names. parameter reduces duplication species synonyms old name etc. information see FishBase. synonym standard database species synonym names FishBase. See FishBase information. ranges standard database ecological ranges FishBase. See FishBase information.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/thermal_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collates minimum, maximum, and preferable temperatures from FishBase. — thermal_ranges","text":"Data table minimum, maximum preferable species temperatures FishBase.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/thermal_ranges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collates minimum, maximum, and preferable temperatures from FishBase. — thermal_ranges","text":"","code":"if (FALSE) { # \\dontrun{  x <- thermal_ranges(x = \"Salmo trutta\") } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/xglosh.html","id":null,"dir":"Reference","previous_headings":"","what":"Global-Local Outlier Score from Hierarchies — xglosh","title":"Global-Local Outlier Score from Hierarchies — xglosh","text":"Global-Local Outlier Score Hierarchies","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xglosh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global-Local Outlier Score from Hierarchies — xglosh","text":"","code":"xglosh(data, k, output, exclude = NULL, metric = \"manhattan\", mode = \"soft\")"},{"path":"https://anthonybasooma.github.io/specleanr/reference/xglosh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global-Local Outlier Score from Hierarchies — xglosh","text":"data Data frame species records environmental data. k size neighborhood (Hahsler et al 2022). output Either clean: data frame suspicious outliers outlier: return dataframe outliers. exclude Exclude variables considered fitting one class model, example x y columns latitude/longitude column user want consider. metric different metric distances compute distances among environmental predictors. See dist function te different distances applied. different measures allowed including \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\". mode includes soft outliers removed using mean compute z-scores robust median absolute deviation.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xglosh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global-Local Outlier Score from Hierarchies — xglosh","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xglosh.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global-Local Outlier Score from Hierarchies — xglosh","text":"Campello, Ricardo JGB, Davoud Moulavi, Arthur Zimek, Joerg Sander. Hierarchical density estimates data clustering, visualization, outlier detection. ACM Transactions Knowledge Discovery Data (TKDD) 10, . 1 (2015). doi:10.1145/2733381 Hahsler M, Piekenbrock M (2022). dbscan: Density-Based Spatial Clustering Applications Noise (DBSCAN) Related Algorithms. R package version 1.1-11, <https://CRAN.R-project.org/package=dbscan>","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xglosh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global-Local Outlier Score from Hierarchies — xglosh","text":"","code":"data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd ,                        lat = 'decimalLatitude',                        lon= 'decimalLongitude',                        colsp = 'speciescheck',                        bbox = db,                        multiple = TRUE,                        minpts = 10)  gloshout <- xglosh(data = refdata[['Salmo trutta']], exclude = c(\"x\", \"y\"),                 output='outlier', metric ='manhattan', k = 3,                  mode = \"soft\")"},{"path":"https://anthonybasooma.github.io/specleanr/reference/xkmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Flags outliers using kmeans clustering method — xkmeans","title":"Flags outliers using kmeans clustering method — xkmeans","text":"Flags outliers using kmeans clustering method","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xkmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flags outliers using kmeans clustering method — xkmeans","text":"","code":"xkmeans(   data,   k,   exclude = NULL,   output,   mode = \"soft\",   method = \"silhouette\",   verbose = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/xkmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flags outliers using kmeans clustering method — xkmeans","text":"data Dataframe check outliers k number clusters used optimization. greater 1. many species k greater 10 ably cater species search optimal k using different optimization methods kmethod exclude Exclude variables considered fitting one class model, example x y columns latitude/longitude column user want consider. output Either clean: data set outliers outlier: output data frame outliers. mode Either robust, robust mode used uses median instead mean median absolute deviation median. method method used kmeans clustering. Default silhouette. Elbow method can used user input required, therefore multiple outlier detection method possible. verbose indicate messages default FALSE.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xkmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flags outliers using kmeans clustering method — xkmeans","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xkmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flags outliers using kmeans clustering method — xkmeans","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd ,                         lat = 'decimalLatitude',                         lon= 'decimalLongitude',                         colsp = 'speciescheck',                         bbox = db,                         multiple = TRUE,                         minpts = 10)  kmeansout <- xkmeans(data = refdata[['Salmo trutta']],                       output='outlier', exclude = c('x', 'y'), mode = 'soft', k=3) } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/xkmedian.html","id":null,"dir":"Reference","previous_headings":"","what":"Using kmedian outlier detection methods — xkmedian","title":"Using kmedian outlier detection methods — xkmedian","text":"Using kmedian outlier detection methods","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xkmedian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using kmedian outlier detection methods — xkmedian","text":"","code":"xkmedian(data, k = 3, setseed = 1144)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/xkmedian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using kmedian outlier detection methods — xkmedian","text":"data Input data checking outliers k Number clusters setseed Set randomness median values initate clusters.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xkmedian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using kmedian outlier detection methods — xkmedian","text":"clean outlier data set outlier detection.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xkmedian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Using kmedian outlier detection methods — xkmedian","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd ,                        lat = 'decimalLatitude',                        lon= 'decimalLongitude',                        colsp = 'speciescheck',                       bbox = db,                        multiple = TRUE,                        minpts = 10)  kmedianout <- xkmedian(data = refdata, k = 3)  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/xkmedoid.html","id":null,"dir":"Reference","previous_headings":"","what":"kmediod method for outlier detection — xkmedoid","title":"kmediod method for outlier detection — xkmedoid","text":"kmediod method outlier detection","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xkmedoid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"kmediod method for outlier detection — xkmedoid","text":"","code":"xkmedoid(   data,   k = 2,   metric = \"manhattan\",   output,   exclude = NULL,   x = 1.5,   full = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/xkmedoid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"kmediod method for outlier detection — xkmedoid","text":"data environmental data outliers examined . k number cluster centers form cluster around . Since kmedoid using raw values dataset, insensitive outliers. metric Different distance based matrics including Euclidean Manhattan implemented. output Either clean outliers dataset. Default outlier output outliers dataset. exclude columns remove implementing kmedoid algorithms, example, coordinates. K-medoid multivariate algorithm use data. x constant determine outliers. full extracting dataset large dataset. See getdiff","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xkmedoid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"kmediod method for outlier detection — xkmedoid","text":"clean outlier data set outlier detection","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xkmedoid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"kmediod method for outlier detection — xkmedoid","text":"outliers determined computing absolute distance mediod (ADMP) point Al-Zoubi 2009. AMDP calculated computing distance measures point within cluster using either Manhattan Euclidean Distance method. , data point particular cluster, ADMP calculated, outlier threshold (T) cluster calculated average ADMP values cluster multiplied \"constant, x= 1.5\" Singh & Kumar 2013. ADMP particular point greater T values, outlier  Singh & Kumar 2013.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xknn.html","id":null,"dir":"Reference","previous_headings":"","what":"k-nearest neighbors for outlier detection — xknn","title":"k-nearest neighbors for outlier detection — xknn","text":"k-nearest neighbors outlier detection","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xknn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"k-nearest neighbors for outlier detection — xknn","text":"","code":"xknn(data, output, exclude = NULL, metric = \"manhattan\", mode = \"soft\")"},{"path":"https://anthonybasooma.github.io/specleanr/reference/xknn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"k-nearest neighbors for outlier detection — xknn","text":"data Data frame species records environmental data. output Either clean: data frame suspicious outliers outlier: return dataframe outliers. exclude Exclude variables considered fitting one class model, example x y columns latitude/longitude column user want consider. metric different metric distances compute distances among environmental predictors. See dist function te different distances applied. different measures allowed including \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\". mode includes soft outliers removed using mean compute z-scores robust median absolute deviation.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xknn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"k-nearest neighbors for outlier detection — xknn","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xknn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"k-nearest neighbors for outlier detection — xknn","text":"","code":"if (FALSE) { # \\dontrun{ data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd ,                        lat = 'decimalLatitude',                        lon= 'decimalLongitude',                        colsp = 'speciescheck',                       bbox = db,                        multiple = TRUE,                        minpts = 10)  lofout <- xknn(data = refdata[['Salmo trutta']], exclude = c(\"x\", \"y\"),                 output='outlier', metric ='manhattan',                  mode = \"soft\") } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/xlof.html","id":null,"dir":"Reference","previous_headings":"","what":"Flags suspicious using the local outlier factor or Density-Based Spatial Clustering of Applications with Noise. — xlof","title":"Flags suspicious using the local outlier factor or Density-Based Spatial Clustering of Applications with Noise. — xlof","text":"Flags suspicious using local outlier factor Density-Based Spatial Clustering Applications Noise.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xlof.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flags suspicious using the local outlier factor or Density-Based Spatial Clustering of Applications with Noise. — xlof","text":"","code":"xlof(data, output, minPts, exclude = NULL, metric = \"manhattan\", mode = \"soft\")"},{"path":"https://anthonybasooma.github.io/specleanr/reference/xlof.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flags suspicious using the local outlier factor or Density-Based Spatial Clustering of Applications with Noise. — xlof","text":"data Data frame species records environmental data output Either clean: data frame suspicious outliers outlier: return dataframe outliers. minPts Minimum neighbors around records. exclude Exclude variables considered fitting one class model, example x y columns latitude/longitude column user want consider. metric Distance-based measure examine distance variables. Default manhattan. mode Either soft mean used robust mad used. Default soft.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xlof.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flags suspicious using the local outlier factor or Density-Based Spatial Clustering of Applications with Noise. — xlof","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xlof.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flags suspicious using the local outlier factor or Density-Based Spatial Clustering of Applications with Noise. — xlof","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd ,                        lat = 'decimalLatitude',                        lon= 'decimalLongitude',                        colsp = 'speciescheck',                       bbox = db,                        multiple = TRUE,                        minpts = 10)  lofout <- xlof(data = refdata[['Salmo trutta']], exclude = c(\"x\", \"y\"),                 output='outlier', metric ='manhattan',                 minPts = 10, mode = \"soft\") } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/zscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes z-scores to flag environmental outliers. — zscore","title":"Computes z-scores to flag environmental outliers. — zscore","text":"Computes z-scores flag environmental outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/zscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes z-scores to flag environmental outliers. — zscore","text":"","code":"zscore(data, var, output, type = \"mild\", mode = \"soft\")"},{"path":"https://anthonybasooma.github.io/specleanr/reference/zscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes z-scores to flag environmental outliers. — zscore","text":"data Dataframe vector check outliers. var Variable considered flagging suspicious outliers. output Either clean: data frame suspicious outliers outlier: return dataframe outliers. type Either mild zscore cut 2.5 extreme zscore >3. mode Either robust, robust mode used uses median instead mean median absolute deviation median.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/zscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes z-scores to flag environmental outliers. — zscore","text":"Data frame outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/zscore.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computes z-scores to flag environmental outliers. — zscore","text":"method uses mean estimator location standard deviation scale     (Rousseeuw & Hubert 2011), zero breakdown point,     influence function unbounded (robustness estimator outliers)     (Seo 2006; Rousseeuw & Hubert 2011). parameters     robust outliers, leads outlier masking swamping     (Rousseeuw & Hubert 2011). Records flagged outliers     Z-score exceeds 2.5 (Rousseeuw & Hubert 2011).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/zscore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes z-scores to flag environmental outliers. — zscore","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd , lat = 'decimalLatitude', lon= 'decimalLongitude',                           colsp = 'speciescheck',                           bbox = db,                           multiple = TRUE,                           minpts = 10)   zout <- zscore(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier')  } # }"}]
