[{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://anthonybasooma.github.io/specleanr/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://anthonybasooma.github.io/specleanr/articles/Plants.html","id":"data-acquisition-a-species-records","dir":"Articles","previous_headings":"","what":"1. Data acquisition: a) species records","title":"Detecting environmental outliers in species distribution models for plants.","text":"Data retrieved iNaturalist (https://www.inaturalist.org/) Global Biodiversity Information Facility-GBIF (https://www.gbif.org/). use getdata() function, built around rvertnet, rgbif, rinat packages. limited occurrence records GBIF 700 iNaturalist 100. * Note: user locally saved data, extracting online data, match_datasets() function can used merge data sets. set bounding box (extent) parameter getdata() return records within Danube basin. However, user can set suit area concern. set, user data download records globally, time-consuming likely break download. Therefore, strongly advisable set bounding box. Also, shapefile available, user can provide instead bounding box, function automatically extract bounding box.","code":"plantdf <- getdata(data = c( \"Populus nigra\", \"Fagus sylvatica\"),                      gbiflim = 700, inatlim = 100,                      hasCoordinate = TRUE,                     extent = list(xmin = 8.15250, ymin = 42.08333, xmax=29.73583, ymax = 50.24500),                    verbose = FALSE, warn = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/articles/Plants.html","id":"data-acquisition-b-environmental-predictors","dir":"Articles","previous_headings":"","what":"1. Data acquisition: b) Environmental predictors","title":"Detecting environmental outliers in species distribution models for plants.","text":"used WORLDCLIM data archived package enable users test package functions seamlessly. direct interaction WORDCLIM data, please visit (https://www.worldclim.org/) geodata package download user-customized workflows. WORLDCLIM data 19 bioclimatic variables (https://www.worldclim.org/data/bioclim.html) (Amatulli et al., 2022), including BIO1 = Annual Mean Temperature BIO2 = Mean Diurnal Range (Mean monthly (max temp - min temp)) BIO3 = Isothermality (BIO2/BIO7) (×100) BIO4 = Temperature Seasonality (standard deviation ×100) BIO5 = Max Temperature Warmest Month BIO6 = Min Temperature Coldest Month BIO7 = Temperature Annual Range (BIO5-BIO6) BIO8 = Mean Temperature Wettest Quarter BIO9 = Mean Temperature Driest Quarter BIO10 = Mean Temperature Warmest Quarter BIO11 = Mean Temperature Coldest Quarter BIO12 = Annual Precipitation BIO13 = Precipitation Wettest Month BIO14 = Precipitation Driest Month BIO15 = Precipitation Seasonality (Coefficient Variation) BIO16 = Precipitation Wettest Quarter BIO17 = Precipitation Driest Quarter BIO18 = Precipitation Warmest Quarter BIO19 = Precipitation Coldest Quarter","code":"#Get climatic variables from the package folder  worldclim <- system.file('extdata/worldclim.tiff', package = 'specleanr')  worldclim <- terra::rast(worldclim)"},{"path":"https://anthonybasooma.github.io/specleanr/articles/Plants.html","id":"preliminary-analysis","dir":"Articles","previous_headings":"","what":"2. Preliminary analysis","title":"Detecting environmental outliers in species distribution models for plants.","text":"step involves removing missing coordinate values, setting geographical range data collated 1., user set bounding box data download. , environmental data predictors extracted. user can set either parameter list = TRUE return list datasets species, multiple species considered, list = FALSE return combined dataframe. Danube basin collated Hydrography90m basin files (https://hydrography.org/hydrography90m/hydrography90m_layers).","code":"danube_basin <- sf::st_read(system.file('extdata', \"danube.shp.zip\", package = 'specleanr'),                              quiet = TRUE)  #Environmental predictors extraction for multiple species (multiple = TRUE)  multspreference_data <-  pred_extract(data= plantdf,                               raster= worldclim,                               lat = 'decimalLatitude',                              lon = 'decimalLongitude',                              colsp = 'species',                                bbox = danube_basin,                              list= TRUE,                               minpts = 10, merge = FALSE, verbose = FALSE, warn = FALSE)  #Environmental prediction extraction for a single species (multiple = FALSE) fagus_data_filtered <- subset(plantdf, species==\"Fagus sylvatica\")  fagus_data_reference <-  pred_extract(data= fagus_data_filtered,                               raster= worldclim,                               lat = 'decimalLatitude',                              lon = 'decimalLongitude',                              colsp = 'species',                                bbox = danube_basin,                               minpts = 10, merge = FALSE,                             verbose = FALSE, warn = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/articles/Plants.html","id":"detecting-outliers-using-multiple-outlier-detection-methods","dir":"Articles","previous_headings":"","what":"3. Detecting outliers using multiple outlier detection methods","title":"Detecting environmental outliers in species distribution models for plants.","text":"detect outliers selected ensembled seven outlier detection methods least different categories .e., 1) univariate methods: adjusted boxplot adjbox(), Hampel filter: hampel(), Z-score zscore() reverse jackknifing jknife(); 2) Multivariate methods machine learning models: local outlier factor: lof(), K-means: kmeans(), Mahalanobis distance measure mahal().","code":"#Flag outlier in single species data (multiple = TRUE) multspp_outliers <- multidetect(data = multspreference_data,                        multiple = TRUE,                        var = 'bio1',                        output = 'outlier',                        exclude = c('x','y'),                         methods = c('adjbox', \"hampel\", 'zscore',                                     'lof', 'jknife', 'kmeans', 'mahal'),                        silence_true_errors = FALSE, warn = F, verbose = F)  #Flag outlier in single species data (multiple = FALSE)  fagus_outliers <- multidetect(data = fagus_data_reference,                        multiple = FALSE,                        var = 'bio1',                        output = 'outlier',                        exclude = c('x','y'),                         methods = c('adjbox', \"hampel\", 'zscore',                                     'lof', 'jknife', 'kmeans', 'mahal'),                        silence_true_errors = FALSE, warn = F, verbose = F)"},{"path":"https://anthonybasooma.github.io/specleanr/articles/Plants.html","id":"visualizing-outliers-flagged-by-each-method","dir":"Articles","previous_headings":"","what":"Visualizing outliers flagged by each method","title":"Detecting environmental outliers in species distribution models for plants.","text":"plots wrapped ggplot2 object extensible ggplot2 parameters. ggoultiers() takes 3 parameters: 1: x outlier object datacleaner class; 2: y index species name outlier one species, 3: raw either indicate number outlier TRUE proportional outliers flagged total number occurrences FALSE  ### Identify best threshold using loess model.","code":"ggoutliers(x=multspp_outliers) #for one species: no index needed ggoutliers(x= fagus_outliers) optimal1<- optimal_threshold(refdata = fagus_data_reference, outliers = fagus_outliers, plot = TRUE) optimalthreshold <- optimal_threshold(refdata = multspreference_data, outliers = multspp_outliers, plot = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/articles/Plants.html","id":"extracting-clean-data-set-after-outlier-detection","dir":"Articles","previous_headings":"","what":"4. Extracting clean data set after outlier detection","title":"Detecting environmental outliers in species distribution models for plants.","text":"mode can set mode = abs discard absolute outliers mode = best use best method. outlier flagged best method used clean data. information, check (Basooma et al., 2025).","code":"multspp_qc_data <- extract_clean_data(refdata = multspreference_data,                                        outliers = multspp_outliers,                                       loess = TRUE)  multspp_qc_label <- classify_data(refdata = multspreference_data,                                        outliers = multspp_outliers)   fagus_qc_data <- extract_clean_data(refdata = fagus_data_reference,                                      outliers = fagus_outliers,                                     loess = TRUE)  fagus_qc_label <- classify_data(refdata = fagus_data_reference,                                      outliers = fagus_outliers)"},{"path":"https://anthonybasooma.github.io/specleanr/articles/Plants.html","id":"visualising-records-in-environmental-space","dir":"Articles","previous_headings":"","what":"Visualising records in environmental space","title":"Detecting environmental outliers in species distribution models for plants.","text":"","code":"#for single species ggenvironmentalspace(qcdata = fagus_qc_label,                      xvar = 'bio1',                      yvar = \"bio18\",                      xlab = \"Annual mean temperature\",                      ylab = \"Precipitation of Warmest Quarter\",                      scalecolor = 'viridis',                      pointsize = 2) #for single species ggenvironmentalspace(qcdata = multspp_qc_label,                      xvar = 'bio1',                      yvar = \"bio18\",                      xlab = \"Annual mean temperature\",                      ylab = \"Precipitation of Warmest Quarter\",                      scalecolor = 'viridis',                      pointsize = 2)"},{"path":"https://anthonybasooma.github.io/specleanr/articles/Plants.html","id":"visualising-records-in-environmental-space-in-3d","dir":"Articles","previous_headings":"","what":"Visualising records in environmental space in 3d","title":"Detecting environmental outliers in species distribution models for plants.","text":"","code":"#for single species ggenvironmentalspace(qcdata = fagus_qc_label,                      xvar = 'bio1',                      yvar = \"bio18\",                      zvar = 'bio6',                      type = \"3d\",                      labelvar = \"label\",                      xlab = \"Annual mean temperature\",                      ylab = \"Precipitation of Warmest Quarter\",                      zlab = \"Min Temperature of Coldest Month\",                      scalecolor = 'viridis',                      lpos3d = \"right\",                      pointsize = 2)"},{"path":"https://anthonybasooma.github.io/specleanr/articles/Plants.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Detecting environmental outliers in species distribution models for plants.","text":"Amatulli, Giuseppe, et al. “Hydrography90m: new high-resolution global hydrographic dataset.” Earth System Science Data 14.10 (2022): 4525-4550. Harvey-Brown, Y., Barstow, M., Mark, J. & Rivers, M.C. 2017. Populus nigra. IUCN Red List Threatened Species 2017: e.T63530A68106816. https://dx.doi.org/10.2305/IUCN.UK.2017-3.RLTS.T63530A68106816.en. Accessed 24 June 2024. de Rigo, D., Enescu, C.M., Houston Durrant, T. Caudullo, G. 2016. Populus nigra Europe: distribution, habitat, usage threats. European Atlas Forest Tree Species, Publications Office European Union, Luxembourg. Barstow, M. & Beech, E. 2018. Fagus sylvatica. IUCN Red List Threatened Species 2018: e.T62004722A62004725. https://dx.doi.org/10.2305/IUCN.UK.2018-1.RLTS.T62004722A62004725.en. Accessed 24 June 2024.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/articles/eOutlier.html","id":"environmental-outlier-check-for-fish-species-from-the-danube-river-basin","dir":"Articles","previous_headings":"","what":"Environmental outlier check for fish species from the Danube River Basin","title":"Environmental outlier detection with bootstrapping and principal component analysis.","text":"workflow environmental outlier detection removal similar across taxa, regions, ecological realms. However, included check_names() function cater fish species names exhaustively. worked example, tried functionalities fish species Danube River Basin, extracts species records Joint Danube Survey (JDS) EFI+ data archived package. complimented data fish species occurrences online sources including Global Biodiversity Information Facility (GBIF), iNaturalist, VertNET using getdata() function. basically five steps, including: 1) Data acquisition harmonization; 2) Precleaning predictor extraction 3) outlier detection 4) identification clean data suitable method 5) developing species distribution models (optional).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/articles/eOutlier.html","id":"scope-of-application","dir":"Articles","previous_headings":"Environmental outlier check for fish species from the Danube River Basin","what":"Scope of application","title":"Environmental outlier detection with bootstrapping and principal component analysis.","text":"workflow, provide three approaches can used handle outlier detection, namely 1) default approach (bootstrapping principal component analysis applied); 2) bootstrapping applied outlier detection mostly fewer records (user based set records) 3) combining principal component analysis bootstrapping. approach significantly affect records flagged outliers, upon user select approach use. However, advise users apply bootstrapping PCA particular suspicious records still handled first approach.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/articles/eOutlier.html","id":"data-acquisition-a-collate-species-species-records-offline-and-online-data","dir":"Articles","previous_headings":"Environmental outlier check for fish species from the Danube River Basin","what":"1.Data acquisition: a) Collate species species records: offline and online data","title":"Environmental outlier detection with bootstrapping and principal component analysis.","text":"species records obtained archived datasets extracted Joint Danube Survey (https://www.danubesurvey.org/jds4/) EFIPLUS (Logez et al., 2012). compliment species records, used getdata() function retrieve data GBIF (https://www.gbif.org/), VertNet (http://www.vertnet.org/) iNaturalist ( https://www.inaturalist.org/) Squalius cephalus, Salmo trutta, Thymallus thymallus, Anguilla anguilla. online data, limited data 50 records data source reduce execution time. NOTE workflow may fail particular settings blocking IP address GIBF, iNaturalist, FishBase, VertNet may prevent user accessing online data. Since, may differ user--user basis, beyond scope package address limitations.","code":"#========================== #Step 1ai. Obtain Local data sources (archived in this package) #=========================  data(efidata) #Data extract from EFIPLUS data  data(jdsdata) #Data extract from JDS4 data   #=================================== #Step 1aii: Retrieve online data for the species: polygon to limit the extent to get records. #===================================== danube <- sf::st_read(system.file('extdata', \"danube.shp.zip\",                                   package = 'specleanr'), quiet=TRUE)   df_online <- getdata(data = c(\"Squalius cephalus\", 'Salmo trutta',                                \"Thymallus thymallus\",\"Anguilla anguilla\"),                                  extent = danube,                                 gbiflim = 50,                                  inatlim = 50,                                  vertlim = 50,                       verbose = F)  dim(df_online) #> [1] 567   8"},{"path":"https://anthonybasooma.github.io/specleanr/articles/eOutlier.html","id":"merging-and-harmonizing-species-records-from-different-sources","dir":"Articles","previous_headings":"Environmental outlier check for fish species from the Danube River Basin > 1.Data acquisition: a) Collate species species records: offline and online data","what":"Merging and harmonizing species records from different sources","title":"Environmental outlier detection with bootstrapping and principal component analysis.","text":"online data sources getdata() local files merged using match_datasets() function. Five columns harmonized combining data different sources: country, species names, latitude/longitude columns, dates. Darwin Core standard names country, species, decimalLatitude, decimalLongitude, dates (Wieczorek et al., 2012). , local dataset different name standard names, user indicate . example, JDS data, species column labeled speciesname, shown species parameter automatic renaming merging datasets. * Note: user indicate dataset names list. * check_names() used clean species names terms synonyms spellings, based FishBase (https://www.fishbase.se/). function generates another column speciescheck contain clean names.","code":"mergealldfs <- match_datasets(datasets = list(efi= efidata, jds = jdsdata,                                          onlinedata = df_online),                 country = c('JDS4_sampling_ID'),                 lats = 'lat', lons = 'lon',                 species = c('speciesname', 'scientificName'))  #Species names are re-cleaned since the species names from vertnet are changed.  cleannames_df <- check_names(data = mergealldfs, colsp = 'species', pct = 90,                               merge = TRUE, verbose = TRUE) #> The synoynm Salmo trutta fario will be replaced with Salmo trutta. #> The synoynm Salmo trutta lacustris will be replaced with Salmo trutta. #> The synoynm Aspius aspius will be replaced with Leuciscus aspius. #> The synoynm Leuciscus cephalus will be replaced with Squalius cephalus. #> Salmo trutta morpha lacustris will be replaced with Salmo trutta #> Salmo trutta x salvelinus fontinalis will be replaced with Salmo trutta  #Filter out species from clean names df where the species names such as synonyms like Salmo trutta fario chnaged to Slamo trutta  speciesfiltered <- cleannames_df[cleannames_df$speciescheck %in%                                    c(\"Squalius cephalus\", 'Salmo trutta',                                       \"Thymallus thymallus\",\"Anguilla anguilla\"),]"},{"path":"https://anthonybasooma.github.io/specleanr/articles/eOutlier.html","id":"data-acquisition-b-environmental-predictors-from-worldclim","dir":"Articles","previous_headings":"Environmental outlier check for fish species from the Danube River Basin","what":"1. Data acquisition: b) Environmental predictors from worldclim","title":"Environmental outlier detection with bootstrapping and principal component analysis.","text":"used WORLDCLIM data archived package enable users test package functions seamlessly. direct interaction WORDCLIM data, please visit (https://www.worldclim.org/) geodata package download user-customized workflows. WORLDCLIM data 19 bioclimatic variables (https://www.worldclim.org/data/bioclim.html), including; BIO1 = Annual Mean Temperature BIO2 = Mean Diurnal Range (Mean monthly (max temp - min temp)) BIO3 = Isothermality (BIO2/BIO7) (×100) BIO4 = Temperature Seasonality (standard deviation ×100) BIO5 = Max Temperature Warmest Month BIO6 = Min Temperature Coldest Month BIO7 = Temperature Annual Range (BIO5-BIO6) BIO8 = Mean Temperature Wettest Quarter BIO9 = Mean Temperature Driest Quarter BIO10 = Mean Temperature Warmest Quarter BIO11 = Mean Temperature Coldest Quarter BIO12 = Annual Precipitation BIO13 = Precipitation Wettest Month BIO14 = Precipitation Driest Month BIO15 = Precipitation Seasonality (Coefficient Variation) BIO16 = Precipitation Wettest Quarter BIO17 = Precipitation Driest Quarter BIO18 = Precipitation Warmest Quarter BIO19 = Precipitation Coldest Quarter","code":"#Get climatic variables from the package folder  worldclim <- terra::rast(system.file('extdata/worldclim.tiff', package = 'specleanr'))"},{"path":"https://anthonybasooma.github.io/specleanr/articles/eOutlier.html","id":"precleaning-and-environmental-data-extraction","dir":"Articles","previous_headings":"Environmental outlier check for fish species from the Danube River Basin","what":"2. Precleaning and environmental data extraction","title":"Environmental outlier detection with bootstrapping and principal component analysis.","text":", duplicate records removed points obtained location species. missing values coordinates removed. environmental predictors extracted raster layers (WORLDCLIM). user can set minimum point species retianed analyis. bounding box can set limit extent data extraction. case, used basin layer Danube Basin obtained Hydrography90m (https://hydrography.org/hydrography90m/hydrography90m_layers). user can either return dataframe list cleaned data. Important next steps.","code":"#Get basin shapefile to delineate the study region: optional  danube <- sf::st_read(system.file('extdata', 'danube.shp.zip',                                    package = 'specleanr'), quiet=TRUE)  #For multiple species indicate multiple TRUE multipreclened <-  pred_extract(data= speciesfiltered,                               raster= worldclim,                               lat = 'decimalLatitude',                              lon = 'decimalLongitude',                              colsp = 'speciescheck',                              bbox  = danube,                                list= TRUE,                               minpts = 10, merge = FALSE) names(multipreclened) #> [1] \"Salmo trutta\"        \"Anguilla anguilla\"   \"Squalius cephalus\"   #> [4] \"Thymallus thymallus\"   thymallusdata <- speciesfiltered[speciesfiltered[,'speciescheck'] %in%c(\"Thymallus thymallus\"),]  dim(thymallusdata) #> [1] 135   7  thymallus_referencedata <-  pred_extract(data= thymallusdata, raster= worldclim,                               lat = 'decimalLatitude',                              lon = 'decimalLongitude',                              colsp = 'speciescheck',                              bbox  = danube,                              list= TRUE,                               minpts = 10) dim(thymallus_referencedata) #> [1] 98 21"},{"path":"https://anthonybasooma.github.io/specleanr/articles/eOutlier.html","id":"outlier-detection-for-both-single-and-multiple-species-no-pca-or-bootstrapping","dir":"Articles","previous_headings":"Environmental outlier check for fish species from the Danube River Basin","what":"3. Outlier detection for both single and multiple species (No PCA or bootstrapping)","title":"Environmental outlier detection with bootstrapping and principal component analysis.","text":"Multiple outlier detection set. package contains 20 outlier detection methods user can run extractMethods() get allowed methods. categorized univariate, multivariate species ecological ranges. * var predictor used univariate methods. * exclude allows remove predictors user deems unnecessary. example, coordinates, since multivariate methods consider whole dataset.","code":"#For multiple species: default settings  multiple_spp_out_detection <- multidetect(data = multipreclened,                       multiple = TRUE,                       var = 'bio6',                      exclude = c('x','y'),                       methods = c('zscore', 'adjbox',                                                 'logboxplot', 'distboxplot',                                                 'iqr', 'semiqr',                                                 'hampel','kmeans',                                                 'jknife', 'onesvm',                                                 'iforest')) #single species:default settings  thymallus_outlier_detection <- multidetect(data = thymallus_referencedata,                       multiple = FALSE,                       var = 'bio6',                       output = 'outlier',                       exclude = c('x','y'),                       methods = c('zscore', 'adjbox',                                   'logboxplot', 'distboxplot',                                   'iqr', 'semiqr',                                   'hampel','kmeans',                                   'jknife', 'onesvm',                                   'iforest'))"},{"path":"https://anthonybasooma.github.io/specleanr/articles/eOutlier.html","id":"outlier-visualization-for-single-and-multiple-species","dir":"Articles","previous_headings":"Environmental outlier check for fish species from the Danube River Basin","what":"4. Outlier visualization for single and multiple species","title":"Environmental outlier detection with bootstrapping and principal component analysis.","text":"ggoutliers based ggplot2, can modified based user needs. x: output outlier detection, y species name index multiple species, raw = TRUE number outliers displayed, otherwise proportion outliers total number records plotted.   Identify best threshold using loess model. local regression used optimize identify best threshold denoting point absolute outlier. fit local region model data retained every threshold, identify maxima number records retain number records retained significantly vary increased increase threshold.","code":"#for multiple species ggoutliers(multiple_spp_out_detection) #for single species ggoutliers(thymallus_outlier_detection) thymallus_opt_threshold <- optimal_threshold(refdata = thymallus_referencedata,                                 outliers = thymallus_outlier_detection, plot = TRUE) #obtain the optimal thresholds for multiple species   multspp_opt_threshold <- optimal_threshold(refdata = multipreclened,                                             outliers = multiple_spp_out_detection)"},{"path":"https://anthonybasooma.github.io/specleanr/articles/eOutlier.html","id":"extracting-clean-data-from-the-reference-data-precleaned-data-in-step-2-","dir":"Articles","previous_headings":"Environmental outlier check for fish species from the Danube River Basin","what":"5. Extracting clean data from the reference data (precleaned data in step 2).","title":"Environmental outlier detection with bootstrapping and principal component analysis.","text":"user sets threshold ranging 0.1 1 advisable set value 0.5 include 50% methods. threshold value indicating proportion methods used classify record true outlier. example, threshold 0.6 means least 4 6 methods noted outlier detection step 3. used loess method identifying optimal threshold.","code":"multspecies_clean <- extract_clean_data(refdata = multipreclened,                                          outliers = multiple_spp_out_detection,                                          loess =  TRUE) head(multspecies_clean) #>       bio1     bio2     bio3     bio4     bio5     bio6     bio7      bio8 #> 1 6.293614 8.755938 31.96181 690.1050 20.90625 -6.48875 27.39500  7.375333 #> 2 4.356198 8.618521 32.93503 664.5812 18.24000 -7.92825 26.16825 12.529167 #> 3 8.093719 8.563396 32.36844 682.8456 22.54375 -3.91225 26.45600 16.554874 #> 4 8.254479 8.690208 31.93257 704.5684 22.73200 -4.48225 27.21425 16.848583 #> 5 4.920063 8.054250 33.13006 620.0639 17.83550 -6.47550 24.31100 12.537000 #> 6 4.356198 8.618521 32.93503 664.5812 18.24000 -7.92825 26.16825 12.529167 #>        bio9    bio10      bio11 bio12 bio13 bio14    bio15 bio16 bio17 bio18 #> 1 -1.175625 14.80313 -2.0642917  2118   241   105 21.73814   663   379   530 #> 2 -3.631167 12.52917 -3.6311667  1287   170    67 30.58820   463   219   463 #> 3  1.011292 16.55487 -0.2026250   902   111    48 29.86472   322   151   322 #> 4  0.923625 16.84858 -0.4467084  1103   141    62 30.58010   407   204   407 #> 5 -1.738292 12.53700 -2.4977083  1409   188    76 31.33461   524   257   524 #> 6 -3.631167 12.52917 -3.6311667  1287   170    67 30.58820   463   219   463 #>   bio19        x        y       groups #> 1   412 13.91667 46.25000 Salmo trutta #> 2   219 15.08333 47.58333 Salmo trutta #> 3   159 10.91667 48.25000 Salmo trutta #> 4   204 13.08333 48.08333 Salmo trutta #> 5   261 12.91667 47.58333 Salmo trutta #> 6   219 15.08333 47.58333 Salmo trutta  thymallus_qcdata <- extract_clean_data(refdata = thymallus_referencedata,                               outliers = thymallus_outlier_detection,                               loess = TRUE)   multiple_spp_qcdata <- classify_data(refdata = multipreclened,                                  outliers = multiple_spp_out_detection,                                  EIF = TRUE) head(multiple_spp_qcdata) #>       bio1     bio2     bio3     bio4     bio5     bio6     bio7     bio8 #> 3 8.093719 8.563396 32.36844 682.8456 22.54375 -3.91225 26.45600 16.55487 #> 4 8.254479 8.690208 31.93257 704.5684 22.73200 -4.48225 27.21425 16.84858 #> 5 4.920063 8.054250 33.13006 620.0639 17.83550 -6.47550 24.31100 12.53700 #> 7 6.770688 8.237541 32.67342 653.4917 20.17375 -5.03800 25.21175 14.79887 #> 8 8.149062 8.922417 32.77950 698.9550 22.49275 -4.72675 27.21950 16.66454 #> 9 5.519271 8.059958 32.46808 637.3926 18.68325 -6.14100 24.82425 13.31675 #>         bio9    bio10      bio11 bio12 bio13 bio14    bio15 bio16 bio17 bio18 #> 3  1.0112917 16.55487 -0.2026250   902   111    48 29.86472   322   151   322 #> 4  0.9236250 16.84858 -0.4467084  1103   141    62 30.58010   407   204   407 #> 5 -1.7382917 12.53700 -2.4977083  1409   188    76 31.33461   524   257   524 #> 7 -0.1399583 14.79887 -1.1001667  1425   191    78 30.79005   528   268   528 #> 8  0.8570418 16.66454 -0.4938749  1223   159    66 32.25150   460   222   460 #> 9 -1.2837082 13.31675 -2.1408334  1303   177    70 33.05493   494   233   494 #>   bio19        x        y       label       groups         EIF #> 3   159 10.91667 48.25000 not outlier Salmo trutta  1.17788810 #> 4   204 13.08333 48.08333 not outlier Salmo trutta  0.60038793 #> 5   261 12.91667 47.58333 not outlier Salmo trutta -1.41908893 #> 7   274 13.41667 47.75000 not outlier Salmo trutta  0.03732554 #> 8   222 13.08333 47.91667 not outlier Salmo trutta  0.35267115 #> 9   236 12.58333 47.58333 not outlier Salmo trutta -1.08018730   thymallus_qc_labelled <- classify_data(refdata = thymallus_referencedata,                                outliers = thymallus_outlier_detection,                                EIF = TRUE) head(thymallus_qc_labelled) #>       bio1     bio2     bio3     bio4     bio5     bio6     bio7     bio8 #> 1 8.130990 9.155687 33.54192 693.5986 22.50525 -4.79100 27.29625 16.58138 #> 2 7.596385 8.438188 30.85853 724.7678 22.51675 -4.82800 27.34475 16.40075 #> 4 7.765240 8.342354 31.78373 687.5156 21.74550 -4.50175 26.24725 16.19358 #> 5 8.390240 8.568895 31.32536 722.0088 23.12525 -4.22925 27.35450 17.21496 #> 6 8.532615 9.764146 33.03609 746.0073 23.86175 -5.69425 29.55600 17.59192 #> 7 5.290083 8.268625 33.26678 635.7107 18.46425 -6.39125 24.85550 13.10142 #>         bio9    bio10      bio11 bio12 bio13 bio14    bio15 bio16 bio17 bio18 #> 1  0.9313333 16.58138 -0.4191251  1307   174    69 33.66177   499   233   499 #> 2 -0.1437499 16.40075 -1.3752500   575    89    24 47.36458   244    76   244 #> 4  0.6048333 16.19358 -0.6059167  1364   175    79 25.91408   479   270   479 #> 5  0.9156250 17.21496 -0.4847917  1142   143    68 23.92640   391   228   391 #> 6 -0.7618751 17.59192 -0.7618751   908   129    29 44.80352   372   110   372 #> 7 -1.4955000 13.10142 -2.3458333  1440   193    76 31.47408   536   261   536 #>   bio19        x        y       label         EIF #> 1   234 13.08333 47.75000 not outlier  0.83487640 #> 2    80 16.91667 49.91667 not outlier  0.79749478 #> 4   274 13.58333 47.91667 not outlier  1.12710826 #> 5   230 13.75000 48.08333 not outlier  1.40241758 #> 6   110 15.25000 47.08333 not outlier -0.07768567 #> 7   266 13.25000 47.58333 not outlier -0.78187126"},{"path":"https://anthonybasooma.github.io/specleanr/articles/eOutlier.html","id":"visualize-labeled-data-in-environmental-space-","dir":"Articles","previous_headings":"Environmental outlier check for fish species from the Danube River Basin","what":"6. Visualize labeled data in environmental space.","title":"Environmental outlier detection with bootstrapping and principal component analysis.","text":"","code":"#multiple species  ggenvironmentalspace(qcdata = multiple_spp_qcdata,                       xvar = 'bio1',                       yvar = \"bio18\",                       xlab = \"Annual mean temperature\",                      ylab = \"Precipitation of Warmest Quarter\",                      scalecolor = 'viridis',                      ncol = 2,                       nrow = 2,                      pointsize = 2) #for single species ggenvironmentalspace(qcdata = thymallus_qc_labelled,                      xvar = 'bio1',                      yvar = \"bio18\",                      xlab = \"Annual mean temperature\",                      ylab = \"Precipitation of Warmest Quarter\",                      scalecolor = 'viridis',                      pointsize = 2)"},{"path":"https://anthonybasooma.github.io/specleanr/articles/eOutlier.html","id":"using-bootstrapping-during-outlier-detection","dir":"Articles","previous_headings":"Environmental outlier check for fish species from the Danube River Basin","what":"Using bootstrapping during outlier detection","title":"Environmental outlier detection with bootstrapping and principal component analysis.","text":"Bootstrapping robust approach records randomly sampled replacement. approach, outlier detection iteratively conducted bootstrap samples record flagged outlier weighted based total number bootstraps used. higher record flagged several across multiple tests, higher likelihood record absolute outlier. Although default number records bootstrapping 30, maximum number records can adjusted user demonstrated . Note Bootstrapping implemented defualt, user set run outlier detection. number records maxrecords reference dataset Thymallus thymallus 99. Therefore, implement bootstrapping, indicate maximum number records higher nrows reference dataset otherwise bootstrap implemented. number bootstraps, nb user-defined. Bootstrapping conducted Thymallus thymallus data proper separation moderate strong outliers.","code":"thymallus_outlier_boot <- multidetect(data = thymallus_referencedata,                       multiple = FALSE,                       var = 'bio6',                       exclude = c('x','y'),                       methods = c('zscore', 'adjbox',                                   'logboxplot', 'distboxplot',                                   'iqr', 'semiqr',                                   'hampel','kmeans',                                   'jknife', 'onesvm',                                   'iforest'),                       bootSettings = list(run = TRUE, maxrecords = 100, nb = 10))"},{"path":"https://anthonybasooma.github.io/specleanr/articles/eOutlier.html","id":"visulise-outliers-after-bootstrapping","dir":"Articles","previous_headings":"Environmental outlier check for fish species from the Danube River Basin","what":"Visulise outliers after bootstrapping","title":"Environmental outlier detection with bootstrapping and principal component analysis.","text":"","code":"ggoutliers(thymallus_outlier_boot)"},{"path":"https://anthonybasooma.github.io/specleanr/articles/eOutlier.html","id":"classify-data-to-obtain-labels","dir":"Articles","previous_headings":"Environmental outlier check for fish species from the Danube River Basin","what":"Classify data to obtain labels","title":"Environmental outlier detection with bootstrapping and principal component analysis.","text":"","code":"thymallus_qc_label_boot <- classify_data(refdata = thymallus_referencedata,                                  outliers = thymallus_outlier_boot)"},{"path":"https://anthonybasooma.github.io/specleanr/articles/eOutlier.html","id":"visualise-after-bootstrapping","dir":"Articles","previous_headings":"Environmental outlier check for fish species from the Danube River Basin","what":"Visualise after bootstrapping","title":"Environmental outlier detection with bootstrapping and principal component analysis.","text":"Note bootstrapping applied, strong outlier turned moderate outlier.","code":"ggenvironmentalspace(qcdata = thymallus_qc_label_boot,                       xvar = 'bio1',                       yvar = \"bio18\",                      xlab = \"Annual mean temperature\",                      ylab = \"Precipitation of Warmest Quarter\",                      scalecolor = 'viridis',                      pointsize = 2)"},{"path":"https://anthonybasooma.github.io/specleanr/articles/eOutlier.html","id":"apply-principal-component-analysis-and-bootstrapping-on-thymallus-thymallus-data-","dir":"Articles","previous_headings":"Environmental outlier check for fish species from the Danube River Basin","what":"Apply principal component analysis and bootstrapping on Thymallus thymallus data.","title":"Environmental outlier detection with bootstrapping and principal component analysis.","text":"Principal component analyis dimension reduction approach vital highly multidimensional datasets. user can decide apply either PCA bootstrapping one . number principal components returned changed using npc argument. visualise cummulation variance captured principal components, argument q used.","code":"thymallus_outlier_boot_pca <- multidetect(data = thymallus_referencedata,                       multiple = FALSE,                       var = 'bio6',                       exclude = c('x','y'),                       methods = c('zscore', 'adjbox',                                   'logboxplot', 'distboxplot',                                   'iqr', 'semiqr',                                   'hampel','kmeans',                                   'jknife', 'onesvm',                                   'iforest'),                       bootSettings = list(run = TRUE, maxrecords = 100, nb = 10),                       pc = list(exec = TRUE, npc = 6, q = FALSE)) #> The cummulative proprotion for PCs 6 is 0.99205"},{"path":"https://anthonybasooma.github.io/specleanr/articles/eOutlier.html","id":"visulise-outliers-after-bootstrapping-and-bootstrapping","dir":"Articles","previous_headings":"Environmental outlier check for fish species from the Danube River Basin","what":"Visulise outliers after bootstrapping and bootstrapping","title":"Environmental outlier detection with bootstrapping and principal component analysis.","text":"","code":"ggoutliers(thymallus_outlier_boot_pca)"},{"path":"https://anthonybasooma.github.io/specleanr/articles/eOutlier.html","id":"classify-data-to-obtain-labels-1","dir":"Articles","previous_headings":"Environmental outlier check for fish species from the Danube River Basin","what":"Classify data to obtain labels","title":"Environmental outlier detection with bootstrapping and principal component analysis.","text":"","code":"thymallus_qc_label_boot_pca <- classify_data(refdata = thymallus_referencedata,                                  outliers = thymallus_outlier_boot_pca)"},{"path":"https://anthonybasooma.github.io/specleanr/articles/eOutlier.html","id":"visualise-after-bootstrapping-1","dir":"Articles","previous_headings":"Environmental outlier check for fish species from the Danube River Basin","what":"Visualise after bootstrapping","title":"Environmental outlier detection with bootstrapping and principal component analysis.","text":"Notes Coupling PCA bootstrapping robust approaches handle outlier detection. example, moderate outlier turned poor outliers. References Wieczorek, J., Bloom, D., Guralnick, R., Blum, S., Döring, M., Giovanni, R., Robertson, T., & Vieglais, D. (2012). Darwin core: evolving community-developed biodiversity data standard. PLoS ONE, 7(1). https://doi.org/10.1371/journal.pone.0029715","code":"ggenvironmentalspace(qcdata = thymallus_qc_label_boot_pca,                       xvar = 'bio1',                       yvar = \"bio18\",                      xlab = \"Annual mean temperature\",                      ylab = \"Precipitation of Warmest Quarter\",                      scalecolor = 'viridis',                      pointsize = 2)"},{"path":"https://anthonybasooma.github.io/specleanr/articles/generaloutlier.html","id":"introduction-to-general-data-outlier-detection","dir":"Articles","previous_headings":"","what":"Introduction to general data outlier detection","title":"General outlier detection for univariate datasets","text":"presence outliers general concern even data specifically species distribution modelling. Also, approach adhoc selection outlier detection method considered detect remove outliers data, increased subjectivity. Therefore, extend specleanr principle ensembling multiple outlier detection methods identify absolute outliers datasets can later removed. process followed data extraction evaluating model performance required. detailed workflow objectively detecting removing outlier iris dataset incorporated dataset package R programming Language","code":"irisdata1 <- iris  #introduce outlier data and NAs  rowsOutNA1 <- data.frame(x= c(344, NA,NA, NA),                          x2 = c(34, 45, 544, NA),                           x3= c(584, 5, 554, NA),                          x4 = c(575, 4554,474, NA),                           x5 =c('setosa', 'setosa', 'setosa', \"setosa\"))  colnames(rowsOutNA1) <- colnames(irisdata1)   dfinal <- rbind(irisdata1, rowsOutNA1)"},{"path":"https://anthonybasooma.github.io/specleanr/articles/generaloutlier.html","id":"detecting-outlier-in-changed-iris-dataset","dir":"Articles","previous_headings":"","what":"Detecting outlier in changed iris dataset*","title":"General outlier detection for univariate datasets","text":"can use univariate methods detect variable Sepal.Length can exclude species column also use multivariate methods isolation forest, Mahalanobis outlier detection method One class support vector machines. identify methods allowed package, run **extractMethod()** NOTE * considering univariate analysis, parameter sdm set FALSE. Also, multivariate outlier detection methods necessary univariate datasets. function extractMethods() can used identify different methods allowed. Indicate na.inform show NAs handled dataset. percentage NAs column greater missingness parameter, particular column removed. Otherwise, rows NAs removed using na.omit avoid failing outlier detection methods. summary, increasing missingness may lead loss many rows especially column missing values. Filter setosa data outlier detection","code":"setosadf <- dfinal[dfinal$Species%in%\"setosa\",c(\"Sepal.Width\", 'Species')]  setosa_outlier_detection <- multidetect(data = setosadf,                                  var = 'Sepal.Width',                                  multiple = FALSE,                                 methods = c(\"adjbox\", \"iqr\", \"hampel\",\"jknife\",                                             \"seqfences\", \"mixediqr\",                                             \"distboxplot\", \"semiqr\",                                             \"zscore\", \"logboxplot\", \"medianrule\"),                        silence_true_errors = FALSE,                         missingness = 0.1,                        sdm = FALSE,                        na.inform = TRUE) #> 1 (1.85%) NAs removed for parameter Sepal.Width.  #extractMethods()"},{"path":"https://anthonybasooma.github.io/specleanr/articles/generaloutlier.html","id":"visualiss-the-number-of-outliers-detected-by-each-method","dir":"Articles","previous_headings":"","what":"Visualiss the number of outliers detected by each method","title":"General outlier detection for univariate datasets","text":"","code":"ggoutliers(setosa_outlier_detection)"},{"path":"https://anthonybasooma.github.io/specleanr/articles/generaloutlier.html","id":"obtaining-quality-controlled-dataset-using-loess-method-or-data-labelling","dir":"Articles","previous_headings":"","what":"Obtaining quality controlled dataset using loess method or data labelling","title":"General outlier detection for univariate datasets","text":"","code":"setosa_qc_loess <- extract_clean_data(refdata = setosadf,                                        outliers = setosa_outlier_detection, loess = TRUE)  #clean dataset nrow(setosa_qc_loess) #> [1] 51  #reference data nrow(setosadf) #> [1] 54  setosa_qc_labeled <- classify_data(refdata = setosadf, outliers = setosa_outlier_detection)"},{"path":"https://anthonybasooma.github.io/specleanr/articles/generaloutlier.html","id":"visualise-labelled-quality-controlled-dataset","dir":"Articles","previous_headings":"","what":"Visualise labelled quality controlled dataset","title":"General outlier detection for univariate datasets","text":"","code":"ggenvironmentalspace(setosa_qc_labeled,                       type = '1D',                      ggxangle = 45,                       scalecolor = 'viridis',                      xhjust = 1,                      legend_position = 'blank',                      ylab = \"Number of records\",                      xlab = \"Outlier labels\")"},{"path":"https://anthonybasooma.github.io/specleanr/articles/generaloutlier.html","id":"for-multiple-species","dir":"Articles","previous_headings":"","what":"For multiple species","title":"General outlier detection for univariate datasets","text":"NOTE multiple groups, parameter multiple changed TRUE var_col provided demonstrated .","code":"multspp_outlier_detection <- multidetect(data = dfinal,                                  var = 'Sepal.Width',                                  multiple = TRUE,                                 var_col = \"Species\",                                 methods = c(\"adjbox\", \"iqr\", \"hampel\",\"jknife\",                                             \"seqfences\", \"mixediqr\",                                             \"distboxplot\", \"semiqr\",                                             \"zscore\", \"logboxplot\", \"medianrule\"),                        silence_true_errors = FALSE,                         missingness = 0.1,                        sdm = FALSE,                        na.inform = TRUE) #> 1 (1.85%) NAs removed for parameter Sepal.Width. #> 0 (0%) NAs removed for parameter Sepal.Width. #> 0 (0%) NAs removed for parameter Sepal.Width."},{"path":"https://anthonybasooma.github.io/specleanr/articles/generaloutlier.html","id":"visualise-the-number-of-outliers-detected-by-each-method","dir":"Articles","previous_headings":"","what":"Visualise the number of outliers detected by each method","title":"General outlier detection for univariate datasets","text":"","code":"ggoutliers(multspp_outlier_detection)"},{"path":"https://anthonybasooma.github.io/specleanr/articles/generaloutlier.html","id":"obtaining-quality-controlled-dataset-using-loess-method-or-data-labelling-1","dir":"Articles","previous_headings":"","what":"Obtaining quality controlled dataset using loess method or data labelling","title":"General outlier detection for univariate datasets","text":"","code":"multsp_qc_loess <- extract_clean_data(refdata = dfinal,                                        outliers = multspp_outlier_detection,                                       var_col = 'Species',                                       loess = TRUE)  #clean dataset nrow(multsp_qc_loess) #> [1] 151  #reference data nrow(dfinal) #> [1] 154  multi_qc_labeled <- classify_data(refdata = dfinal,                                        outliers = multspp_outlier_detection,                                   var_col = 'Species')"},{"path":"https://anthonybasooma.github.io/specleanr/articles/generaloutlier.html","id":"visualise-labelled-quality-controlled-dataset-1","dir":"Articles","previous_headings":"","what":"Visualise labelled quality controlled dataset","title":"General outlier detection for univariate datasets","text":"package undergoing peer review publication","code":"ggenvironmentalspace(multi_qc_labeled,                       type = '1D',                      ggxangle = 45,                       scalecolor = 'viridis',                      xhjust = 1,                      legend_position = 'blank',                      ylab = \"Number of records\",                      xlab = \"Outlier labels\")"},{"path":"https://anthonybasooma.github.io/specleanr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anthony Basooma. Author, maintainer.           0","code":""},{"path":"https://anthonybasooma.github.io/specleanr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Basooma (2025). specleanr: Detecting Environmental Outliers Biogeographical Modeling Workflows. R package version 1.0.0, https://anthonybasooma.github.io/specleanr/.","code":"@Manual{,   title = {specleanr: Detecting Environmental Outliers in Biogeographical Modeling Workflows},   author = {Anthony Basooma},   year = {2025},   note = {R package version 1.0.0},   url = {https://anthonybasooma.github.io/specleanr/}, }"},{"path":"https://anthonybasooma.github.io/specleanr/index.html","id":"specleanr-package-for-outlier-detection","dir":"","previous_headings":"","what":"Detecting Environmental Outliers in Biogeographical Modeling Workflows","title":"Detecting Environmental Outliers in Biogeographical Modeling Workflows","text":"specleanr package aims improve reliability acceptability biogeographical models, including species distribution models, ecological niche models, bioclimatic envelope models, detecting outliers environmental predictors. package, collate 20 outlier detection methods, user can collectively apply (ensemble outlier detection) determine whether species records suitable environmental space. package complements packages address geographical, taxonomic, temporal checks.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Detecting Environmental Outliers in Biogeographical Modeling Workflows","text":"","code":"# install.packages(\"remotes\")  #remotes::install_github(\"AnthonyBasooma/specleanr\")"},{"path":"https://anthonybasooma.github.io/specleanr/index.html","id":"process-of-identifying-environmental-outliers","dir":"","previous_headings":"Installation","what":"Process of identifying environmental outliers.","title":"Detecting Environmental Outliers in Biogeographical Modeling Workflows","text":"process identifying environmental outliers generally classified five steps detailed (Figure 1); Figure 1. Workflow processing species occurrence data within specleanr R-package environmental outlier detection, removal, evaluation. Arranging species records environmental data. includes collecting species data either online sources locally stored data. user can check species records geographical, taxonomic, temporal inconsistencies missing coordinates, interchanged coordinates, species name spelling mistakes, wrong event dates. Environmental data, mainly raster format, based chiefly user needs, numerous sources include WORLDCLIM (Fick & Hijmans, 2017) CHELSA (Karger et al., 2017) bioclimatic variables; Hydrography90m stream river-based hydromorphological parameters stream order, flow accumulation, stream power index, stream transportation index (Amatulli et al., 2022); Copernicus land use changes https://www.copernicus.eu/en. Extracting environmental predictors. environmental predictors extracted points species recorded present absent. extracted dataset forms species reference dataset environmental outlier checks. package included pred_extract() extract environmental predictors. Ensemble multiple methods outlier detection. Multiple outlier detection methods used; method flags outliers dataset. outliers compared among methods determine records, flagged several methods called absolute outliers true outliers. total number methods user can ensemble user-based; however, expect user set least three outlier detection methods. methods also least different categories, include 1) univariate methods, 2) multivariate methods, 3) ecological ranges. must set methods using multidetect() function individual method functions allow seamless comparison. Univariate methods methods detect outliers one environmental predictor. strongly advisable user selects environmental predictor directly affects species distribution, example, minimum temperature coldest month (IUCN 2012; Logez et al., 2012). Multivariate methods methods detect outliers multiple environmental predictors (multidimensional space). User exclude unnecessary columns coordinates included computation. Ecological ranges user collates species optimal ecological ranges identify species records outside known optimal ranges. package, single species, optimal ranges (minimum, maximum, mean values) provided manually, user required set environmental predictor used flagging outliers. dataset minimum maximum values (optimal ranges) allowed multiple species. Note taxa fish, included thermal_ranges() geo_ranges() functions, user can set flag records exceeding FishBase collated temperature latitudinal/longitudinal ranges. user word optimal must used multidetect() function seamless comparisons methods. Extract species environmental without outliers Threshold identification outlier removal, threshold classify record absolute outlier necessitates user objectively pivotal workflow. Therefore, developed three options obtaining threshold. threshold proportion methods flagged record outlier total number techniques used. example, user includes ten methods sets threshold 0.7, implies absolute outlier flagged least seven methods. package, developed three ways identify optimal threshold. Naive method: user sets value 0.1 1. process subjective, using method, advisable use threshold beyond 0.6 highlight records flagged least 50% methods. loess method: apply local regression (locally estimated/weighted scatterplot smoothing) identify optimal threshold, non-parametric smoothing method uses local variability data (Cleveland & Loader, 1996; Loader, 2004). reference dataset Step 2 lists outliers flagged method Step 3 used retain clean dataset. hood, two approaches implemented 1) absolute method: absolute outliers removed particular threshold 2) suitable best outlier detection method method highest proportion absolute outliers highest similarity methods (terms outliers flagged) can used. extract_clean_data() extract clean data using reference data outliers single species. Post-environmental outlier removal environmental outlier removal, user can examine improvement model performance environmental outlier removal. following function can used. Package website access details package, please check website specleanr","code":""},{"path":"https://anthonybasooma.github.io/specleanr/index.html","id":"package-citation","dir":"","previous_headings":"Installation","what":"Package citation","title":"Detecting Environmental Outliers in Biogeographical Modeling Workflows","text":"review","code":""},{"path":"https://anthonybasooma.github.io/specleanr/index.html","id":"references","dir":"","previous_headings":"Installation","what":"References","title":"Detecting Environmental Outliers in Biogeographical Modeling Workflows","text":"Amatulli, G., Garcia Marquez, J., Sethi, T., Kiesel, J., Grigoropoulou, ., Üblacker, M. M., Shen, L. Q., & Domisch, S. (2022). Hydrography90m: new high-resolution global hydrographic dataset. Earth System Science Data, 14(10), 4525–4550. https://doi.org/10.5194/essd-14-4525-2022 Cleveland, W. S., & Loader, C. (1996). Smoothing local regression: Principles methods. Statistical Theory Computational Aspects Smoothing: Proceedings COMPSTAT’94 Satellite Meeting Held Semmering, Austria, 27-28, 10–49. Fick, S. E., & Hijmans, R. J. (2017). WorldClim 2: new 1-km spatial resolution climate surfaces global land areas. International Journal Climatology, 37(12), 4302–4315. https://doi.org/10.1002/joc.5086 Karger, D. N., Conrad, O., Böhner, J., Kawohl, T., Kreft, H., Soria-Auza, R. W., Zimmermann, N. E., Linder, H. P., & Kessler, M. (2017). Climatologies high resolution earth’s land surface areas. Scientific Data, 4. https://doi.org/10.1038/sdata.2017.122 Loader, C. (2004). Smoothing: local regression techniques. Handbook Computational Statistics: Concepts Methods, Art. 12. Logez, M., Belliard, J., Melcher, ., Kremser, H., Pletterbauer, F., Schmutz, S., Gorges, G., Delaigue, O., & Pont, D. (2012). Deliverable D5.1-3: BQEs sensitivity global/climate change European rivers: implications reference conditions pressure-impact-recovery chains. IUCN Standards Petitions Committee. (2022). IUCN RED LIST THREATENED SPECIESTM Guidelines Using IUCN Red List Categories Criteria Prepared Standards Petitions Committee IUCN Species Survival Commission. https://www.iucnredlist.org/documents/RedListGuidelines.pdf.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/abdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Alburnoides bipunctatus species data from GBIF and iNaturalist — abdata","title":"Alburnoides bipunctatus species data from GBIF and iNaturalist — abdata","text":"tibble Data GBIF (https://www.gbif.org/) iNaturalist (https://www.inaturalist.org/)","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/abdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alburnoides bipunctatus species data from GBIF and iNaturalist — abdata","text":"","code":"data(abdata)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/abdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alburnoides bipunctatus species data from GBIF and iNaturalist — abdata","text":"tibble 2130 rows 3 columns.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/abdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alburnoides bipunctatus species data from GBIF and iNaturalist — abdata","text":"species data collated Global Biodiversity Information Facility iNaturalist","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/abdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alburnoides bipunctatus species data from GBIF and iNaturalist — abdata","text":"","code":"if (FALSE) { # \\dontrun{  data(\"abdata\") abdata } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/adjustboxplots.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust the boxplots bounding fences using medcouple to flag suspicious outliers. — adjustboxplots","title":"Adjust the boxplots bounding fences using medcouple to flag suspicious outliers. — adjustboxplots","text":"Adjust boxplots bounding fences using medcouple flag suspicious outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/adjustboxplots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust the boxplots bounding fences using medcouple to flag suspicious outliers. — adjustboxplots","text":"","code":"adjustboxplots(   data,   var,   output = \"outlier\",   a = -4,   b = 3,   coef = 1.5,   pc = FALSE,   pcvar = NULL,   boot = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/adjustboxplots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust the boxplots bounding fences using medcouple to flag suspicious outliers. — adjustboxplots","text":"data dataframe. Dataframe check outliers. var string. Environmental predictor considered flagging suspicious outliers. output string Either clean: dataframe suspicious outliers outlier: return dataframe outliers. numeric. Constant adjusted boxplots. b numeric. Constant adjusted boxplots. coef numeric. Constant adjusted boxplots. pc Whether principal component analysis computed. Default FALSE pcvar Principal component analysis e used outlier detection PCA. Default PC1 boot Whether bootstrapping computed. Default FALSE","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/adjustboxplots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust the boxplots bounding fences using medcouple to flag suspicious outliers. — adjustboxplots","text":"dataframe. Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/adjustboxplots.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Adjust the boxplots bounding fences using medcouple to flag suspicious outliers. — adjustboxplots","text":"Hubert M, Vandervieren E. 2008. adjusted boxplot skewed distributions. Computational Statistics Data Analysis 52:5186-5201.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/adjustboxplots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust the boxplots bounding fences using medcouple to flag suspicious outliers. — adjustboxplots","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  danube <- system.file('extdata/danube.shp.zip', package='specleanr')  db <- sf::st_read(danube, quiet=TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd , lat = 'decimalLatitude', lon= 'decimalLongitude',                        colsp = 'speciescheck',                        bbox = db,                        minpts = 10)  adout <- adjustboxplots(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier')  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/bestmethod.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies the best method for outlier detection for a single species. — bestmethod","title":"Identifies the best method for outlier detection for a single species. — bestmethod","text":"Identifies best method outlier detection single species.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/bestmethod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies the best method for outlier detection for a single species. — bestmethod","text":"","code":"bestmethod(   x,   sp = NULL,   threshold = NULL,   autothreshold = FALSE,   warn = FALSE,   verbose = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/bestmethod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies the best method for outlier detection for a single species. — bestmethod","text":"x List dataframes methods used identify outliers multdetect function. sp species name index multiple species considered outlier detection. threshold Maximum value denote absolute outlier. threshold ranges 0 indicates point flagged outlier detection method outlier 1, means record absolute true outlier sicen identified methods. extremes, low threshold values, many records classified, may due individual method weakness strength data distribution. Also, higher threshold values, true outliers retained Fo example, 10 methods considered 9 methods flags record outlier, cut 1 used, particular record retained. Therefore default cutoff 0.6 autothreshold can used select appropriate threshold. autothreshold Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL. warn TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. verbose TRUE messages warnings produced. Default FALSE.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/bestmethod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies the best method for outlier detection for a single species. — bestmethod","text":"best method identifying outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/bestmethod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies the best method for outlier detection for a single species. — bestmethod","text":"","code":"if (FALSE) { # \\dontrun{  data(\"jdsdata\")  matchdata <- match_datasets(datasets = list(jds = jdsdata, efi=efidata),                             lats = 'lat',                             lons = 'lon',                             species = c('speciesname','scientificName'),                             date = c('Date', 'sampling_date'),                             country = c('JDS4_site_ID'))   datacheck <- check_names(matchdata, colsp= 'species', pct = 90, merge =TRUE)   db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet=TRUE)   worldclim <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  rdata <- pred_extract(data = datacheck,                      raster= worldclim ,                      lat = 'decimalLatitude',                     lon= 'decimalLongitude',                     colsp = 'speciescheck',                     bbox = db,                      multiple = TRUE,                     minpts = 10,                     list=TRUE,                     merge=F)   out_df <- multidetect(data = rdata, multiple = TRUE,                      var = 'bio6',                      output = 'outlier',                      exclude = c('x','y'),                      methods = c('zscore', 'adjbox','iqr', 'semiqr','hampel', 'kmeans',                                 'logboxplot', 'lof','iforest', 'mahal', 'seqfences'))  bmout <- bestmethod(x = out_df, sp= 1, threshold = 0.2)#   } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/boots.html","id":null,"dir":"Reference","previous_headings":"","what":"To implement bootstrapping procedures. Sampling with replacement. — boots","title":"To implement bootstrapping procedures. Sampling with replacement. — boots","text":"implement bootstrapping procedures. Sampling replacement.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/boots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To implement bootstrapping procedures. Sampling with replacement. — boots","text":"","code":"boots(data, boots, seed, pca)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/boots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To implement bootstrapping procedures. Sampling with replacement. — boots","text":"data Environmental data boots Number bootstraps seed Random seed ensure reproduciblity pca Whether bootstrapping conducted data principal component analysis.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/broad_classify.html","id":null,"dir":"Reference","previous_headings":"","what":"Outlier detection method broad classification. — broad_classify","title":"Outlier detection method broad classification. — broad_classify","text":"Outlier detection method broad classification.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/broad_classify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outlier detection method broad classification. — broad_classify","text":"","code":"broad_classify(category)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/broad_classify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outlier detection method broad classification. — broad_classify","text":"category different outlier categories including mult, uni ref","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/broad_classify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outlier detection method broad classification. — broad_classify","text":"vector method broad categories","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/broad_classify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Outlier detection method broad classification. — broad_classify","text":"","code":"if (FALSE) { # \\dontrun{  x <- broad_classify(category = \"mult\")  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/check.exclude.html","id":null,"dir":"Reference","previous_headings":"","what":"indicate excluded columns. — check.exclude","title":"indicate excluded columns. — check.exclude","text":"indicate excluded columns.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check.exclude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"indicate excluded columns. — check.exclude","text":"","code":"check.exclude(x, exclude, quiet = TRUE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/check.exclude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"indicate excluded columns. — check.exclude","text":"x dataframe columns columns supposed removed. exclude string vector column names  checked data. quiet TRUE implementation messages shown. Default FALSE.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check.exclude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"indicate excluded columns. — check.exclude","text":"columns dataframe.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Check species names for inconsistencies — check_names","title":"Check species names for inconsistencies — check_names","text":"Check species names inconsistencies","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check species names for inconsistencies — check_names","text":"","code":"check_names(   data,   colsp = NULL,   verbose = FALSE,   pct = 90,   merge = F,   sn = FALSE,   ecosystem = FALSE,   rm_duplicates = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check species names for inconsistencies — check_names","text":"data dataframe. Data frame species names checked FishBase. colsp string. column data species column names. verbose logical. indicate merges checking names. default FALSE show whether species Fish base found. pct numeric. percentage similarity used assign relatively similar name FishBase exact match absent. Default 90 higher values, higher percentage similarity considered replace species name cheeked Fishbase. merge logical. Default FALSE, merge cleaned species column data frame rather two columns returned. sn logical. Whether consider synonyms. Default FALSE accepted names considered FishBase database. ecosystem logical Returns whether species freshwater, marine , brackish combination estuarine loving species. rm_duplicates logical. TRUE, removes duplicate species names especially dataframe output function.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check species names for inconsistencies — check_names","text":"Data frame names corrected cleaned species names.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check species names for inconsistencies — check_names","text":"function produces data set species names corresponding Fishase. synonym provided data set, function defualt return accepted name. However, synoymn desired, set sn parameter TRUE. function also check spellings species names returns name closer one FishBase particular degree similarity set pct parameter. pct 1 indicates name must 100 user can iterate different pct decide return name right wrong. function necessary species names clean also taxa.","code":""},{"path":[]},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check species names for inconsistencies — check_names","text":"","code":"if (FALSE) { # \\dontrun{  data(jdsdata)  data(efidata)  #step 1. match and bind datasets if more than one datasets  matchdata <- match_datasets(datasets = list(jds = jdsdata, efi = efidata),                           lats = 'lat',                           lons = 'lon',                           species = c('speciesname','scientificName'),                           country=c('JDS4_site_ID'),                           date=c('Date', 'sampling_date'))  #clean species names to produce one dataset.  datafull <- check_names(data= matchdata, colsp='species', pct = 90, merge = TRUE)  data2col <- check_names(data = matchdata, colsp='species', pct = 90) #two columns generated  cleansp_name <- check_names(data= 'slamo trutta', pct=90) #wrong names vs FB suggestion  clean_sp_epithet <- check_names(data = 'Salmo trutta fario') #Salmo trutta will be returned  speciesepithet2 <- check_names(data = 'Salmo trutta lacustris', pct=90)  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for packages to install and respond to use — check_packages","title":"Check for packages to install and respond to use — check_packages","text":"Check packages install respond use","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for packages to install and respond to use — check_packages","text":"","code":"check_packages(pkgs)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for packages to install and respond to use — check_packages","text":"pkgs list packages install","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/check_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for packages to install and respond to use — check_packages","text":"error message packages install","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/classify_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract final clean data using either absolute or best method generated outliers. — classify_data","title":"Extract final clean data using either absolute or best method generated outliers. — classify_data","text":"Extract final clean data using either absolute best method generated outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/classify_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract final clean data using either absolute or best method generated outliers. — classify_data","text":"","code":"classify_data(   refdata,   outliers,   var_col = NULL,   threshold = 0.1,   warn = FALSE,   verbose = TRUE,   classify = \"med\",   EIF = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/classify_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract final clean data using either absolute or best method generated outliers. — classify_data","text":"refdata dataframe. reference data species used outlier detection. outliers string. Output outlier detection process. var_col string. parameter used data data frame user must indicate column species names. threshold numeric. Value consider whether outlier absolute outlier . warn logical. FALSE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. verbose logical. Produces messages . Default FALSE. classify string. Categorize data base correlation coefficient manner based Akoglu 2018. information check details section. EIF logical calculate empirical influence function value.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/classify_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract final clean data using either absolute or best method generated outliers. — classify_data","text":"Either list dataframe cleaned records multiple species.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/classify_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract final clean data using either absolute or best method generated outliers. — classify_data","text":"Outlier cluster weights based statistical classification coefficients mostly correlation based Akoglu 2018. classified based three naming standards, namely Dancey & Reidy (Physchology), Quinni piac University (Politics) Chan YH medicine. classifications used function affects data clusters. default Chan YH (medicine).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/classify_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract final clean data using either absolute or best method generated outliers. — classify_data","text":"Akoglu, H. 2018. User’s guide correlation coefficients. - Turk J Emerg Med 18: 91–93.","code":""},{"path":[]},{"path":"https://anthonybasooma.github.io/specleanr/reference/classify_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract final clean data using either absolute or best method generated outliers. — classify_data","text":"","code":"if (FALSE) { # \\dontrun{  data(jdsdata) data(efidata) matchdata <- match_datasets(datasets = list(jds = jdsdata, efi = efidata),                             lats = 'lat',                             lons = 'lon',                             species = c('speciesname','scientificName'),                             country= c('JDS4_site_ID'),                             date=c('sampling_date', 'Date'))  datacheck <- check_names(matchdata, var_col= 'species', pct = 90, merge =TRUE)   db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet=TRUE)   worldclim <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  rdata <- pred_extract(data = datacheck,                       raster= worldclim ,                       lat = 'decimalLatitude',                       lon= 'decimalLongitude',                       var_col = 'speciescheck',                       bbox = db,                       multiple = TRUE,                       minpts = 10,                       list=TRUE,                       merge=F)   out_df <- multidetect(data = rdata, multiple = TRUE,                       var = 'bio6',                       output = 'outlier',                       exclude = c('x','y'),                       methods = c('zscore', 'adjbox','iqr', 'semiqr','hampel'))  #extracting use the absolute method for one species  extractabs <- extract_clean_data_label(refdata = rdata, outliers = out_df) } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/cosine.html","id":null,"dir":"Reference","previous_headings":"","what":"Cosine similarity index based on (Gautam & Kulkarni 2014; Joy & Renumol 2020) — cosine","title":"Cosine similarity index based on (Gautam & Kulkarni 2014; Joy & Renumol 2020) — cosine","text":"Cosine similarity index based (Gautam & Kulkarni 2014; Joy & Renumol 2020)","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/cosine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cosine similarity index based on (Gautam & Kulkarni 2014; Joy & Renumol 2020) — cosine","text":"","code":"cosine(x, sp = NULL, threshold = NULL, warn = FALSE, autothreshold = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/cosine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cosine similarity index based on (Gautam & Kulkarni 2014; Joy & Renumol 2020) — cosine","text":"x datacleaner class methods used identify outliers multidetect function. sp string. Species name index multiple species considered outlier detection. threshold numeric. Maximum value denote absolute outlier. threshold ranges 0, indicates point flagged outlier detection method outlier, 1, means record absolute true outlier since methods identified . extremes, many records classified low threshold values, may due individual method weakness strength data distribution. Also, higher threshold values, true outliers retained. example, ten methods considered 9 methods flag record outlier, cutoff 1 used, particular record retained. Therefore, default cutoff 0.6, autothreshold can used select appropriate threshold. warn logical. TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. autothreshold vector. Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/cosine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cosine similarity index based on (Gautam & Kulkarni 2014; Joy & Renumol 2020) — cosine","text":"best method identifying outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/cosine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cosine similarity index based on (Gautam & Kulkarni 2014; Joy & Renumol 2020) — cosine","text":"","code":"if (FALSE) { # \\dontrun{  data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                     lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection  outliersdf <- multidetect(data = extdf, output='outlier', var = 'bio6',                          exclude = c('x','y'), multiple = TRUE,                          methods = c('mixediqr', \"iqr\", \"mahal\", \"iqr\", \"logboxplot\"),                          showErrors = FALSE, warn = TRUE, verbose = FALSE, sdm = TRUE)  consineout <- cosine(x = outliersdf, sp= 8, threshold = 0.2)#   } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/datacleaner-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Outlier detection class for multiple methods — datacleaner-class","title":"Outlier detection class for multiple methods — datacleaner-class","text":"Outlier detection class multiple methods","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/datacleaner-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Outlier detection class for multiple methods — datacleaner-class","text":"result List data sets outliers detected. mode Either ´TRUE´ multiple species FALSE one species. varused variable used outlier detection, useful univariate outlier detection methods. Either outliers clean dataset outputted. methodsused methods used outlier detection. dfname dataframe name aid tracking clean data extraction. excluded whether columns excluded outlier detection. useful multivariate methods coordinates removed data. pc parameters principal component analysis. bootstrap parameters bootstrapping small data sets. nboots number bootstraps bootstrapping. pcvariable variable considered PCA. pcretained number data columns retained. default 3. maxrecords maximum number records used bootstrapping.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/distboxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribution boxplot — distboxplot","title":"Distribution boxplot — distboxplot","text":"Distribution boxplot","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/distboxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribution boxplot — distboxplot","text":"","code":"distboxplot(   data,   var,   output,   p1 = 0.025,   p2 = 0.975,   boot = FALSE,   pc = FALSE,   pcvar = NULL )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/distboxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribution boxplot — distboxplot","text":"data Dataframe vector check outliers. var Variable used outlier detection data vector file. output Either clean: clean data output without outliers; outliers: outlier data frame vectors. p1, p2 Different pvalues outlier detection Schwertman et al. 2004). boot Whether bootstrapping computed. Default FALSE pc Whether principal component analysis computed. Default FALSE pcvar Principal component analysis e used outlier detection PCA. Default PC1","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/distboxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribution boxplot — distboxplot","text":"Either clean outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/distboxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distribution boxplot — distboxplot","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  danube <- system.file('extdata/danube.shp.zip', package='specleanr')  db <- sf::st_read(danube, quiet=TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd , lat = 'decimalLatitude', lon= 'decimalLongitude',                           colsp = 'speciescheck',                           bbox = db,                           minpts = 10)   bxout <- distboxplot(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier') } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/ecological_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for environmental outliers using species optimal ranges. — ecological_ranges","title":"Check for environmental outliers using species optimal ranges. — ecological_ranges","text":"Check environmental outliers using species optimal ranges.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ecological_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for environmental outliers using species optimal ranges. — ecological_ranges","text":"","code":"ecological_ranges(   data,   var,   output = \"outlier\",   species = NULL,   optimumSettings = list(optdf = NULL, optspcol = NULL, mincol = NULL, maxcol = NULL,     ecoparam = NULL, direction = NULL),   minval = NULL,   maxval = NULL,   lat = NULL,   lon = NULL,   ecoparam = NULL,   direction = NULL,   pct = 80,   checkfishbase = FALSE,   mode = NULL,   warn = TRUE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/ecological_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for environmental outliers using species optimal ranges. — ecological_ranges","text":"data Dataframe environmental predictors species multiple species. var Environmental parameter considered flagging suspicious outliers. output output Either clean: dataframe suspicious outliers outlier: retrun dataframe outliers. species species indicated minimum minval maximum values maxval provided. optimumSettings list optimal parameters provided mostly multiple species examined. optdf: dataframe species optimal values (min, max, ecoparam). dataset  can generated literature different species. optspcol: column species names optdf dataset. mincol: column name optdf minimum values. maxcol: column name optdf maximum values. ecoparam: optdf minimum maximum values found,  column ecoparam provided. direction: ecoparam provided optdf, column direction provided. minval, maxval Minimum  maximum values (ranges) particular used flag values outside ranges. lat, lon checkfishbase mode set, columns latitude longitude provided. ecoparam parameter used lower bound (minimum) upper bound maximum ranges absent. example, minimum value present particular species, ecoparam set direction provided whether lower, greater, equal, less/equal greater/equal ecoparam value provided. direction indicates provided ecological threshold ecoparam ranges greater greater, less less, equal equal, less equal le greater equal ge. Íf minimum maximum values known, ecoparam direction used. pct percentage similarity species name provided user one  FishBase. fish species names checked Fishbase taxa can checked using taxize package. checkfishbase Either TRUE check temperatures temp latitudinal geographical ranges geo. checkfishbase set TRUE mode parameter must set either geo temp. function applies fish species. mode Either geo temp latitudinal ranges temperature ranges respectively. See thermal_ranges geo_ranges obtain data. warn Either TRUE return warning messages FALSE warning messages. defualt FALSE:","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ecological_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for environmental outliers using species optimal ranges. — ecological_ranges","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ecological_ranges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for environmental outliers using species optimal ranges. — ecological_ranges","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\") data(\"jdsdata\")  datafinal <- match_datasets(datasets = list(jds = jdsdata, efi=efidata),                             lats = 'lat',                             lons = 'lon',                             species = c('speciesname','scientificName'),                             date = c('Date', 'sampling_date'),                             country = c('JDS4_site_ID'))  gbd <- check_names(data = datafinal, colsp='species', pct=90, merge=TRUE)  danube <- system.file('extdata/danube.shp.zip', package='specleanr')  db <- sf::st_read(danube, quiet=TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd , lat = 'decimalLatitude', lon= 'decimalLongitude',                         colsp = 'speciescheck',                        bbox = db,                         minpts = 10)  saldata <- refdata[['Salmo trutta']] #1. checking the annual maean temperature (bio1) are within the ranges in FishBase salmotherange <- thermal_ranges(x = \"Salmo trutta\")  sdatatemp <- ecological_ranges(data = saldata, var = 'bio1', species = \"Salmo trutta\",                               checkfishbase = TRUE, mode = 'temp', output = 'outlier') #zero record no outliers #==== #2. geographical ranges: latitude longitude #geo ranges in fishbase salgeorange <- geo_ranges(data = \"Salmo trutta\") sdatageo <- ecological_ranges(data = saldata, lat = 'y', lon = 'x', output = 'outlier',                               species = \"Salmo trutta\",                               checkfishbase = TRUE, mode = 'geo') #3. GENERAL LITERATURE RANGES #====== #1. when the min and and max are provided #multiple FALSE SHOULD BE SET #3.1: If only the minimum value is present: assuming minimum temperature is 6, varible: bio1 #direction less than 6.0 is outlier and greater is not sdata <- ecological_ranges(data = saldata, ecoparam = 6.0, var = 'bio1',                            direction = 'greater' ) #3.2 sdata2 <- ecological_ranges(data = saldata, var = 'bio1', minval = 2,                             maxval = 24, species = \"Salmo trutta\" )  #4. Multiple TRUE #the optimal parameters should be provided in a dataframe format with min max, or ecoparam #4.1 optimal dataset  optdata <- data.frame(species= c(\"Salmo trutta\", \"Abramis brama\"),                       mintemp = c(6, 1.6),maxtemp = c(20, 21),                       meantemp = c(8.5, 10.4), #ecoparam                       direction = c('greater', 'greater'))  #parameter used is annual mean temperature (WORLDCLIM) #provide the column with species names in the environment dataset #set optimal list parameter # # #optimal parameters sdata3 <- ecological_ranges(data = saldata, species = 'Salmo trutta',                             var = 'bio1', output = \"outlier\",                             optimumSettings = list(optdf = optdata,maxcol = \"maxtemp\",                                                    mincol =\"mintemp\",optspcol = \"species\")) # # #only one ecological parameter (ecoparam is provided) and direction sdata4 <- ecological_ranges(data = saldata, species = 'Salmo trutta', var = 'bio1',                             output = \"outlier\",                             optimumSettings = list(optdf = optdata,                                                    ecoparam = \"meantemp\",                                                    optspcol = \"species\",                                                    direction= \"direction\")) } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/efidata.html","id":null,"dir":"Reference","previous_headings":"","what":"EFIPLUS data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — efidata","title":"EFIPLUS data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — efidata","text":"tibble","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/efidata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EFIPLUS data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — efidata","text":"","code":"data(efidata)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/efidata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"EFIPLUS data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — efidata","text":"tibble 99 rows 23 columns.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/efidata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EFIPLUS data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — efidata","text":"BQEs sensitivity global/climate change European rivers: implications reference conditions pressure-impact-recovery chains (Logez et al. 2012). extract made usage package information write ihg@boku.ac.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/efidata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"EFIPLUS data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — efidata","text":"Logez M, Belliard J, Melcher , Kremser H, Pletterbauer F, Schmutz S, Gorges G, Delaigue O, Pont D. 2012. Deliverable D5.1-3: BQEs sensitivity global/climate change European rivers: implications reference conditions pressure-impact-recovery chains.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/efidata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EFIPLUS data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — efidata","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\") efidata } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/eif.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the empirical influence function for each values in the dataset — eif","title":"Computes the empirical influence function for each values in the dataset — eif","text":"Computes empirical influence function values dataset","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/eif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the empirical influence function for each values in the dataset — eif","text":"","code":"eif(x, var)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/eif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the empirical influence function for each values in the dataset — eif","text":"x Outlier checked data var variable interest","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/extentvalues.html","id":null,"dir":"Reference","previous_headings":"","what":"To check for a bounding box — extentvalues","title":"To check for a bounding box — extentvalues","text":"check bounding box","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/extentvalues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To check for a bounding box — extentvalues","text":"","code":"extentvalues(x, par = NULL)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/extentvalues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To check for a bounding box — extentvalues","text":"x raster, shapefile list bounding box values. par indicate database queried handing issues bounding box settings.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/extentvalues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To check for a bounding box — extentvalues","text":"extent values raster, shapefile bounding box","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/extractMethods.html","id":null,"dir":"Reference","previous_headings":"","what":"List of outlier detection methods implemented in this package. — extractMethods","title":"List of outlier detection methods implemented in this package. — extractMethods","text":"List outlier detection methods implemented package.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/extractMethods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of outlier detection methods implemented in this package. — extractMethods","text":"","code":"extractMethods()"},{"path":"https://anthonybasooma.github.io/specleanr/reference/extractMethods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of outlier detection methods implemented in this package. — extractMethods","text":"List methods","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/extractMethods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of outlier detection methods implemented in this package. — extractMethods","text":"","code":"if (FALSE) { # \\dontrun{ extractMethods() } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/extract_clean_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract final clean data using either absolute or best method generated outliers. — extract_clean_data","title":"Extract final clean data using either absolute or best method generated outliers. — extract_clean_data","text":"Extract final clean data using either absolute best method generated outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/extract_clean_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract final clean data using either absolute or best method generated outliers. — extract_clean_data","text":"","code":"extract_clean_data(   refdata,   outliers,   mode = \"abs\",   var_col = NULL,   threshold = NULL,   warn = FALSE,   verbose = FALSE,   autothreshold = FALSE,   pabs = 0.1,   loess = FALSE,   outlier_to_NA = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/extract_clean_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract final clean data using either absolute or best method generated outliers. — extract_clean_data","text":"refdata dataframe. reference data species used outlier detection. outliers string. Output outlier detection process. mode character. Either abs use absolute outliers filter data best outliers best method. var_col string. parameter used data data frame user must indicate column wih species names. threshold numeric. Value consider whether outlier absolute outlier . warn logical. FALSE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. verbose logical. Produces messages . Default FALSE. autothreshold vector. Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL. pabs numeric. Percentage outliers allowed extracted data. best used extract outliers pabs exceeded, absolute outliers removed instead. records  best methods repeated likely remove true values outliers. loess logical. Set TRUE use loess threshold optimization extract clean data. outlier_to_NA logical TRUE clean dataset outliers replaced NAs.        parameter experimented ouput dataframe multiple variables concerns considered        outlier detection. ###param multiple TRUE multiple species FALSE single species considered outlier detection.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/extract_clean_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract final clean data using either absolute or best method generated outliers. — extract_clean_data","text":"Either list dataframe cleaned records multiple species.","code":""},{"path":[]},{"path":"https://anthonybasooma.github.io/specleanr/reference/extract_clean_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract final clean data using either absolute or best method generated outliers. — extract_clean_data","text":"","code":"if (FALSE) { # \\dontrun{  data(jdsdata) data(efidata) matchdata <- match_datasets(datasets = list(jds = jdsdata, efi = efidata),                             lats = 'lat',                             lons = 'lon',                             species = c('speciesname','scientificName'),                             country= c('JDS4_site_ID'),                             date=c('sampling_date', 'Date'))  datacheck <- check_names(matchdata, colsp= 'species', pct = 90, merge =TRUE)   danube <- system.file('extdata/danube.shp.zip', package='specleanr')  db <- sf::st_read(danube, quiet=TRUE)   worldclim <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  rdata <- pred_extract(data = datacheck,                       raster= worldclim ,                       lat = 'decimalLatitude',                       lon= 'decimalLongitude',                       colsp = 'speciescheck',                       bbox = db,                       minpts = 10,                       list=TRUE,                       merge=F)   out_df <- multidetect(data = rdata, multiple = TRUE,                       var = 'bio6',                       output = 'outlier',                       exclude = c('x','y'),                       methods = c('zscore', 'adjbox','iqr', 'semiqr','hampel'))  #extracting use the absolute method for one species  extractabs <- extract_clean_data(refdata = rdata, outliers = out_df,                                  mode = 'abs', threshold = 0.6,                                  autothreshold = FALSE)  bestmout_bm <- extract_clean_data(refdata = rdata, outliers = out_df,                                   mode = 'best', threshold = 0.6,                                  autothreshold = FALSE) } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/extractoutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract outliers for a one species — extractoutliers","title":"Extract outliers for a one species — extractoutliers","text":"Extract outliers one species","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/extractoutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract outliers for a one species — extractoutliers","text":"","code":"extractoutliers(x, sp = NULL)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/extractoutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract outliers for a one species — extractoutliers","text":"x list. Outlier outputs single multiple species. sp string. Species name index list datacleaner output. NULL single species","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/extractoutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract outliers for a one species — extractoutliers","text":"data frame Outliers method","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/extractoutliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract outliers for a one species — extractoutliers","text":"","code":"if (FALSE) { # \\dontrun{  data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                       lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection  outliersdf <- multidetect(data = extdf, output='outlier', var = 'bio6',                          exclude = c('x','y'), multiple = TRUE,                          methods = c('mixediqr', \"iqr\", \"mahal\", \"iqr\", \"logboxplot\"),                          silence_true_errors = FALSE, warn = TRUE, verbose = FALSE, sdm = TRUE)  extoutlier <- extractoutliers(x=outliersdf, sp = 8)  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/geo_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks for geographic ranges from FishBase — geo_ranges","title":"Checks for geographic ranges from FishBase — geo_ranges","text":"Checks geographic ranges FishBase","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/geo_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks for geographic ranges from FishBase — geo_ranges","text":"","code":"geo_ranges(   data,   colsp = NULL,   verbose = F,   pct = 90,   sn = FALSE,   warn = FALSE,   synonym = fishbase(tables = \"synonym\"),   ranges = fishbase(tables = \"ranges\") )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/geo_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks for geographic ranges from FishBase — geo_ranges","text":"data Dataframe vector retrieve  ranges FishBase. colsp Column species names data set. verbose TRUE messages show. Default FALSE: pct percentage similarity species names standardization FishBase. sn TRUE synonyms generated accepted ones. Default FALSE, species accepted names produced. warn FALSE, generate warnings TRUE warnings. Default FALSE: synonym standard database species synonym names FishBase. See FishBase information. ranges standard database ecological ranges FishBase. See FishBase information.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/geo_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks for geographic ranges from FishBase — geo_ranges","text":"Dataframe geographical corrected ranges species FishBase.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/geo_ranges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks for geographic ranges from FishBase — geo_ranges","text":"","code":"if (FALSE) { # \\dontrun{  gr <- geo_ranges(data= \"Lates niloticus\")  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Download species records from online database. — getdata","title":"Download species records from online database. — getdata","text":"Download species records online database.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download species records from online database. — getdata","text":"","code":"getdata(   data,   colsp = NULL,   extent = NULL,   db = c(\"gbif\", \"vertnet\", \"inat\"),   gbiflim = 50000,   vertlim = 1000,   inatlim = 3000,   verbose = FALSE,   warn = FALSE,   pct = 80,   sn = F,   ... )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download species records from online database. — getdata","text":"data dataframe, list, vector, string. data retrieve records online databases (GBIF, VertNET, iNaturalist). colsp string. variable species names. Provided data data frame, required lists vector. extent vector sf. Bounding box limit download records within particular area. Otherwise records GBIF downloaded. can provided two forms, either shapefile (sf) class accepted provide list xmin, ymin, xmax, ymax. db vector. different databases allowed including 'gbif', 'vertnet', 'inat'. gbiflim integer. Limits records Global Biodiversity Information Platform vertlim integer. Limits records VertNET. inatlim integer. Limits records iNaturalist database. verbose logical. TRUE detailed messages indicated FALSE download messages needed. Default TRUE. warn logical. indicate warning messages shown. Default FALSE. pct numeric. percentage similarity used assign relatively similar name FishBase exact match absent. Default 90 higher values, higher percentage similarity considered replace species name cheeked Fishbase. sn logical. Whether consider synonyms. Default FALSE accepted names considered FishBase database. ... function species data download can used. See rgbif::occ_data information, rinat::get_inat_obs, rvertnet::searchbyterm.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download species records from online database. — getdata","text":"Lists species records online databases","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download species records from online database. — getdata","text":"Note always check validity species name standard database FishBase World Register Marine Species.        records 50000 GBIF, extent can provide limit download.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download species records from online database. — getdata","text":"","code":"if (FALSE) { # \\dontrun{  gbdata <- getdata(data = 'Gymnocephalus baloni', gbiflim = 100, inatlim = 100, vertlim = 100)  #Get for two species sp_records <- getdata(data=c('Gymnocephalus baloni', 'Hucho hucho'),                             gbiflim = 100,                             inatlim = 100,                             vertlim = 100) #for only two databases sp_records_2db <- getdata(data=c('Gymnocephalus baloni', 'Hucho hucho'),                            db= c('gbif','inat'),                             gbiflim = 100,                             inatlim = 100,                             vertlim = 100)  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdiff.html","id":null,"dir":"Reference","previous_headings":"","what":"get dataframe from the large dataframe. — getdiff","title":"get dataframe from the large dataframe. — getdiff","text":"get dataframe large dataframe.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get dataframe from the large dataframe. — getdiff","text":"","code":"getdiff(x, y, full = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get dataframe from the large dataframe. — getdiff","text":"x Small dataset y Large dataset intersection full Whether whole column names checked . Default FALSE first column considered. FALSE; returned columns may considered column less similar rows across two data sets.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get dataframe from the large dataframe. — getdiff","text":"Data extracted large dataset.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/getdiff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get dataframe from the large dataframe. — getdiff","text":"","code":"if (FALSE) { # \\dontrun{  x = data.frame(id=c(1,2,3,4,5),  name=c('a','b','c', 'd','e'))  y=data.frame(id=c(1,2,3,4,7,6,5), tens=c(10,29,37,46,58, 34, 44),                  name=c('a','b','c','d','e', 'f','g'))  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/ggenvironmentalspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Title Plotting to show the quality controlled data in environmental space. — ggenvironmentalspace","title":"Title Plotting to show the quality controlled data in environmental space. — ggenvironmentalspace","text":"Title Plotting show quality controlled data environmental space.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ggenvironmentalspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title Plotting to show the quality controlled data in environmental space. — ggenvironmentalspace","text":"","code":"ggenvironmentalspace(   qcdata,   xvar = NULL,   yvar = NULL,   zvar = NULL,   labelvar = NULL,   type = \"2D\",   xlab = NULL,   ylab = NULL,   zlab = NULL,   ncol = 2,   nrow = 2,   scalecolor = \"viridis\",   colorvalues = \"auto\",   legend_position = \"right\",   legend_inside = NULL,   pointsize = 1,   themebackground = \"bw\",   fontsize = 13,   legtitle = \"blank\",   ggxangle = 1,   xhjust = 0.5,   xvjust = 1,   main = NULL,   pch = \"auto\",   lpos3d = NULL,   cexsym = NULL )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/ggenvironmentalspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title Plotting to show the quality controlled data in environmental space. — ggenvironmentalspace","text":"qcdata dataframe Data output quality controlled function extract_clean_data classify_data. xvar string variable x-axis. yvar string variable y-axis. zvar string variable z-axis 3D plot type selected.. labelvar string Column name quality controlled data labels. applies 3D plot selected. type string 1D, 2D two dimensional ggplot2 graph 3D 3-dimensional graph multivariate data. xlab, ylab, zlab string x-axis, y-axis, z-axis label. ncol, nrow integer number groups greater 1, number rows columns can set. Check ggplot2 facet parameters columns set. scalecolor string scale color themes supported grey, manual, viridis. manual selected, colorvalues provided different colors data label. colorvalues manual selected, colorvalues provided different colors data label. 3D selected colorvalues auto, colors determined. legend_position string either bottom, top inside. inside selected vector graph coordinates provided avoid legend overlap graph contents. legend_inside vector inside legend position selected vector graph coordinates provided avoid legend overlap graph contents. pointsize decimal size points. themebackground string Either classic, bw gray set plot theme. based ggplot2. fontsize integer Indicates sizes fonts whole graph. legtitle string Either blank TRUE set legend title 2D plot. ggxangle integer Indicates angle x-axis text. dafualt 45 depend data. xhjust numeric Indicates distance x-axis text x-axis line vertical direction. xvjust numeric Indicates distance x-axis text x-axis line horizontal direction. main string Plot title pch string Either auto: point characters automatically set different pch set. lpos3d string Indicates legend position 3D graph. bottom, left, right accepted. cexsym numeric size pch 3D plot.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ggenvironmentalspace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title Plotting to show the quality controlled data in environmental space. — ggenvironmentalspace","text":"\"2D\" \"1D\" selected type, ggplot2 graph output \"3D\" type return scatterplot3D plot.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ggoutlieraccum.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify if enough methods are selected for the outlier detection. — ggoutlieraccum","title":"Identify if enough methods are selected for the outlier detection. — ggoutlieraccum","text":"Identify enough methods selected outlier detection.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ggoutlieraccum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify if enough methods are selected for the outlier detection. — ggoutlieraccum","text":"","code":"ggoutlieraccum(   x,   boots = 5,   select = NULL,   ncol = 3,   linecolor = \"blue\",   seed = 1134,   sci = FALSE,   xlab = \"Number of methods\",   ylab = \"Number of outliers\",   scales = \"free\" )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/ggoutlieraccum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify if enough methods are selected for the outlier detection. — ggoutlieraccum","text":"x datacleaner. output outlier detection multidetect function. boots interger. number bootstraps sample outliers obtained outlier detection process. Start lower number 10 increase serially get smoother curve. High bootstrap may lead crashing Generalized Additive Model used fit bootstraps cumulative number outliers. select vector. 10 groups considered, least seclected hvae meaningful visualization. ncol integer. Number columns groups greater 4, allow effective vizualisation. linecolor string parameter indicate color lines. default 'purple'. seed integer fix random sampling bootstrapping. sci logical. sci TRUE, species names italised otherwise normal names displayed. Default FALSE xlab, ylab string. inherited ggplot2 changes x y axis texts. scales string Define x oy y axis shared free. check ggplot2 details.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ggoutlieraccum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify if enough methods are selected for the outlier detection. — ggoutlieraccum","text":"ggplot2 output cumulative number outliers number methods used.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ggoutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize the outliers identified by each method — ggoutliers","title":"Visualize the outliers identified by each method — ggoutliers","text":"Visualize outliers identified method","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ggoutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize the outliers identified by each method — ggoutliers","text":"","code":"ggoutliers(x, select = NULL, color = \"purple\", desc = TRUE, ncol = 2, nrow = 2)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/ggoutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize the outliers identified by each method — ggoutliers","text":"x . datacleaner object select vect. Enter selected groups displayed especially greater 10. example species 10, plot done batches. color string. Color bars. Default grey. desc logical either arrange bars ascending descending order. ncol, nrow integer number groups greater 1, number rows columns can set. Check ggplot2 facet parameters columns set.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ggoutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize the outliers identified by each method — ggoutliers","text":"ggplot object indicating outlier detection methods number outlier flagged.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/hamming.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify best outlier detection method using Hamming distance. — hamming","title":"Identify best outlier detection method using Hamming distance. — hamming","text":"Identify best outlier detection method using Hamming distance.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/hamming.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify best outlier detection method using Hamming distance. — hamming","text":"","code":"hamming(x, sp = NULL, threshold = NULL, warn = FALSE, autothreshold = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/hamming.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify best outlier detection method using Hamming distance. — hamming","text":"x datacleaner class methods used identify outliers multidetect function. sp string. Species name index multiple species considered outlier detection. threshold numeric. Maximum value denote absolute outlier. threshold ranges 0, indicates point flagged outlier detection method outlier, 1, means record absolute true outlier since methods identified . extremes, many records classified low threshold values, may due individual method weakness strength data distribution. Also, higher threshold values, true outliers retained. example, ten methods considered 9 methods flag record outlier, cutoff 1 used, particular record retained. Therefore, default cutoff 0.6, autothreshold can used select appropriate threshold. warn logical. TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. autothreshold vector. Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/hamming.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify best outlier detection method using Hamming distance. — hamming","text":"best method based hamming distance","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/hamming.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify best outlier detection method using Hamming distance. — hamming","text":"","code":"if (FALSE) { # \\dontrun{  data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                     lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection  outliersdf <- multidetect(data = extdf, output='outlier', var = 'bio6',                          exclude = c('x','y'), multiple = TRUE,                          methods = c('mixediqr', \"iqr\", \"mahal\", \"iqr\", \"logboxplot\"),                          showErrors = FALSE, warn = TRUE, verbose = FALSE, sdm = TRUE)  hamout <- hamming(x = outliersdf, sp= 8, threshold = 0.2)#  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/hampel.html","id":null,"dir":"Reference","previous_headings":"","what":"Flag suspicious outliers based on the Hampel filter method.. — hampel","title":"Flag suspicious outliers based on the Hampel filter method.. — hampel","text":"Flag suspicious outliers based Hampel filter method..","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/hampel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flag suspicious outliers based on the Hampel filter method.. — hampel","text":"","code":"hampel(data, var, output, x = 3, pc = FALSE, pcvar = NULL, boot = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/hampel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flag suspicious outliers based on the Hampel filter method.. — hampel","text":"data Data frame check outliers var Environmental parameter considered flagging suspicious outliers output Either clean: dataframe suspicious outliers outlier: retrun dataframe outliers x constant create fence boundary detect outliers. pc Whether principal component analysis computed. Default FALSE pcvar Principal component analysis e used outlier detection PCA. Default PC1 boot Whether bootstrapping computed. Default FALSE","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/hampel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flag suspicious outliers based on the Hampel filter method.. — hampel","text":"Data frame outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/hampel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flag suspicious outliers based on the Hampel filter method.. — hampel","text":"Hampel filter method robust decision-based filter considers median MAD. Outliers lies beyond $$[x-* λ*MAD; x+ λ*MAD]$$ λ 3 considered (Pearson et al. 2016).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/hampel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Flag suspicious outliers based on the Hampel filter method.. — hampel","text":"Pearson Ronald, Neuvo Y, Astola J, Gabbouj M. 2016. Class Generalized Hampel Filters. 2546-2550 2015 23rd European Signal Processing Conference (EUSIPCO).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/hampel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flag suspicious outliers based on the Hampel filter method.. — hampel","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  danube <- system.file('extdata/danube.shp.zip', package='specleanr') db <- sf::st_read(danube, quiet=TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd ,                           lat = 'decimalLatitude',                           lon= 'decimalLongitude',                           colsp = 'speciescheck',                           bbox = db,                           minpts = 10)   hampout <- hampel(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier')  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/handle_true_errors.html","id":null,"dir":"Reference","previous_headings":"","what":"Catch errors during methods implementation. — handle_true_errors","title":"Catch errors during methods implementation. — handle_true_errors","text":"Catch errors methods implementation.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/handle_true_errors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Catch errors during methods implementation. — handle_true_errors","text":"","code":"handle_true_errors(   func,   fname = NULL,   spname = NULL,   verbose = FALSE,   warn = FALSE,   silence_true_errors = TRUE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/handle_true_errors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Catch errors during methods implementation. — handle_true_errors","text":"func Outlier detection function fname function name messaging warning identification. spname species name handled verbose whether return messages . Default FALSE. warn whether return warning . Default TRUE. silence_true_errors show execution errors therefore multiple species code break one methods fails execute.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/handle_true_errors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Catch errors during methods implementation. — handle_true_errors","text":"Handle errors","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/interquartile.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes interquartile range to flag environmental outliers — interquartile","title":"Computes interquartile range to flag environmental outliers — interquartile","text":"Computes interquartile range flag environmental outliers","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/interquartile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes interquartile range to flag environmental outliers — interquartile","text":"","code":"interquartile(   data,   var,   output,   x = 1.5,   pc = FALSE,   pcvar = NULL,   boot = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/interquartile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes interquartile range to flag environmental outliers — interquartile","text":"data Dataframe check outliers var Variable considered flagging suspicious outliers output Either clean: dataframe suspicious outliers outlier: retrun dataframe outliers. x constant create fence boundary detect outliers. pc Whether principal component analysis computed. Default FALSE pcvar Principal component analysis e used outlier detection PCA. Default PC1 boot Whether bootstrapping computed. Default FALSE","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/interquartile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes interquartile range to flag environmental outliers — interquartile","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/interquartile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computes interquartile range to flag environmental outliers — interquartile","text":"Interquartile range (IQR) uses quantiles resistant outliers compared      mean standard deviation (Seo 2006). Records considered mild outliers      fell outside lower upper bounding fences      [Q1 (lower quantile) -1.5*IQR (Interquartile range); Q3 (upper quantile) +1.5*IQR]      respectively (Rousseeuw & Hubert 2011).      Extreme outliers also considered      fell outside \\[Q1-3*IQR, Q3+3*IQR\\] (García-Roselló et al. 2014).      However, using interquartile range assumes uniform lower      upper bounding fences, robust highly skewed data      (Hubert & Vandervieren 2008).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/interquartile.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computes interquartile range to flag environmental outliers — interquartile","text":"Rousseeuw PJ, Hubert M. 2011. Robust statistics outlier detection. Wiley Interdisciplinary Reviews  Data Mining Knowledge Discovery 1:73-79.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/interquartile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes interquartile range to flag environmental outliers — interquartile","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  danube <- system.file('extdata/danube.shp.zip', package='specleanr')  db <- sf::st_read(danube, quiet=TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd , lat = 'decimalLatitude',                           lon= 'decimalLongitude',                           colsp = 'speciescheck',                           bbox = db,                           minpts = 10)   iqrout <- interquartile(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier') } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/isoforest.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify outliers using isolation forest model. — isoforest","title":"Identify outliers using isolation forest model. — isoforest","text":"Identify outliers using isolation forest model.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/isoforest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify outliers using isolation forest model. — isoforest","text":"","code":"isoforest(   data,   size,   cutoff = 0.5,   output,   exclude = NULL,   pc = FALSE,   boot = FALSE,   pcvar = NULL,   var )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/isoforest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify outliers using isolation forest model. — isoforest","text":"data Dataframe environmental variables extracted species recorded present absent. size Proportion data used training isolation forest n´model. ranges form 0.1 (fewer data  selected ) 1 data used training isolation model. cutoff Cut select record outlier . output Either clean: data set outliers outlier: output dataframe outliers. Default 0.5. exclude Exclude variables considered fitting one class model, example x y columns latitude/longitude column user want consider. pc Whether principal component analysis computed. Default FALSE boot Whether bootstrapping computed. Default FALSE pcvar Principal component analysis e used outlier detection PCA. Default PC1 var variable concern, vital univariate outlier detection methods","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/isoforest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify outliers using isolation forest model. — isoforest","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/isoforest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Identify outliers using isolation forest model. — isoforest","text":"Liu FeiT, Ting KaiM, Zhou Z-H. 2008. Isolation Forest. Pages 413–422 2008 Eighth IEEE International Conference Data Mining. Available https://ieeexplore.ieee.org/abstract/document/4781136 (accessed November 18, 2023).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/isoforest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify outliers using isolation forest model. — isoforest","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  danube <- system.file('extdata/danube.shp.zip', package='specleanr')  db <- sf::st_read(danube, quiet=TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd ,                        lat = 'decimalLatitude',                        lon= 'decimalLongitude',                        colsp = 'speciescheck',                       bbox = db,                        minpts = 10)  iosd <- isoforest(data = refdata[['Salmo trutta']], size = 0.7,  output='outlier',                   exclude = c(\"x\", \"y\")) } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/jaccard.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies the best outlier detection method using Jaccard coefficient. — jaccard","title":"Identifies the best outlier detection method using Jaccard coefficient. — jaccard","text":"Identifies best outlier detection method using Jaccard coefficient.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jaccard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies the best outlier detection method using Jaccard coefficient. — jaccard","text":"","code":"jaccard(x, sp = NULL, threshold = NULL, warn = FALSE, autothreshold = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/jaccard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies the best outlier detection method using Jaccard coefficient. — jaccard","text":"x datacleaner class methods used identify outliers multidetect function. sp string. Species name index multiple species considered outlier detection. threshold numeric. Maximum value denote absolute outlier. threshold ranges 0, indicates point flagged outlier detection method outlier, 1, means record absolute true outlier since methods identified . extremes, many records classified low threshold values, may due individual method weakness strength data distribution. Also, higher threshold values, true outliers retained. example, ten methods considered 9 methods flag record outlier, cutoff 1 used, particular record retained. Therefore, default cutoff 0.6, autothreshold can used select appropriate threshold. warn logical. TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. autothreshold vector. Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jaccard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies the best outlier detection method using Jaccard coefficient. — jaccard","text":"string best method identifying outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jaccard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies the best outlier detection method using Jaccard coefficient. — jaccard","text":"","code":"if (FALSE) { # \\dontrun{  data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                     lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection  outliersdf <- multidetect(data = extdf, output='outlier', var = 'bio6',                          exclude = c('x','y'), multiple = TRUE,                          methods = c('mixediqr', \"iqr\", \"mahal\", \"iqr\", \"logboxplot\"),                          showErrors = FALSE, warn = TRUE, verbose = FALSE, sdm = TRUE)  jaccardout <- jaccard(x = outliersdf, sp= 8, threshold = 0.2)#   } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/jdsdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Joint Danube Survey Data — jdsdata","title":"Joint Danube Survey Data — jdsdata","text":"tibble Data five year periodic data collection within Danube River Basin. information, please visit https://www.danubesurvey.org/jds4/","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jdsdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joint Danube Survey Data — jdsdata","text":"","code":"data(jdsdata)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/jdsdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Joint Danube Survey Data — jdsdata","text":"tibble 98 rows 24 columns.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jdsdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Joint Danube Survey Data — jdsdata","text":"Species ecological parameters ecological ranges native alien","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jdsdata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Joint Danube Survey Data — jdsdata","text":"https://www.danubesurvey.org/jds4/","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jdsdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Joint Danube Survey Data — jdsdata","text":"","code":"if (FALSE) { # \\dontrun{  data(\"jdsdata\") jdsdata } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/jknife.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies outliers using Reverse Jackknifing method based on Chapman et al., (2005). — jknife","title":"Identifies outliers using Reverse Jackknifing method based on Chapman et al., (2005). — jknife","text":"Identifies outliers using Reverse Jackknifing method based Chapman et al., (2005).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jknife.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies outliers using Reverse Jackknifing method based on Chapman et al., (2005). — jknife","text":"","code":"jknife(   data,   var,   output = \"outlier\",   mode = \"soft\",   pc = FALSE,   pcvar = NULL,   boot = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/jknife.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies outliers using Reverse Jackknifing method based on Chapman et al., (2005). — jknife","text":"data Dataframe check outliers var Variable considered flagging suspicious outliers. output Either clean: data frame suspicious outliers outlier: return data frame outliers mode Either robust, robust mode used uses median instead mean median absolute deviation median mad instead standard deviation. pc Whether principal component analysis computed. Default FALSE pcvar Principal component analysis e used outlier detection PCA. Default PC1 boot Whether bootstrapping computed. Default FALSE","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jknife.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies outliers using Reverse Jackknifing method based on Chapman et al., (2005). — jknife","text":"Data frame outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jknife.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identifies outliers using Reverse Jackknifing method based on Chapman et al., (2005). — jknife","text":"Reverse jackknifing specifically developed detect error climate profiles (Chapman 1991, 1999). method applied detecting outliers environmental data (García-Roselló et al. 2014; Robertson et al. 2016)  incorporated DIVAS-GIS software (Hijmans et al. 2001).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jknife.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Identifies outliers using Reverse Jackknifing method based on Chapman et al., (2005). — jknife","text":"Chapman AD. 1991. Quality control validation environmental resource data   Data Quality Standards. Pages 1-23. Canberra. Available   https://www.researchgate.net/publication/332537824. Chapman AD. 1999. Quality Control Validation Point-Sourced Environmental Resource Data. eds. .   Chelsea,. Pages 409-418 Lowell K, Jaton , editors. Spatial accuracy assessment:   Land information uncertainty natural resources, 1st edition. MI: Ann Arbor Press., Chelsea.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/jknife.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies outliers using Reverse Jackknifing method based on Chapman et al., (2005). — jknife","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  danube <- system.file('extdata/danube.shp.zip', package='specleanr')  db <- sf::st_read(danube, quiet=TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd ,                         lat = 'decimalLatitude',                         lon= 'decimalLongitude',                         colsp = 'speciescheck',                         bbox = db,                         minpts = 10)  jkout <- jknife(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier')  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/kdat.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential fences constants — kdat","title":"Sequential fences constants — kdat","text":"tibble data k constants sequential fences method.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/kdat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential fences constants — kdat","text":"","code":"data(kdat)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/kdat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sequential fences constants — kdat","text":"tibble 101 rows 2 columns.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/kdat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sequential fences constants — kdat","text":"k constants fro flagging outliers several chnages fences.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/kdat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sequential fences constants — kdat","text":"Schwertman NC, de Silva R. 2007. Identifying outliers sequential fences. Computational Statistics Data Analysis 51:3800–3810.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/kdat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequential fences constants — kdat","text":"","code":"if (FALSE) { # \\dontrun{  data(\"kdat\") kdat } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/logboxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Log boxplot based for outlier detection. — logboxplot","title":"Log boxplot based for outlier detection. — logboxplot","text":"Log boxplot based outlier detection.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/logboxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log boxplot based for outlier detection. — logboxplot","text":"","code":"logboxplot(data, var, output, x = 1.5, pc = FALSE, pcvar = NULL, boot = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/logboxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log boxplot based for outlier detection. — logboxplot","text":"data Dataframe vector check outliers. var Variable used outlier detection data vector format. output Either clean: clean data output without outliers; outliers: outlier data frame vectors. x constant creating lower upper fences. Extreme 3, default 1.5. pc Whether principal component analysis computed. Default FALSE pcvar Principal component analysis e used outlier detection PCA. Default PC1 boot Whether bootstrapping computed. Default FALSE","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/logboxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log boxplot based for outlier detection. — logboxplot","text":"Dataframe without outliers depending output. clean Data without outliers. outlier Data outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/logboxplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log boxplot based for outlier detection. — logboxplot","text":"loxplot outlier detection Barbato et al. (2011) modifies interquartile range method detect outlier considering sample sizes indicating fences (lower upper fences). $$ lowerfence = [Q1 -1.5*IQR[1+0.1 * log(n/10)]$$ $$upperfence = [Q3 +1.5*IQR[1+0.1 *log(n/10)]$$ ; Q1 lower quantile Q3 upper quantile. method consider sample      size setting fences, address weakness interquartile range method (Tukey, 1977).      However. similar IQR method flagging outlier, log boxplot modification affected      data skewness can address using       distboxplot,  seqfences, mixediqr      semiIQR.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/logboxplot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Log boxplot based for outlier detection. — logboxplot","text":"Barbato G, Barini EM, Genta G, Levi R. 2011. Features performance outlier detection methods. Journal Applied Statistics 38:2133-2149","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/logboxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log boxplot based for outlier detection. — logboxplot","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  danube <- system.file('extdata/danube.shp.zip', package='specleanr')  db <- sf::st_read(danube, quiet=TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd , lat = 'decimalLatitude', lon= 'decimalLongitude',                           colsp = 'speciescheck',                           bbox = db,                           minpts = 10)   logout <- logboxplot(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier')  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/mahal.html","id":null,"dir":"Reference","previous_headings":"","what":"Flags outliers based on Mahalanobis distance matrix for all records. — mahal","title":"Flags outliers based on Mahalanobis distance matrix for all records. — mahal","text":"Flags outliers based Mahalanobis distance matrix records.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mahal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flags outliers based on Mahalanobis distance matrix for all records. — mahal","text":"","code":"mahal(   data,   exclude = NULL,   output = \"outlier\",   mode = \"soft\",   pdf = 0.95,   tol = 1e-20,   pc = FALSE,   boot = FALSE,   var,   pcvar = NULL )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/mahal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flags outliers based on Mahalanobis distance matrix for all records. — mahal","text":"data dataframe. Dataframe check outliers extract clean data. exclude vector string Variables considered executing Mahalanobis distance matrix. can coordinates latitude/longitude column user want consider. output string Either clean data set outliers outlier output data frame outliers. mode string Either robust, robust mode used uses auto estimator instead mean. Default mode soft. pdf numeric chisqure probability distribution value used flagging outliers (Leys et al. 2018). Default 0.95. tol numeric tolernce value inverse calculation small. Default 1e-20. pc Whether principal component analysis computed. Default FALSE boot Whether bootstrapping computed. Default FALSE var variable concern, vital univariate outlier detection methods pcvar Principal component analysis e used outlier detection PCA. Default PC1","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mahal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flags outliers based on Mahalanobis distance matrix for all records. — mahal","text":"Either clean outliers dataset","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mahal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Flags outliers based on Mahalanobis distance matrix for all records. — mahal","text":"Leys C, Klein O, Dominicy Y, Ley C. 2018. Detecting multivariate outliers: Use robust variant Mahalanobis distance. Journal Experimental Social Psychology 74:150-156.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mahal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flags outliers based on Mahalanobis distance matrix for all records. — mahal","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  danube <- system.file('extdata/danube.shp.zip', package='specleanr')  db <- sf::st_read(danube, quiet=TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd ,                        lat = 'decimalLatitude',                        lon= 'decimalLongitude',                        colsp = 'speciescheck',                       bbox = db,                        minpts = 10)  #outliers outliers <- mahal(data = refdata[['Salmo trutta']], exclude = c(\"x\", \"y\"),                         output='outlier')   } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/match.argc.html","id":null,"dir":"Reference","previous_headings":"","what":"Customized match function — match.argc","title":"Customized match function — match.argc","text":"Customized match function","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/match.argc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customized match function — match.argc","text":"","code":"match.argc(x, choices, quiet = TRUE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/match.argc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customized match function — match.argc","text":"x category words match choices different options choices particular category allowed. quiet Default FALSE return messages.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/match.argc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Customized match function — match.argc","text":"choices","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/match_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Data harmonizing for offline data based on Darwin Core terms . — match_datasets","title":"Data harmonizing for offline data based on Darwin Core terms . — match_datasets","text":"Data harmonizing offline data based Darwin Core terms .","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/match_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data harmonizing for offline data based on Darwin Core terms . — match_datasets","text":"","code":"match_datasets(   datasets,   country = NULL,   lats = NULL,   lons = NULL,   species = NULL,   date = NULL,   verbose = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/match_datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data harmonizing for offline data based on Darwin Core terms . — match_datasets","text":"datasets List offline online data merge. offline data set given specific name identification match data set. country Indicate country column names appear data sets merged. lats Match column names latitude data set matched. default latitude name decimalLatitude. , indicate latitude name referenced data sets matched. lons Match column names latitude data set match. default longitude name decimalLongitude. , indicate longitude name referenced data sets match. species Indicate species columns appear data sets matched. default species, data set species column name scientific species names names, indicate column name . date Indicate date column names appear data sets matched. verbose Messages data matching. Default FALSE","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/match_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data harmonizing for offline data based on Darwin Core terms . — match_datasets","text":"Harmonized data set standardized column names foe species names, latitude, longitude, country dates.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/match_datasets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data harmonizing for offline data based on Darwin Core terms . — match_datasets","text":"data set matched standard columns, namely decimalLatitude, decimalLatutide, species, indicated matching. Otherwise column names varying names 5 parameters indicated.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/match_datasets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data harmonizing for offline data based on Darwin Core terms . — match_datasets","text":"Wieczorek J, Bloom D, Guralnick R, Blum S, Döring M, Giovanni R, et al. (2012) Darwin Core: Evolving Community-Developed Biodiversity Data Standard. PLoS ONE 7(1): e29715. https://doi.org/10.1371/journal.pone.0029715.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/match_datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data harmonizing for offline data based on Darwin Core terms . — match_datasets","text":"","code":"if (FALSE) { # \\dontrun{  data(jdsdata)  data(efidata)  matchdfs <- match_datasets(datasets = list(jds = jdsdata, efi = efidata),                            lats = 'lat',                            lons = 'lon',                            species = c('speciesname','scientificName'),                            country=c('JDS4_site_ID'),                            date=c('Date', 'sampling_date'))  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/medianrule.html","id":null,"dir":"Reference","previous_headings":"","what":"Median rule method — medianrule","title":"Median rule method — medianrule","text":"Median rule method","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/medianrule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Median rule method — medianrule","text":"","code":"medianrule(data, var, output, x = 2.3, pc = FALSE, pcvar = NULL, boot = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/medianrule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Median rule method — medianrule","text":"data Dataframe vector check outliers. var Variable used outlier detection data vector file. output Either clean: clean data output without outliers; outliers: outlier data frame vectors. x constant flagging outliers. pc Whether principal component analysis computed. Default FALSE pcvar Principal component analysis e used outlier detection PCA. Default PC1 boot Whether bootstrapping computed. Default FALSE","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/medianrule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Median rule method — medianrule","text":"Either clean outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/medianrule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Median rule method — medianrule","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  danube <- system.file('extdata/danube.shp.zip', package='specleanr')  db <- sf::st_read(danube, quiet=TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd ,                           lat = 'decimalLatitude',                           lon= 'decimalLongitude',                           colsp = 'speciescheck',                           bbox = db,                           minpts = 10)   medout <- medianrule(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier') } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/mixediqr.html","id":null,"dir":"Reference","previous_headings":"","what":"Mixed Interquartile range and semiInterquartile range Walker et al., 2018 — mixediqr","title":"Mixed Interquartile range and semiInterquartile range Walker et al., 2018 — mixediqr","text":"Mixed Interquartile range semiInterquartile range Walker et al., 2018","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mixediqr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mixed Interquartile range and semiInterquartile range Walker et al., 2018 — mixediqr","text":"","code":"mixediqr(data, var, output, x = 3, pc = FALSE, pcvar = NULL, boot = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/mixediqr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mixed Interquartile range and semiInterquartile range Walker et al., 2018 — mixediqr","text":"data Dataframe vector check outliers. var Variable used outlier detection data vector file. output Either clean: clean data output without outliers; outliers: outlier data frame vectors. x constant flagging outliers Walker et al., 2018). pc Whether principal component analysis computed. Default FALSE pcvar Principal component analysis e used outlier detection PCA. Default PC1 boot Whether bootstrapping computed. Default FALSE","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mixediqr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mixed Interquartile range and semiInterquartile range Walker et al., 2018 — mixediqr","text":"Either clean outliers","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mixediqr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mixed Interquartile range and semiInterquartile range Walker et al., 2018 — mixediqr","text":"Walker ML, Dovoedo YH, Chakraborti S, Hilton CW. 2018. Improved Boxplot Univariate Data.  American Statistician 72:348-353. American Statistical Association.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mixediqr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mixed Interquartile range and semiInterquartile range Walker et al., 2018 — mixediqr","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  danube <- system.file('extdata/danube.shp.zip', package='specleanr')  db <- sf::st_read(danube, quiet=TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd , lat = 'decimalLatitude', lon= 'decimalLongitude',                           colsp = 'speciescheck',                           bbox = db,                           minpts = 10)   logout <- mixediqr(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier') } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/mth.html","id":null,"dir":"Reference","previous_headings":"","what":"mth datasets with constant at each confidence interval levels. — mth","title":"mth datasets with constant at each confidence interval levels. — mth","text":"tibble data consist ","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mth datasets with constant at each confidence interval levels. — mth","text":"","code":"data(mth)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/mth.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"mth datasets with constant at each confidence interval levels. — mth","text":"tibble 7 rows 9 columns.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mth datasets with constant at each confidence interval levels. — mth","text":"data extracted (Schwertman & de Silva 2007).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mth.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"mth datasets with constant at each confidence interval levels. — mth","text":"Schwertman NC, de Silva R. 2007. Identifying outliers sequential fences. Computational Statistics Data Analysis 51:3800–3810.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/mth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mth datasets with constant at each confidence interval levels. — mth","text":"","code":"if (FALSE) { # \\dontrun{  data(\"mth\") mth } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/multiabsolute.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies absolute outliers for multiple species. — multiabsolute","title":"Identifies absolute outliers for multiple species. — multiabsolute","text":"Identifies absolute outliers multiple species.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/multiabsolute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies absolute outliers for multiple species. — multiabsolute","text":"","code":"multiabsolute(   x,   threshold = NULL,   props = FALSE,   warn = FALSE,   autothreshold = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/multiabsolute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies absolute outliers for multiple species. — multiabsolute","text":"x datacleaner class methods used identify outliers multidetect function. threshold numeric. Maximum value denote absolute outlier. threshold ranges 0, indicates point flagged outlier detection method outlier, 1, means record absolute true outlier since methods identified . extremes, many records classified low threshold values, may due individual method weakness strength data distribution. Also, higher threshold values, true outliers retained. example, ten methods considered 9 methods flag record outlier, cutoff 1 used, particular record retained. Therefore, default cutoff 0.6, autothreshold can used select appropriate threshold. props dataframe. output proportional absoluteness outlier. warn logical. TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. autothreshold vector. Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/multiabsolute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies absolute outliers for multiple species. — multiabsolute","text":"vector absolute outliers, best outlier detection method data frame absolute outliers proportions","code":""},{"path":[]},{"path":"https://anthonybasooma.github.io/specleanr/reference/multiabsolute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies absolute outliers for multiple species. — multiabsolute","text":"","code":"if (FALSE) { # \\dontrun{  data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                       lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection outliersdf <- multidetect(data = extdf, output='outlier', var = 'bio6',                           exclude = c('x','y'), multiple = TRUE,                           methods = c('mixediqr', \"iqr\", \"mahal\", \"iqr\", \"logboxplot\"),                           showErrors = FALSE, warn = TRUE, verbose = FALSE, sdm = TRUE)  totabs_counts <- multiabsolute(x = outliersdf, threshold = 0.2) } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/multibestmethod.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify best method for outlier removal for multiple species using majority votes. — multibestmethod","title":"Identify best method for outlier removal for multiple species using majority votes. — multibestmethod","text":"Identify best method outlier removal multiple species using majority votes.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/multibestmethod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify best method for outlier removal for multiple species using majority votes. — multibestmethod","text":"","code":"multibestmethod(   x,   threshold = NULL,   warn = FALSE,   verbose = FALSE,   autothreshold = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/multibestmethod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify best method for outlier removal for multiple species using majority votes. — multibestmethod","text":"x Output outlier detection. threshold value consider whether outlier absolute outlier . warn TRUE, warning whether absolute outliers obtained low threshold indicated. Default FALSE. verbose Produce messages process . Default FALSE. autothreshold Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/multibestmethod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify best method for outlier removal for multiple species using majority votes. — multibestmethod","text":"best method outlier detection species","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/multibestmethod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify best method for outlier removal for multiple species using majority votes. — multibestmethod","text":"","code":"if (FALSE) { # \\dontrun{ data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                       lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection  outliersdf <- multidetect(data = extdf, output='outlier', var = 'bio6',                          exclude = c('x','y'), multiple = TRUE,                          methods = c('mixediqr', \"iqr\", \"mahal\", \"iqr\", \"logboxplot\"),                          showErrors = FALSE, warn = TRUE, verbose = FALSE, sdm = TRUE)  multbm <- multibestmethod(x = outliersdf, threshold = 0.2)#  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/multidetect.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensemble multiple outlier detection methods. — multidetect","title":"Ensemble multiple outlier detection methods. — multidetect","text":"function allows ensemble multiple outlier detection methods ably compare outliers flagged method.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/multidetect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensemble multiple outlier detection methods. — multidetect","text":"","code":"multidetect(   data,   var,   select = NULL,   output = \"outlier\",   exclude = NULL,   multiple,   var_col = NULL,   optpar = list(optdf = NULL, ecoparam = NULL, optspcol = NULL, direction = NULL, maxcol     = NULL, mincol = NULL, maxval = NULL, minval = NULL, checkfishbase = FALSE, mode =     NULL, lat = NULL, lon = NULL, pct = 80, warn = FALSE),   kmpar = list(k = 6, method = \"silhouette\", mode = \"soft\"),   ifpar = list(cutoff = 0.5, size = 0.7),   mahalpar = list(mode = \"soft\"),   jkpar = list(mode = \"soft\"),   zpar = list(type = \"mild\", mode = \"soft\"),   gloshpar = list(k = 3, metric = \"manhattan\", mode = \"soft\"),   knnpar = list(metric = \"manhattan\", mode = \"soft\"),   lofpar = list(metric = \"manhattan\", mode = \"soft\", minPts = 10),   methods,   bootSettings = list(run = FALSE, nb = 5, maxrecords = 30, seed = 1135, th = 0.6),   pc = list(exec = FALSE, npc = 2, q = T, pcvar = \"PC1\"),   verbose = FALSE,   spname = NULL,   warn = FALSE,   missingness = 0.1,   silence_true_errors = TRUE,   sdm = TRUE,   na.inform = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/multidetect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensemble multiple outlier detection methods. — multidetect","text":"data dataframe list. Data sets multiple single species extraction environment predictors. var character. variable check outliers especially one directly affects species distribution maximum temperature coldest month bioclimatic variables (IUCN Standards Petitions Committee, 2022)) stream power index hydromorphological parameters (Logez et al., 2012). parameter necessary univariate outlier detection methods Z-score. select vector columns used outlier detection. Make sure numeric columns accepted. output character. Either clean: data set outliers, outlier: output dataframe outliers. Default outlier. exclude vector. Exclude variables considered fitting one class model, example x y columns latitude/longitude column user want consider. multiple logical. multiple species considered, multiple must set TRUE FALSE single species. var_col string. column species names dataset species dataframe list. See pred_extract extracting environmental data. optpar list. Parameters species optimal ranges like temperatures ranges. details check ecological_ranges. kmpar list. Parameters k-means clustering like method number clusters tuning. details, check xkmeans. ifpar list. Isolation forest parameter settings. Parameters isolation model required include cutoff used denoting outliers. ranges 0 1 Default 0.5. Also, size data partitioning training determined. details check (Liu et al. 2008) mahalpar list. Parameters Malahanobis distance includes varying mode output  mahal. jkpar list. Parameters reverse jackknifing mainly mode used. details jknife. zpar list. Parameters z-score mode x parameter. details zscore gloshpar list. Parameters global local outlier score hierarchies distance metric used. details xglosh. knnpar list. Parameters varying distance matrix Euclidean Manhattan distance. details xknn lofpar list. Parameters local outlier factor distance matrix mode method implementation robust soft mode. details xlof. methods vector. Outlier detection methods considered. Use extractMethods get outlier detection methods implemented package. bootSettings list. list parameters implement bootstrapping mostly records 30. details checks boots. pc list. list parameters implement principal component analysis dimesnion reduction. details checks pca. verbose logical. whether return messages . Default FALSE. spname string. species name handled. warn logical. Whether return warning . Default TRUE. missingness numeric. Allowed missing values column allow user decide whether remove individual columns rows data sets. Default 0.1. Therefore,      column 10% missing values, removed dataset rather rows. silence_true_errors logical. Show execution errors therefore multiple species code break one methods fails execute. sdm logical user sets TRUE, strict data checks done including removing non-numeric columns datasets identification outliers. set FALSE non numeric columns left data variable concern checked numeric. Also, univariate methods allowed. Check broad_classify broad categories methods allowed. na.inform logical Inform NAs removed executing general datasets. Default FALSE.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/multidetect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensemble multiple outlier detection methods. — multidetect","text":"list outliers clean dataset datacleaner class. different attributes associated datacleaner class multidetect function. result: dataframe. list dataframes outliers flagged method. mode: logical. Indicating whether multiple TRUE FALSE. varused: character. Indicating variable used univariate outlier detection methods. : character. Whether outliers indicated user outlier data. methodsused: vector. different methods used outlier detection process. dfname: character. dataset name species records. exclude: vector. columns excluded outlier detection, .","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/multidetect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ensemble multiple outlier detection methods. — multidetect","text":"function computes different outlier detection methods including univariate, multivariate species      ecological ranges enables seamless comparison similarities outliers detected      method. can done multiple species single species dataframe lists dataframes      thereafter outliers can extracted using extract_clean_data function.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/multidetect.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ensemble multiple outlier detection methods. — multidetect","text":"IUCN Standards Petitions Committee. (2022). IUCN RED LIST THREATENED SPECIESTM Guidelines Using IUCN Red List Categories Criteria Prepared Standards Petitions Committee IUCN Species Survival Commission. https://www.iucnredlist.org/documents/RedListGuidelines.pdf. Liu, F. T., Ting, K. M., & Zhou, Z. H. (2008, December). Isolation forest. 2008 eighth ieee international conference data mining (pp. 413-422). IEEE.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/multidetect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensemble multiple outlier detection methods. — multidetect","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\") data(\"jdsdata\")  matchdata <- match_datasets(datasets = list(jds = jdsdata, efi=efidata),                             lats = 'lat',                             lons = 'lon',                             species = c('speciesname','scientificName'),                             date = c('Date', 'sampling_date'),                             country = c('JDS4_site_ID'))   datacheck <- check_names(matchdata, var_col= 'species', pct = 90, merge =TRUE)   danube <- system.file('extdata/danube.shp.zip', package='specleanr')  db <- sf::st_read(danube, quiet=TRUE)   worldclim <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  rdata <- pred_extract(data = datacheck,                      raster= worldclim ,                      lat = 'decimalLatitude',                     lon= 'decimalLongitude',                     colsp = 'speciescheck',                     bbox = db,                      multiple = TRUE,                     minpts = 10,                     list=TRUE,                     merge=F)   out_df <- multidetect(data = rdata, multiple = TRUE,                      var = 'bio6',                      output = 'outlier',                      exclude = c('x','y'),                      methods = c('zscore', 'adjbox','iqr', 'semiqr','hampel', 'kmeans',                                 'logboxplot', 'lof','iforest', 'mahal', 'seqfences'))   #optimal ranges in the multidetect: made up  optdata <- data.frame(species= c(\"Salmo trutta\", \"Abramis brama\"),                       mintemp = c(6, 1.6),maxtemp = c(20, 21),                        meantemp = c(8.5, 10.4), #ecoparam                       direction = c('greater', 'greater')) #species record  salmoabramis <- rdata[\"Salmo trutta\"]  #even if one species, please indicate multiple to TRUE, since its picked from pred_extract function  out_df <- multidetect(data = salmoabramis, multiple = TRUE,                       var = 'bio1',                       output = 'outlier',                       exclude = c('x','y'),                       methods = c('zscore', 'adjbox','iqr', 'semiqr','hampel', 'kmeans',                                   'logboxplot', 'lof','iforest', 'mahal', 'seqfences', 'optimal'),                       optpar = list(optdf=optdata, optspcol = 'species',                                     mincol = \"mintemp\", maxcol = \"maxtemp\")) #plot the number of outliers  #ggoutliers(out_df, 1)  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/ocindex.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies absolute outliers and their proportions for a single species. — ocindex","title":"Identifies absolute outliers and their proportions for a single species. — ocindex","text":"Identifies absolute outliers proportions single species.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ocindex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies absolute outliers and their proportions for a single species. — ocindex","text":"","code":"ocindex(   x,   sp = NULL,   threshold = NULL,   absolute = FALSE,   props = FALSE,   warn = FALSE,   autothreshold = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/ocindex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies absolute outliers and their proportions for a single species. — ocindex","text":"x datacleaner class methods used identify outliers multidetect function. sp string. Species name index multiple species considered outlier detection. threshold numeric. Maximum value denote absolute outlier. threshold ranges 0, indicates point flagged outlier detection method outlier, 1, means record absolute true outlier since methods identified . extremes, many records classified low threshold values, may due individual method weakness strength data distribution. Also, higher threshold values, true outliers retained. example, ten methods considered 9 methods flag record outlier, cutoff 1 used, particular record retained. Therefore, default cutoff 0.6, autothreshold can used select appropriate threshold. absolute logical. output absolute outliers species. props dataframe. output proportional absoluteness outlier. warn logical. TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. autothreshold vector. Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ocindex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies absolute outliers and their proportions for a single species. — ocindex","text":"vector dataframe absolute outliers, best outlier detection method data frame absolute outliers proportions","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/ocindex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies absolute outliers and their proportions for a single species. — ocindex","text":"","code":"if (FALSE) { # \\dontrun{ data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                       lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection  outliersdf <- multidetect(data = extdf, output='outlier', var = 'bio6',                           exclude = c('x','y'), multiple = TRUE,                           methods = c('mixediqr', \"iqr\", \"mahal\", \"iqr\", \"logboxplot\"),                           showErrors = FALSE, warn = TRUE, verbose = FALSE, sdm = TRUE)  ociss <- ocindex(x = outliersdf, sp= 8, threshold = 0.2, absolute = TRUE)# #No outliers detected in more than two methods  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/onesvm.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify outliers using One Class Support Vector Machines — onesvm","title":"Identify outliers using One Class Support Vector Machines — onesvm","text":"Identify outliers using One Class Support Vector Machines","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/onesvm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify outliers using One Class Support Vector Machines — onesvm","text":"","code":"onesvm(   data,   kernel = \"radial\",   tune = FALSE,   exclude = NULL,   output,   tpar = list(gamma = 1^(-1:1), epislon = seq(0, 1, 0.1), cost = 2^2:4, nu = seq(0.05, 1,     0.1)),   boot = FALSE,   pc = FALSE,   var,   pcvar = NULL )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/onesvm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify outliers using One Class Support Vector Machines — onesvm","text":"data Dataframe environmental variables extracted species recorded present absent. kernel Either radial, linear tune performed tuned version one-class svm. High computation requirements needed. exclude Exclude variables considered fitting one class model, example x y columns latitude/longitude column user doesnot want consider. output Either clean: dataset outliers outlier: output dataframe outliers. tpar list parameters varied tunning normal model. boot Whether bootstrapping computed. Default FALSE pc Whether principal component analysis computed. Default FALSE var variable concern, vital univariate outlier detection methods pcvar Principal component analysis e used outlier detection PCA. Default PC1","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/onesvm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify outliers using One Class Support Vector Machines — onesvm","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/onesvm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify outliers using One Class Support Vector Machines — onesvm","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  danube <- system.file('extdata/danube.shp.zip', package='specleanr')  db <- sf::st_read(danube, quiet=TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd ,                        lat = 'decimalLatitude',                        lon= 'decimalLongitude',                        colsp = 'speciescheck',                       bbox = db,                        minpts = 10)  nedata <- onesvm(data = refdata[['Salmo trutta']], exclude = c(\"x\", \"y\"),  output='outlier') } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/optimal_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimize threshold for clean data extraction. — optimal_threshold","title":"Optimize threshold for clean data extraction. — optimal_threshold","text":"Optimize threshold clean data extraction.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/optimal_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimize threshold for clean data extraction. — optimal_threshold","text":"","code":"optimal_threshold(   refdata,   outliers,   var_col = NULL,   warn = FALSE,   verbose = FALSE,   plot = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/optimal_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimize threshold for clean data extraction. — optimal_threshold","text":"refdata dataframe. Species data frame precleaned analysis. outliers datacleaner. Datacleaner output outliers flagged multidetect function. var_col string. column species names dataset species dataframe list. See pred_extract extracting environmental data. warn logical. TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. verbose logical. true, messages outlier flagging displayed. plot logical. show plot loess fitted function minima maxima (optimal threshold clean data).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/optimal_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimize threshold for clean data extraction. — optimal_threshold","text":"Either list dataframe cleaned records multiple species.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/optimal_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimize threshold for clean data extraction. — optimal_threshold","text":"","code":"if (FALSE) { # \\dontrun{  data(jdsdata) data(efidata) matchdata <- match_datasets(datasets = list(jds = jdsdata, efi = efidata),                             lats = 'lat',                             lons = 'lon',                             species = c('speciesname','scientificName'),                             country= c('JDS4_site_ID'),                             date=c('sampling_date', 'Date'))  datacheck <- check_names(matchdata, colsp= 'species', pct = 90, merge =TRUE)   db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet=TRUE)   worldclim <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  rdata <- pred_extract(data = datacheck,                       raster= worldclim ,                       lat = 'decimalLatitude',                       lon= 'decimalLongitude',                       colsp = 'speciescheck',                       bbox = db,                       multiple = TRUE,                       minpts = 10,                       list=TRUE,                       merge=F)   out_df <- multidetect(data = rdata, multiple = TRUE,                       var = 'bio6',                       output = 'outlier',                       exclude = c('x','y'),                       methods = c('zscore', 'adjbox','iqr', 'semiqr','hampel'))  #extracting optimal threshold for each species  threshopt <- optimal_threshold(refdata = rdata, outliers = out_df) } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies best outlier detection method using Overlap coefficient. — overlap","title":"Identifies best outlier detection method using Overlap coefficient. — overlap","text":"Identifies best outlier detection method using Overlap coefficient.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies best outlier detection method using Overlap coefficient. — overlap","text":"","code":"overlap(x, sp = NULL, threshold = NULL, warn = FALSE, autothreshold = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies best outlier detection method using Overlap coefficient. — overlap","text":"x datacleaner class methods used identify outliers multidetect function. sp string. Species name index multiple species considered outlier detection. threshold numeric. Maximum value denote absolute outlier. threshold ranges 0, indicates point flagged outlier detection method outlier, 1, means record absolute true outlier since methods identified . extremes, many records classified low threshold values, may due individual method weakness strength data distribution. Also, higher threshold values, true outliers retained. example, ten methods considered 9 methods flag record outlier, cutoff 1 used, particular record retained. Therefore, default cutoff 0.6, autothreshold can used select appropriate threshold. warn logical. TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. autothreshold vector. Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies best outlier detection method using Overlap coefficient. — overlap","text":"best method identifying outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/overlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies best outlier detection method using Overlap coefficient. — overlap","text":"","code":"if (FALSE) { # \\dontrun{  data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                     lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection  outliersdf <- multidetect(data = extdf, output='outlier', var = 'bio6',                          exclude = c('x','y'), multiple = TRUE,                          methods = c('mixediqr', \"iqr\", \"mahal\", \"iqr\", \"logboxplot\"),                          showErrors = FALSE, warn = TRUE, verbose = FALSE, sdm = TRUE)  overlapout <- overlap(x = outliersdf, sp= 8, threshold = 0.2)#   } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Implement principal component analysis for dimension reduction — pca","title":"Implement principal component analysis for dimension reduction — pca","text":"Implement principal component analysis dimension reduction","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implement principal component analysis for dimension reduction — pca","text":"","code":"pca(data, npc, q)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implement principal component analysis for dimension reduction — pca","text":"data Environmental dataframe npc Number principal components retained. Default 2 q show cumulative total variance explained npc selected.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/pcboot.html","id":null,"dir":"Reference","previous_headings":"","what":"To package both principal component analysis and bootstrapping. — pcboot","title":"To package both principal component analysis and bootstrapping. — pcboot","text":"package principal component analysis bootstrapping.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/pcboot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To package both principal component analysis and bootstrapping. — pcboot","text":"","code":"pcboot(pb, var, pc, boot, pcvar)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/pcboot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To package both principal component analysis and bootstrapping. — pcboot","text":"pb principal component bootstrapped data var variable concern, vital univariate outlier detection methods pc Whether principal component analysis computed. Default FALSE boot Whether bootstrapping computed. Default FALSE pcvar Principal component analysis e used outlier detection PCA. Default PC1","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/pred_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Preliminary data cleaning including removing duplicates, records outside a particular basin, and NAs. — pred_extract","title":"Preliminary data cleaning including removing duplicates, records outside a particular basin, and NAs. — pred_extract","text":"Preliminary data cleaning including removing duplicates, records   outside particular basin, NAs.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/pred_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preliminary data cleaning including removing duplicates, records outside a particular basin, and NAs. — pred_extract","text":"","code":"pred_extract(   data,   raster,   lat = NULL,   lon = NULL,   bbox = NULL,   colsp,   minpts = 10,   mp = TRUE,   rm_duplicates = TRUE,   na.rm = TRUE,   na.inform = FALSE,   list = TRUE,   merge = FALSE,   verbose = FALSE,   warn = FALSE,   coords = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/pred_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preliminary data cleaning including removing duplicates, records outside a particular basin, and NAs. — pred_extract","text":"data dataframe. Data frame multiple species one species checking records coordinates, duplicates, check records fall land, sea, country city centroids, geographical outliers(Zzika et al., 2022). raster raster. Environmental layers different providers WORLDCLIM (), Hydrogaphy90m (), CHELSA, Copernicus (). lat, lon coordinates. variable latitude longitude column names. bbox sf vector. Object class 'shapefile' particular basin considered. Bounding box vector points can also provided form \"c(xmin, ymin, xmax, ymax)\". xmin minimum longitude, ymin minimum latitude, xmax maximum longitude xmax minimum latitude. colsp string. variable already data determine groups considered extracting data. minpts numeric. Minimum number records species removing duplicates within particular basin. mp logical. TRUE, number minimum records minpts provided allow dropping groups less records. significant species distribution going fitted. rm_duplicates logical TRUE duplicates removed based species coordinates names. Default TRUE. na.rm logical TRUE, missing values discarded data extracted. DEFAULT TRUE. na.inform logical TRUE, missing values discarded data extracted message returned. DEFAULT FALSE. list logical. TRUE list multiple species data frames generated FALSE dataframe species data sets. Default TRUE merge logical. add columns species data data extraction. Default TRUE. verbose logical. TRUE message warnings produced. Default TRUE. warn logical. indicating whether show implementation warning . Default FALSE. coords logical. TRUE, original coordinates also returned attached extracted dataset. Default FALSE.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/pred_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preliminary data cleaning including removing duplicates, records outside a particular basin, and NAs. — pred_extract","text":"dataframe list precleaned data sets single multiple species.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/pred_extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preliminary data cleaning including removing duplicates, records outside a particular basin, and NAs. — pred_extract","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  danube <- system.file('extdata/danube.shp.zip', package='specleanr')  danubebasin <- sf::st_read(danube, quiet=TRUE)  #Get environmental data  worldclim <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  referencedata <- pred_extract(data = efidata,                           raster= worldclim ,                           lat =\"decimalLatitude\",                           lon = 'decimalLongitude',                           colsp = 'scientificName',                           bbox = danubebasin,                           list= TRUE, #list will be generated for all species                           minpts = 7, merge=T) } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/search_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the threshold using Locally estimated or weighted Scatterplot Smoothing. — search_threshold","title":"Determine the threshold using Locally estimated or weighted Scatterplot Smoothing. — search_threshold","text":"Determine threshold using Locally estimated weighted Scatterplot Smoothing.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/search_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the threshold using Locally estimated or weighted Scatterplot Smoothing. — search_threshold","text":"","code":"search_threshold(   data,   outliers,   sp = NULL,   plot = FALSE,   var_col = NULL,   warn = FALSE,   verbose = FALSE,   colors = c(\"darkblue\", \"orange\"),   useropt = 0.8 )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/search_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the threshold using Locally estimated or weighted Scatterplot Smoothing. — search_threshold","text":"data Dataframe. reference dataframe absolute outliers removed. outliers datacleaner. Datacleaner output outliers flagged multidetect function. sp string. Species name index multiple species considered outlier detection. plot logical. show plot loess fitted function minima maxima (optimal threshold clean data). var_col string. column species names dataset species dataframe list. See pred_extract extracting environmental data. warn logical. TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. verbose logical. true, messages outlier flagging displayed. colors vector. Colors true data loess fitted data lines. useropt numeric default 0.8, ensure loess maximum fall user optima properly searched using loess model.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/search_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the threshold using Locally estimated or weighted Scatterplot Smoothing. — search_threshold","text":"Returns numeric suitable threshold maxima loess smoothing.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/semiIQR.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes semi-interquantile range to flag suspicious outliers — semiIQR","title":"Computes semi-interquantile range to flag suspicious outliers — semiIQR","text":"Computes semi-interquantile range flag suspicious outliers","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/semiIQR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes semi-interquantile range to flag suspicious outliers — semiIQR","text":"","code":"semiIQR(data, var, output, x = 3, pc = FALSE, pcvar = NULL, boot = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/semiIQR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes semi-interquantile range to flag suspicious outliers — semiIQR","text":"data Dataframe check outliers var Environmental parameter considered flagging suspicious outliers output Either clean: dataframe suspicious outliers outlier: retrun dataframe outliers x constant create fence boundary detect outliers. pc Whether principal component analysis computed. Default FALSE pcvar Principal component analysis e used outlier detection PCA. Default PC1 boot Whether bootstrapping computed. Default FALSE","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/semiIQR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes semi-interquantile range to flag suspicious outliers — semiIQR","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/semiIQR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computes semi-interquantile range to flag suspicious outliers — semiIQR","text":"SemiInterquantile Ranges introduced adjusts whiskers either side flag suspicious outliers [Q1 – 3(Q2 (median) − Q1); Q3 + 3(Q3 − Q2)] ((Kimber 1990)). However, SIQR introduced constant values bounding fences lower upper quartiles (Rousseeuw & Hubert 2011), leads outlier swamping masking.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/semiIQR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computes semi-interquantile range to flag suspicious outliers — semiIQR","text":"Kimber AC. 1990. Exploratory Data Analysis Possibly Censored Data Skewed Distributions. Page Source: Journal Royal Statistical Society. Series C (Applied Statistics).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/semiIQR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes semi-interquantile range to flag suspicious outliers — semiIQR","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  danube <- system.file('extdata/danube.shp.zip', package='specleanr')  db <- sf::st_read(danube, quiet=TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd , lat = 'decimalLatitude', lon= 'decimalLongitude',                           colsp = 'speciescheck',                           bbox = db,                           minpts = 10)   semiout <- semiIQR(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier')  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/seqfences.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential fences method — seqfences","title":"Sequential fences method — seqfences","text":"Sequential fences method","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/seqfences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential fences method — seqfences","text":"","code":"seqfences(   data,   var,   output,   gamma = 0.95,   mode = \"eo\",   pc = FALSE,   pcvar = NULL,   boot = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/seqfences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential fences method — seqfences","text":"data Dataframe vector check outliers. var Variable used outlier detection data vector file. output Either clean: clean data output without outliers; outliers: outlier data frame vectors. gamma numeric. p-values used classify record outlier. lower p-value, extremeness outlier Schwertman & de Silva 2007. mode string. Indicates extremeness outlier. pc Whether principal component analysis computed. Default FALSE pcvar Principal component analysis e used outlier detection PCA. Default PC1 boot Whether bootstrapping computed. Default FALSE","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/seqfences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential fences method — seqfences","text":"Dataframe vector without outliers","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/seqfences.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sequential fences method — seqfences","text":"Sequential fences modification TUKEY boxplot, data divided groups fences Schwertman & de Silva 2007. groups can range 1, flags mild outliers 6 extreme outliers ()","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/seqfences.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sequential fences method — seqfences","text":"Schwertman NC, de Silva R. 2007. Identifying outliers sequential fences. Computational Statistics Data Analysis 51:3800-3810. Schwertman NC, Owens MA, Adnan R. 2004. simple general boxplot method identifying outliers. Computational Statistics Data Analysis 47:165-174. Dastjerdy B, Saeidi , Heidarzadeh S. 2023. Review Applicable Outlier Detection Methods Treat Geomechanical Data. Geotechnics 3:375-396. MDPI AG.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/seqfences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequential fences method — seqfences","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  danube <- system.file('extdata/danube.shp.zip', package='specleanr')  db <- sf::st_read(danube, quiet=TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd , lat = 'decimalLatitude', lon= 'decimalLongitude',                           colsp = 'speciescheck',                           bbox = db,                           minpts = 10)   sqout <- seqfences(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier') } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/show-datacleaner-method.html","id":null,"dir":"Reference","previous_headings":"","what":"set method for displaying output details after outlier detection. — show,datacleaner-method","title":"set method for displaying output details after outlier detection. — show,datacleaner-method","text":"set method displaying output details outlier detection.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/show-datacleaner-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set method for displaying output details after outlier detection. — show,datacleaner-method","text":"","code":"# S4 method for class 'datacleaner' show(object)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/show-datacleaner-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set method for displaying output details after outlier detection. — show,datacleaner-method","text":"object data model outlier detection.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/smc.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify best outlier detection method using simple matching coefficient. — smc","title":"Identify best outlier detection method using simple matching coefficient. — smc","text":"Identify best outlier detection method using simple matching coefficient.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/smc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify best outlier detection method using simple matching coefficient. — smc","text":"","code":"smc(x, sp = NULL, threshold = NULL, warn = FALSE, autothreshold = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/smc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify best outlier detection method using simple matching coefficient. — smc","text":"x datacleaner class methods used identify outliers multidetect function. sp string. Species name index multiple species considered outlier detection. threshold numeric. Maximum value denote absolute outlier. threshold ranges 0, indicates point flagged outlier detection method outlier, 1, means record absolute true outlier since methods identified . extremes, many records classified low threshold values, may due individual method weakness strength data distribution. Also, higher threshold values, true outliers retained. example, ten methods considered 9 methods flag record outlier, cutoff 1 used, particular record retained. Therefore, default cutoff 0.6, autothreshold can used select appropriate threshold. warn logical. TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. autothreshold vector. Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/smc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify best outlier detection method using simple matching coefficient. — smc","text":"best method identifying outliers based simple matching coefficient.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/smc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify best outlier detection method using simple matching coefficient. — smc","text":"","code":"if (FALSE) { # \\dontrun{ data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                       lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection  outliersdf <- multidetect(data = extdf, output='outlier', var = 'bio6',                          exclude = c('x','y'), multiple = TRUE,                          methods = c('mixediqr', \"iqr\", \"mahal\", \"iqr\", \"logboxplot\"),                          showErrors = FALSE, warn = TRUE, verbose = FALSE, sdm = TRUE)  smcout <- smc(x = outliersdf, sp= 8, threshold = 0.2)#   } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/sorensen.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies best outlier detection method suing Sorensen Similarity Index. — sorensen","title":"Identifies best outlier detection method suing Sorensen Similarity Index. — sorensen","text":"Identifies best outlier detection method suing Sorensen Similarity Index.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/sorensen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies best outlier detection method suing Sorensen Similarity Index. — sorensen","text":"","code":"sorensen(x, sp = NULL, threshold = NULL, warn = FALSE, autothreshold = FALSE)"},{"path":"https://anthonybasooma.github.io/specleanr/reference/sorensen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies best outlier detection method suing Sorensen Similarity Index. — sorensen","text":"x datacleaner class methods used identify outliers multidetect function. sp string. Species name index multiple species considered outlier detection. threshold numeric. Maximum value denote absolute outlier. threshold ranges 0, indicates point flagged outlier detection method outlier, 1, means record absolute true outlier since methods identified . extremes, many records classified low threshold values, may due individual method weakness strength data distribution. Also, higher threshold values, true outliers retained. example, ten methods considered 9 methods flag record outlier, cutoff 1 used, particular record retained. Therefore, default cutoff 0.6, autothreshold can used select appropriate threshold. warn logical. TRUE, warning whether absolute outliers obtained low threshold indicated. Default TRUE. autothreshold vector. Identifies threshold mean number absolute outliers.search limited within 0.51 1 since thresholds less deemed inappropriate identifying absolute outliers. autothreshold used threshold set NULL.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/sorensen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies best outlier detection method suing Sorensen Similarity Index. — sorensen","text":"best method identifying outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/sorensen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies best outlier detection method suing Sorensen Similarity Index. — sorensen","text":"","code":"if (FALSE) { # \\dontrun{  data(efidata)  db <- sf::read_sf(system.file('extdata/danube/basinfinal.shp', package = \"specleanr\"), quiet = TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package = \"specleanr\"))  checkname <- check_names(data=efidata, colsp ='scientificName', pct = 90, merge = T)  extdf <- pred_extract(data = checkname, raster = wcd,                       lat = 'decimalLatitude', lon = 'decimalLongitude',                      colsp = 'speciescheck',                      list = TRUE,verbose = F,                      minpts = 6,merge = F)#basin removed   #outlier detection  outliersdf <- multidetect(data = extdf, output='outlier', var = 'bio6',                          exclude = c('x','y'), multiple = TRUE,                          methods = c('mixediqr', \"iqr\", \"mahal\", \"iqr\", \"logboxplot\"),                          showErrors = FALSE, warn = TRUE, verbose = FALSE, sdm = TRUE)  sordata <- sorensen(x = outliersdf, sp= 8, threshold = 0.2)#   } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/thermal_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Collates minimum, maximum, and preferable temperatures from FishBase. — thermal_ranges","title":"Collates minimum, maximum, and preferable temperatures from FishBase. — thermal_ranges","text":"Collates minimum, maximum, preferable temperatures FishBase.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/thermal_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collates minimum, maximum, and preferable temperatures from FishBase. — thermal_ranges","text":"","code":"thermal_ranges(   x,   colsp = NULL,   verbose = F,   pct = 90,   sn = FALSE,   synonym = fishbase(tables = \"synonym\"),   ranges = fishbase(tables = \"ranges\") )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/thermal_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collates minimum, maximum, and preferable temperatures from FishBase. — thermal_ranges","text":"x dataframe string. species names dataframe species aid retrieving temperature ranges FishBase. colsp string. x data frame, column species required. Otherwise list species vector, colsp NULL. verbose logical return implementation messages. Default FALSE. pct numeric. Provide perecentage similarity species name provided one FishBase. lower pct value, higher chances getting wrong species standard databases (FishBase). plausible pct value greater 0.9. sn logical. Either output synonym accepted names. parameter reduces duplication species synonyms old name etc. information see FishBase. synonym fishbasedataframe. standard database species synonym names FishBase. See FishBase information. ranges fishbasedataframe. standard database ecological ranges FishBase. See FishBase information.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/thermal_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collates minimum, maximum, and preferable temperatures from FishBase. — thermal_ranges","text":"Data table minimum, maximum preferable species temperatures FishBase.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/thermal_ranges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collates minimum, maximum, and preferable temperatures from FishBase. — thermal_ranges","text":"","code":"if (FALSE) { # \\dontrun{  x <- thermal_ranges(x = \"Salmo trutta\") } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/xglosh.html","id":null,"dir":"Reference","previous_headings":"","what":"Global-Local Outlier Score from Hierarchies — xglosh","title":"Global-Local Outlier Score from Hierarchies — xglosh","text":"Global-Local Outlier Score Hierarchies","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xglosh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global-Local Outlier Score from Hierarchies — xglosh","text":"","code":"xglosh(   data,   k,   output,   exclude = NULL,   metric = \"manhattan\",   mode = \"soft\",   pc = FALSE,   boot = FALSE,   var,   pcvar = NULL )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/xglosh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global-Local Outlier Score from Hierarchies — xglosh","text":"data Data frame species records environmental data. k size neighborhood (Hahsler et al 2022). output Either clean: data frame suspicious outliers outlier: return dataframe outliers. exclude Exclude variables considered fitting one class model, example x y columns latitude/longitude column user want consider. metric different metric distances compute distances among environmental predictors. See dist function te different distances applied. different measures allowed including \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\". mode includes soft outliers removed using mean compute z-scores robust median absolute deviation. pc Whether principal component analysis computed. Default FALSE boot Whether bootstrapping computed. Default FALSE var variable concern, vital univariate outlier detection methods pcvar Principal component analysis e used outlier detection PCA. Default PC1","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xglosh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global-Local Outlier Score from Hierarchies — xglosh","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xglosh.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global-Local Outlier Score from Hierarchies — xglosh","text":"Campello, Ricardo JGB, Davoud Moulavi, Arthur Zimek, Joerg Sander. Hierarchical density estimates data clustering, visualization, outlier detection. ACM Transactions Knowledge Discovery Data (TKDD) 10, . 1 (2015). doi:10.1145/2733381 Hahsler M, Piekenbrock M (2022). dbscan: Density-Based Spatial Clustering Applications Noise (DBSCAN) Related Algorithms. R package version 1.1-11, <https://CRAN.R-project.org/package=dbscan>","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xglosh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global-Local Outlier Score from Hierarchies — xglosh","text":"","code":"if (FALSE) { # \\dontrun{ data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  danube <- system.file('extdata/danube.shp.zip', package='specleanr')  db <- sf::st_read(danube, quiet=TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd ,                        lat = 'decimalLatitude',                        lon= 'decimalLongitude',                        colsp = 'speciescheck',                        bbox = db,                        minpts = 10)  gloshout <- xglosh(data = refdata[['Salmo trutta']], exclude = c(\"x\", \"y\"),                 output='outlier', metric ='manhattan', k = 3,                  mode = \"soft\")                  } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/xkmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Flags outliers using kmeans clustering method — xkmeans","title":"Flags outliers using kmeans clustering method — xkmeans","text":"Flags outliers using kmeans clustering method","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xkmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flags outliers using kmeans clustering method — xkmeans","text":"","code":"xkmeans(   data,   k,   exclude = NULL,   output,   mode = \"soft\",   method = \"silhouette\",   seed = 1135,   verbose = FALSE,   pc = FALSE,   boot = FALSE,   var,   pcvar = NULL )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/xkmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flags outliers using kmeans clustering method — xkmeans","text":"data Dataframe check outliers k number clusters used optimization. greater 1. many species k greater 10 ably cater species search optimal k using different optimization methods kmethod exclude Exclude variables considered fitting one class model, example x y columns latitude/longitude column user want consider. output Either clean: data set outliers outlier: output data frame outliers. mode Either robust, robust mode used uses median instead mean median absolute deviation median. method method used kmeans clustering. Default silhouette. Elbow method can used user input required, therefore multiple outlier detection method possible. seed integer fix maintain iterations kmeans method optimisation. verbose indicate messages default FALSE. pc Whether principal component analysis computed. Default FALSE boot Whether bootstrapping computed. Default FALSE var variable concern, vital univariate outlier detection methods pcvar Principal component analysis e used outlier detection PCA. Default PC1","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xkmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flags outliers using kmeans clustering method — xkmeans","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xkmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flags outliers using kmeans clustering method — xkmeans","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  danube <- system.file('extdata/danube.shp.zip', package='specleanr')  db <- sf::st_read(danube, quiet=TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd ,                         lat = 'decimalLatitude',                         lon= 'decimalLongitude',                         colsp = 'speciescheck',                         bbox = db,                         minpts = 10)  kmeansout <- xkmeans(data = refdata[['Salmo trutta']],                       output='outlier', exclude = c('x', 'y'), mode = 'soft', k=3) } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/xknn.html","id":null,"dir":"Reference","previous_headings":"","what":"k-nearest neighbors for outlier detection — xknn","title":"k-nearest neighbors for outlier detection — xknn","text":"k-nearest neighbors outlier detection","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xknn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"k-nearest neighbors for outlier detection — xknn","text":"","code":"xknn(   data,   output,   exclude = NULL,   metric = \"manhattan\",   mode = \"soft\",   pc = FALSE,   boot = FALSE,   var,   pcvar = NULL )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/xknn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"k-nearest neighbors for outlier detection — xknn","text":"data Data frame species records environmental data. output Either clean: data frame suspicious outliers outlier: return dataframe outliers. exclude Exclude variables considered fitting one class model, example x y columns latitude/longitude column user want consider. metric different metric distances compute distances among environmental predictors. See dist function te different distances applied. different measures allowed including \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\". mode includes soft outliers removed using mean compute z-scores robust median absolute deviation. pc Whether principal component analysis computed. Default FALSE boot Whether bootstrapping computed. Default FALSE var variable concern, vital univariate outlier detection methods pcvar Principal component analysis e used outlier detection PCA. Default PC1","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xknn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"k-nearest neighbors for outlier detection — xknn","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xknn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"k-nearest neighbors for outlier detection — xknn","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  danube <- system.file('extdata/danube.shp.zip', package='specleanr')  db <- sf::st_read(danube, quiet=TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd ,                        lat = 'decimalLatitude',                        lon= 'decimalLongitude',                        colsp = 'speciescheck',                        bbox = db,                        minpts = 10)  lofout <- xknn(data = refdata[['Salmo trutta']], exclude = c(\"x\", \"y\"),                 output='outlier', metric ='manhattan',                  mode = \"soft\") } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/xlof.html","id":null,"dir":"Reference","previous_headings":"","what":"Flags suspicious using the local outlier factor or Density-Based Spatial Clustering of Applications with Noise. — xlof","title":"Flags suspicious using the local outlier factor or Density-Based Spatial Clustering of Applications with Noise. — xlof","text":"Flags suspicious using local outlier factor Density-Based Spatial Clustering Applications Noise.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xlof.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flags suspicious using the local outlier factor or Density-Based Spatial Clustering of Applications with Noise. — xlof","text":"","code":"xlof(   data,   output,   minPts,   exclude = NULL,   metric = \"manhattan\",   mode = \"soft\",   pc = FALSE,   boot = FALSE,   var,   pcvar = NULL )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/xlof.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flags suspicious using the local outlier factor or Density-Based Spatial Clustering of Applications with Noise. — xlof","text":"data Data frame species records environmental data output Either clean: data frame suspicious outliers outlier: return dataframe outliers. minPts Minimum neighbors around records. exclude Exclude variables considered fitting one class model, example x y columns latitude/longitude column user want consider. metric Distance-based measure examine distance variables. Default manhattan. mode Either soft mean used robust mad used. Default soft. pc Whether principal component analysis computed. Default FALSE boot Whether bootstrapping computed. Default FALSE var variable concern, vital univariate outlier detection methods pcvar Principal component analysis e used outlier detection PCA. Default PC1","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xlof.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flags suspicious using the local outlier factor or Density-Based Spatial Clustering of Applications with Noise. — xlof","text":"Dataframe outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/xlof.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flags suspicious using the local outlier factor or Density-Based Spatial Clustering of Applications with Noise. — xlof","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  danube <- system.file('extdata/danube.shp.zip', package='specleanr')  db <- sf::st_read(danube, quiet=TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd ,                        lat = 'decimalLatitude',                        lon= 'decimalLongitude',                        colsp = 'speciescheck',                       bbox = db,                        minpts = 10)  lofout <- xlof(data = refdata[['Salmo trutta']], exclude = c(\"x\", \"y\"),                 output='outlier', metric ='manhattan',                 minPts = 10, mode = \"soft\") } # }"},{"path":"https://anthonybasooma.github.io/specleanr/reference/zscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes z-scores to flag environmental outliers. — zscore","title":"Computes z-scores to flag environmental outliers. — zscore","text":"Computes z-scores flag environmental outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/zscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes z-scores to flag environmental outliers. — zscore","text":"","code":"zscore(   data,   var,   output = \"outlier\",   type = \"mild\",   mode = \"soft\",   pc = FALSE,   pcvar = NULL,   boot = FALSE )"},{"path":"https://anthonybasooma.github.io/specleanr/reference/zscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes z-scores to flag environmental outliers. — zscore","text":"data Dataframe vector check outliers. var Variable considered flagging suspicious outliers. output Either clean: data frame suspicious outliers outlier: return dataframe outliers. type Either mild zscore cut 2.5 extreme zscore >3. mode Either robust, robust mode used uses median instead mean median absolute deviation median. pc Whether principal component analysis computed. Default FALSE pcvar Principal component analysis e used outlier detection PCA. Default PC1 boot Whether bootstrapping computed. Default FALSE","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/zscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes z-scores to flag environmental outliers. — zscore","text":"Data frame outliers.","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/zscore.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computes z-scores to flag environmental outliers. — zscore","text":"method uses mean estimator location standard deviation scale     (Rousseeuw & Hubert 2011), zero breakdown point,     influence function unbounded (robustness estimator outliers)     (Seo 2006; Rousseeuw & Hubert 2011). parameters     robust outliers, leads outlier masking swamping     (Rousseeuw & Hubert 2011). Records flagged outliers     Z-score exceeds 2.5 (Rousseeuw & Hubert 2011).","code":""},{"path":"https://anthonybasooma.github.io/specleanr/reference/zscore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes z-scores to flag environmental outliers. — zscore","text":"","code":"if (FALSE) { # \\dontrun{  data(\"efidata\")  gbd <- check_names(data = efidata, colsp='scientificName', pct=90, merge=TRUE)  danube <- system.file('extdata/danube.shp.zip', package='specleanr')  db <- sf::st_read(danube, quiet=TRUE)  wcd <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))  refdata <- pred_extract(data = gbd, raster= wcd , lat = 'decimalLatitude', lon= 'decimalLongitude',                           colsp = 'speciescheck',                           bbox = db,                           minpts = 10)   zout <- zscore(data = refdata[['Salmo trutta']], var = 'bio6', output='outlier')  } # }"}]
