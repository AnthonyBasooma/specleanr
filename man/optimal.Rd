% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimalbasedmethods.R
\name{optimal}
\alias{optimal}
\title{Detect outliers using predefined optimal ranges such as annual mean temperature from WORLDCLIM}
\usage{
optimal(
  data,
  var = NULL,
  output,
  min = NULL,
  max = NULL,
  ecolimit = NULL,
  direction = NULL
)
}
\arguments{
\item{data}{Dataframe of species records with environmental data}

\item{var}{Environmental parameter considered in flagging suspicious outliers}

\item{output}{Either clean: for a dataset with no outliers or outlier: to output a dataframe with outliers.}

\item{min}{Minimum temperature column from the standard optimal dataframe.}

\item{max}{Maximum temperature column from the standard optimal dataframe.}

\item{ecolimit}{If used then a single value is used and tgether with direction can be used to flag set otpimal conditions.
For example, if a mean of 10 is used, then ecolimit = 10 and direction can equal, less, greater or lesseqaul than
the stipulated value.}

\item{direction}{Indicates which direction takes for the ecolimit. For example, >ecolimit}
}
\value{
Dataframe with or with no outliers.
}
\description{
Detect outliers using predefined optimal ranges such as annual mean temperature from WORLDCLIM
}
\examples{

\dontrun{

#' library(terra)

#species data from online databases

gbdata <- df_retronline(data='Gymnocephalus baloni', gbiflim = 100, inatlim = 100, vertlim = 100)

gbfinal <- merge_all(online = gbdata)

gbchecked <- check_names(data = gbfinal, colsp='species', pct=90, merge=TRUE)

#preclean and extract

danube <- system.file('extdata/danube/basinfinal.shp', quiet=TRUE, package='specleanr')

danubebasin <- sf::st_read(danube)

#Get environmental data

#worldclim_bio <- env_download(var='bio', resolution = 10, basin = danube, folder='worlclimddata')

worldclim <- terra::rast(system.file('extdata/worldclim.tiff', quiet=TRUE, package='specleanr'))

precleaned <- precleaner(data = gbchecked,
                          raster= worldclim ,
                          lat = 'decimalLatitude',
                          lon= 'decimalLongitude',
                          colsp = 'speciescheck',
                          basin = danubebasin,
                          multiple = FALSE,
                          minpts = 10)

#outliers
spoptimal_df <- optimal(data = precleaned, var = 'bio1', output='outlier', min = 4, max =20)

#clean
spoptimal_df <- optimal(data = precleaned, var = 'bio1', output='clean', min = 4, max =20)

}


}
