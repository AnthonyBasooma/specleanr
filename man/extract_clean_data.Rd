% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataextraction.R
\name{extract_clean_data}
\alias{extract_clean_data}
\title{Extract final clean data using either absolute or best method generated outliers.}
\usage{
extract_clean_data(
  refdata,
  outliers,
  sp = NULL,
  mode = "best",
  colsp = NULL,
  threshold = NULL,
  verbose = TRUE,
  warn = TRUE,
  pabs = 10,
  autothreshold = FALSE
)
}
\arguments{
\item{refdata}{The reference data for the species used in outlier detection.}

\item{outliers}{Output from the outlier detection process.}

\item{sp}{species name. NULL if a single species is considered in outlier detection.}

\item{mode}{Either absolute to use absolute outliers to filter data or bestmethod to outliers from best method}

\item{colsp}{A parameter to be used if the \code{data} is a data frame and the user must indicate the column wih species names.}

\item{threshold}{value to consider whether the outlier is an absolute outlier or not.}

\item{verbose}{Produces messages or not. Default \strong{FALSE}.}

\item{warn}{If \strong{FALSE}, warning on whether absolute outliers obtained at a low threshold is indicated. Default \strong{TRUE}.}

\item{pabs}{Percentage of outliers allowed to be extracted from the data. If \code{bestmethod} is used to extract outliers and the \code{pabs} is exceeded,
the absolute outliers are removed instead. This because some records  in the best methods are repeated and they will likely to remove true values as outliers.}

\item{autothreshold}{Identifies the threshold with mean number of absolute outliers.The search is limited within 0.51 to 1 since thresholds less than
are deemed inappropriate for identifying absolute outliers. The autothreshold is used when \code{threshold} is set to \code{NULL}.}
}
\value{
cleaned data frame of species records.
}
\description{
Extract final clean data using either absolute or best method generated outliers.
}
\examples{

\dontrun{

data(jdsdata)

data(efidata)


matchdata <- merge_datasets(datasets = list(jds = jdsdata, efi = efidata),
                    lats = 'lat',
                    lons = 'lon',
                    species = c('speciesname','scientificName'),
                    country= c('JDS4_site_ID),
                    dates=c('sampling_date', 'Date'))

datacheck <- check_names(matchdata, colsp= 'species', pct = 90, merge =TRUE)


db <- sf::st_read(system.file('extdata/danube/basinfinal.shp', package='specleanr'), quiet=TRUE)


worldclim <- terra::rast(system.file('extdata/worldclim.tiff', package='specleanr'))

rdata <- predextract(data = datacheck,
                          raster= worldclim ,
                          lat = 'decimalLatitude',
                          lon= 'decimalLongitude',
                          colsp = 'speciescheck',
                          bbox = db,
                          multiple = TRUE,
                          minpts = 10,
                          list=TRUE,
                          merge=F)


out_df <- multidetect(data = rdata, multiple = TRUE,
                       var = 'bio6',
                        output = 'outlier',
                        exclude = c('x','y'),
                        methods = c('zscore', 'adjbox',iqr', 'semiqr','hampel'),
                        kmpar =list(k = 6, method='silhouette'),
                        ifpar = list(cutoff = 0.5, size=0.7))

 #extracting use the absolute method for one species

 extractclean_abs <- extract_clean_data(data = precleaned, outliers = out_df, sp = 1,
 type = 'abs')

 bestmout <- extract_clean_data(data = rdata, outliers = out_df, sp = 1,
  type = 'best')

}

}
