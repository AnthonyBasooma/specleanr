% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataacess.R
\name{getdata}
\alias{getdata}
\title{Download species records from online database.}
\usage{
getdata(
  data,
  colsp = NULL,
  basin = NULL,
  mode = "all",
  databases = NULL,
  gbiflim = 1e+06,
  vertlim = 1000,
  inatlim = 3000,
  verbose = TRUE
)
}
\arguments{
\item{data}{Data frame, list or vector of species names to retrieve records from online databases (GBIF, VertNET and iNaturalist).}

\item{colsp}{A variable of species names. Provided if data is a data frame, so not required for lists and vector.}

\item{basin}{shapefile to retrieve records within a particular area. Otherwise all records from the GBIF will be downloaded.}

\item{mode}{Consider all the databases, namely, GBIF, VertNet and iNaturalist, or custom for selected. Default 'all'}

\item{databases}{User defined combination of the databases to collate data from. Even only one can be considered.}

\item{gbiflim}{Limits on the records from the Global Biodiversity Information Platform}

\item{vertlim}{Limits on the records from VertNET.}

\item{inatlim}{Limits on the records from iNaturalist database.}

\item{verbose}{\strong{TRUE} if detailed messages should be indicated and \strong{FALSE} if download messages are not needed.
 Dafualt \strong{TRUE}.

 @details
       Note always check the validity of the species name with standard database FishBase or World Register of Marine Species.
       If the records are more than 50000 in GBIF, and extent can be provide to limit the download.}
}
\value{
Lists of species records from online databases
}
\description{
Download species records from online database.
}
\examples{

\dontrun{

gbaloni <- check_names(data = 'gymnocephalus baloni', pct=90)

gbdata <- getdata(data=gbaloni, gbiflim = 100, inatlim = 100, vertlim = 100)

#Get for two species
sp_records <- getdata(data=c('Gymnocephalus baloni', 'Hucho hucho'),gbiflim = 100,
                            inatlim = 100,
                            vertlim = 100)

#3. Generate species list from a dataframe

data(efidata)

danube <- system.file('extdata/danube/basinfinal.shp', package='specleanr')

danubebasin <- sf::st_read(danube, quiet=TRUE)

datachecked <- check_names(data= efidata,colsp = 'species', pct=90, merge = TRUE)#clean names

Onlinedf <- getdata(data = datachecked, colsp='speciescheck', basin=danubebasin)

}


}
